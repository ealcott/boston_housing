<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0623.1502                               -->
<workbook original-version='18.1' source-build='2023.1.3 (20231.23.0623.1502)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelRelationshipPerfOptions.true...ObjectModelRelationshipPerfOptions />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='font-family' value='Benton Sans Book' />
      <format attr='color' value='#333333' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='mass_popchange (boston.mass_popchange)+ (postgres)' inline='true' name='federated.1q0j7hm118j0ya102uorv0lmegt9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1xu69ih0r0jo0z17su8j20t3cevr'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1xu69ih0r0jo0z17su8j20t3cevr' name='mass_popchange' table='[boston].[mass_popchange]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.1xu69ih0r0jo0z17su8j20t3cevr' name='mass_popchange' table='[boston].[mass_popchange]' type='table' />
          <relation connection='postgres.1xu69ih0r0jo0z17su8j20t3cevr' name='migration' table='[boston].[migration]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[change]' value='[mass_popchange].[change]' />
          <map key='[city (migration)]' value='[migration].[city]' />
          <map key='[city]' value='[mass_popchange].[city]' />
          <map key='[date_]' value='[migration].[date_]' />
          <map key='[dest_percent_leavers]' value='[migration].[dest_percent_leavers]' />
          <map key='[destination_city]' value='[migration].[destination_city]' />
          <map key='[destination_display]' value='[migration].[destination_display]' />
          <map key='[destination_state]' value='[migration].[destination_state]' />
          <map key='[origin]' value='[migration].[origin]' />
          <map key='[origin_display]' value='[migration].[origin_display]' />
          <map key='[origin_percent_dest_incomers]' value='[migration].[origin_percent_dest_incomers]' />
          <map key='[origin_state]' value='[migration].[origin_state]' />
          <map key='[pct_of_dest_from_origin]' value='[migration].[pct_of_dest_from_origin]' />
          <map key='[pct_of_origin_to_dest]' value='[migration].[pct_of_origin_to_dest]' />
          <map key='[percent_change]' value='[mass_popchange].[percent_change]' />
          <map key='[pop2021]' value='[mass_popchange].[pop2021]' />
          <map key='[pop2022]' value='[mass_popchange].[pop2022]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_20D333274A994C9B90CA7296D409C689]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2021</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pop2021]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>pop2021</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_20D333274A994C9B90CA7296D409C689]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2022</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pop2022]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>pop2022</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_20D333274A994C9B90CA7296D409C689]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>change</remote-name>
            <remote-type>131</remote-type>
            <local-name>[change]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>change</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_20D333274A994C9B90CA7296D409C689]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_change</remote-name>
            <remote-type>131</remote-type>
            <local-name>[percent_change]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>percent_change</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_20D333274A994C9B90CA7296D409C689]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>date_</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>origin</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_display</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin_display]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>origin_display</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin_state]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>origin_state</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination_city]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>destination_city</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_display</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination_display]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>destination_display</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination_state]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>destination_state</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_of_origin_to_dest</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pct_of_origin_to_dest]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>pct_of_origin_to_dest</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_of_dest_from_origin</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pct_of_dest_from_origin]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>pct_of_dest_from_origin</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_percent_leavers</remote-name>
            <remote-type>131</remote-type>
            <local-name>[dest_percent_leavers]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>dest_percent_leavers</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_percent_dest_incomers</remote-name>
            <remote-type>131</remote-type>
            <local-name>[origin_percent_dest_incomers]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>origin_percent_dest_incomers</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city (migration)]</local-name>
            <parent-name>[migration]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='mass_popchange' datatype='table' name='[__tableau_internal_object_id__].[mass_popchange (boston.mass_popchange)_20D333274A994C9B90CA7296D409C689]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='migration' datatype='table' name='[__tableau_internal_object_id__].[migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6]' role='measure' type='quantitative' />
      <column caption='Change' datatype='real' name='[change]' role='measure' type='quantitative' />
      <column caption='City (Migration)' datatype='string' name='[city (migration)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
      <column caption='Dest Percent Leavers' datatype='real' name='[dest_percent_leavers]' role='measure' type='quantitative' />
      <column caption='Destination City' datatype='string' name='[destination_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Destination Display' datatype='string' name='[destination_display]' role='dimension' type='nominal' />
      <column caption='Destination State' datatype='string' name='[destination_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
      <column caption='Origin Display' datatype='string' name='[origin_display]' role='dimension' type='nominal' />
      <column caption='Origin Percent Dest Incomers' datatype='real' name='[origin_percent_dest_incomers]' role='measure' type='quantitative' />
      <column caption='Origin State' datatype='string' name='[origin_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Pct Of Dest From Origin' datatype='real' name='[pct_of_dest_from_origin]' role='measure' type='quantitative' />
      <column caption='Pct Of Origin To Dest' datatype='real' name='[pct_of_origin_to_dest]' role='measure' type='quantitative' />
      <column caption='Percent Change' datatype='real' name='[percent_change]' role='measure' type='quantitative' />
      <column caption='Pop2021' datatype='real' name='[pop2021]' role='measure' type='quantitative' />
      <column caption='Pop2022' datatype='real' name='[pop2022]' role='measure' type='quantitative' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[date_]' derivation='Year' name='[yr:date_:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (City,YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:city:nk]' />
          <groupfilter function='level-members' level='[yr:date_:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mass_popchange' id='mass_popchange (boston.mass_popchange)_20D333274A994C9B90CA7296D409C689'>
            <properties context=''>
              <relation connection='postgres.1xu69ih0r0jo0z17su8j20t3cevr' name='mass_popchange' table='[boston].[mass_popchange]' type='table' />
            </properties>
          </object>
          <object caption='migration' id='migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6'>
            <properties context=''>
              <relation connection='postgres.1xu69ih0r0jo0z17su8j20t3cevr' name='migration' table='[boston].[migration]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[city]' />
              <expression op='[city (migration)]' />
            </expression>
            <first-end-point object-id='mass_popchange (boston.mass_popchange)_20D333274A994C9B90CA7296D409C689' />
            <second-end-point object-id='migration (boston.migration)_ED51F66C92CA44FEB507205144F6B3F6' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='pop_change (boston.pop_change) (postgres)' inline='true' name='federated.1ilzchi185dxlz17qx99b18761e3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0t2ofs012bxqbg1agjezx0w9p4em'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0t2ofs012bxqbg1agjezx0w9p4em' name='pop_change' table='[boston].[pop_change]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0t2ofs012bxqbg1agjezx0w9p4em' name='pop_change' table='[boston].[pop_change]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>index_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[index_]</local-name>
            <parent-name>[pop_change]</parent-name>
            <remote-alias>index_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop_change (boston.pop_change)_D4DA858A96F14FD58135EE710A2FD4E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[pop_change]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop_change (boston.pop_change)_D4DA858A96F14FD58135EE710A2FD4E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2021</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pop2021]</local-name>
            <parent-name>[pop_change]</parent-name>
            <remote-alias>pop2021</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop_change (boston.pop_change)_D4DA858A96F14FD58135EE710A2FD4E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2022</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pop2022]</local-name>
            <parent-name>[pop_change]</parent-name>
            <remote-alias>pop2022</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop_change (boston.pop_change)_D4DA858A96F14FD58135EE710A2FD4E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>change</remote-name>
            <remote-type>131</remote-type>
            <local-name>[change]</local-name>
            <parent-name>[pop_change]</parent-name>
            <remote-alias>change</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop_change (boston.pop_change)_D4DA858A96F14FD58135EE710A2FD4E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_change</remote-name>
            <remote-type>131</remote-type>
            <local-name>[percent_change]</local-name>
            <parent-name>[pop_change]</parent-name>
            <remote-alias>percent_change</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[pop_change (boston.pop_change)_D4DA858A96F14FD58135EE710A2FD4E3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='pop_change' datatype='table' name='[__tableau_internal_object_id__].[pop_change (boston.pop_change)_D4DA858A96F14FD58135EE710A2FD4E3]' role='measure' type='quantitative' />
      <column caption='Change' datatype='real' name='[change]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Index' datatype='integer' name='[index_]' role='measure' type='quantitative' />
      <column caption='Percent Change' datatype='real' name='[percent_change]' role='measure' type='quantitative' />
      <column caption='Pop2021' datatype='real' name='[pop2021]' role='measure' type='quantitative' />
      <column caption='Pop2022' datatype='real' name='[pop2022]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='pop_change' id='pop_change (boston.pop_change)_D4DA858A96F14FD58135EE710A2FD4E3'>
            <properties context=''>
              <relation connection='postgres.0t2ofs012bxqbg1agjezx0w9p4em' name='pop_change' table='[boston].[pop_change]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='openings/housingJOIN' inline='true' name='federated.013rz471gg41r913my6vd0ltv7bn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0385zmp1s1dlj20zwapvz0nqcsz1'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0385zmp1s1dlj20zwapvz0nqcsz1' name='avg_openings' table='[boston].[avg_openings]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.0385zmp1s1dlj20zwapvz0nqcsz1' name='avg_openings' table='[boston].[avg_openings]' type='table' />
          <relation connection='postgres.0385zmp1s1dlj20zwapvz0nqcsz1' name='housing' table='[boston].[housing]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[avg_sale_price_all]' value='[housing].[avg_sale_price_all]' />
          <map key='[avg_sale_to_list]' value='[housing].[avg_sale_to_list]' />
          <map key='[avg_sale_to_list_mom]' value='[housing].[avg_sale_to_list_mom]' />
          <map key='[avg_sale_to_list_yoy]' value='[housing].[avg_sale_to_list_yoy]' />
          <map key='[cal_average]' value='[avg_openings].[cal_average]' />
          <map key='[city]' value='[housing].[city]' />
          <map key='[homes_sold]' value='[housing].[homes_sold]' />
          <map key='[homes_sold_mom]' value='[housing].[homes_sold_mom]' />
          <map key='[homes_sold_yoy]' value='[housing].[homes_sold_yoy]' />
          <map key='[il_average]' value='[avg_openings].[il_average]' />
          <map key='[inventory]' value='[housing].[inventory]' />
          <map key='[inventory_mom]' value='[housing].[inventory_mom]' />
          <map key='[inventory_yoy]' value='[housing].[inventory_yoy]' />
          <map key='[is_seasonally_adjusted]' value='[housing].[is_seasonally_adjusted]' />
          <map key='[last_updated]' value='[housing].[last_updated]' />
          <map key='[ma_average]' value='[avg_openings].[ma_average]' />
          <map key='[median_dom]' value='[housing].[median_dom]' />
          <map key='[median_dom_mom]' value='[housing].[median_dom_mom]' />
          <map key='[median_dom_yoy]' value='[housing].[median_dom_yoy]' />
          <map key='[median_list_ppsf]' value='[housing].[median_list_ppsf]' />
          <map key='[median_list_ppsf_mom]' value='[housing].[median_list_ppsf_mom]' />
          <map key='[median_list_ppsf_yoy]' value='[housing].[median_list_ppsf_yoy]' />
          <map key='[median_list_price]' value='[housing].[median_list_price]' />
          <map key='[median_list_price_mom]' value='[housing].[median_list_price_mom]' />
          <map key='[median_list_price_yoy]' value='[housing].[median_list_price_yoy]' />
          <map key='[median_ppsf]' value='[housing].[median_ppsf]' />
          <map key='[median_ppsf_mom]' value='[housing].[median_ppsf_mom]' />
          <map key='[median_ppsf_yoy]' value='[housing].[median_ppsf_yoy]' />
          <map key='[median_sale_price]' value='[housing].[median_sale_price]' />
          <map key='[median_sale_price_mom]' value='[housing].[median_sale_price_mom]' />
          <map key='[median_sale_price_yoy]' value='[housing].[median_sale_price_yoy]' />
          <map key='[months_of_supply]' value='[housing].[months_of_supply]' />
          <map key='[months_of_supply_mom]' value='[housing].[months_of_supply_mom]' />
          <map key='[months_of_supply_yoy]' value='[housing].[months_of_supply_yoy]' />
          <map key='[new_listings]' value='[housing].[new_listings]' />
          <map key='[new_listings_mom]' value='[housing].[new_listings_mom]' />
          <map key='[new_listings_yoy]' value='[housing].[new_listings_yoy]' />
          <map key='[ny_average]' value='[avg_openings].[ny_average]' />
          <map key='[off_market_in_two_weeks]' value='[housing].[off_market_in_two_weeks]' />
          <map key='[off_market_in_two_weeks_mom]' value='[housing].[off_market_in_two_weeks_mom]' />
          <map key='[off_market_in_two_weeks_yoy]' value='[housing].[off_market_in_two_weeks_yoy]' />
          <map key='[parent_metro_region]' value='[housing].[parent_metro_region]' />
          <map key='[parent_metro_region_metro_code]' value='[housing].[parent_metro_region_metro_code]' />
          <map key='[pending_sales]' value='[housing].[pending_sales]' />
          <map key='[pending_sales_mom]' value='[housing].[pending_sales_mom]' />
          <map key='[pending_sales_yoy]' value='[housing].[pending_sales_yoy]' />
          <map key='[period_begin]' value='[housing].[period_begin]' />
          <map key='[period_duration]' value='[housing].[period_duration]' />
          <map key='[period_end]' value='[housing].[period_end]' />
          <map key='[price_drops]' value='[housing].[price_drops]' />
          <map key='[price_drops_mom]' value='[housing].[price_drops_mom]' />
          <map key='[price_drops_yoy]' value='[housing].[price_drops_yoy]' />
          <map key='[property_type]' value='[housing].[property_type]' />
          <map key='[property_type_id]' value='[housing].[property_type_id]' />
          <map key='[region]' value='[housing].[region]' />
          <map key='[region_type]' value='[housing].[region_type]' />
          <map key='[region_type_id]' value='[housing].[region_type_id]' />
          <map key='[sold_above_list]' value='[housing].[sold_above_list]' />
          <map key='[sold_above_list_mom]' value='[housing].[sold_above_list_mom]' />
          <map key='[sold_above_list_yoy]' value='[housing].[sold_above_list_yoy]' />
          <map key='[state_]' value='[housing].[state_]' />
          <map key='[state_code]' value='[housing].[state_code]' />
          <map key='[table_id]' value='[housing].[table_id]' />
          <map key='[tx_average]' value='[avg_openings].[tx_average]' />
          <map key='[us_average]' value='[avg_openings].[us_average]' />
          <map key='[wa_average]' value='[avg_openings].[wa_average]' />
          <map key='[year_ (housing)]' value='[housing].[year_]' />
          <map key='[year_]' value='[avg_openings].[year_]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ma_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ma_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>ma_average</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>us_average</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cal_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[cal_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>cal_average</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tx_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[tx_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>tx_average</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>il_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[il_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>il_average</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ny_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ny_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>ny_average</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wa_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[wa_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>wa_average</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_begin</remote-name>
            <remote-type>7</remote-type>
            <local-name>[period_begin]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>period_begin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_end</remote-name>
            <remote-type>129</remote-type>
            <local-name>[period_end]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>period_end</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_duration</remote-name>
            <remote-type>3</remote-type>
            <local-name>[period_duration]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>period_duration</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_type]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>region_type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[region_type_id]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>region_type_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>table_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[table_id]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>table_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_seasonally_adjusted</remote-name>
            <remote-type>129</remote-type>
            <local-name>[is_seasonally_adjusted]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>is_seasonally_adjusted</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>5</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>state_</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_code]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>state_code</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_type]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>property_type</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[property_type_id]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>property_type_id</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_sale_price</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_sale_price_mom</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_sale_price_yoy</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_price</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_price_mom</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_price_yoy</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_ppsf</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_ppsf_mom</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_ppsf_yoy</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_ppsf</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_ppsf_mom</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_ppsf_yoy</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>homes_sold</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>homes_sold_mom</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>homes_sold_yoy</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>pending_sales</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>pending_sales_mom</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>pending_sales_yoy</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>new_listings</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>new_listings_mom</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>new_listings_yoy</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>inventory</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>inventory_mom</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>inventory_yoy</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>months_of_supply</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>months_of_supply_mom</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>months_of_supply_yoy</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_dom</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_dom_mom</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_dom_yoy</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_to_list</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_to_list_mom</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_to_list_yoy</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>sold_above_list</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>sold_above_list_mom</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>sold_above_list_yoy</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>price_drops</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>price_drops_mom</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>price_drops_yoy</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>off_market_in_two_weeks</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>off_market_in_two_weeks_mom</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>off_market_in_two_weeks_yoy</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parent_metro_region]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>parent_metro_region</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region_metro_code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[parent_metro_region_metro_code]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>parent_metro_region_metro_code</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_updated</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_updated]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>last_updated</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_price_all</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_price_all]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_price_all</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_ (housing)]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='avg_openings' datatype='table' name='[__tableau_internal_object_id__].[avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='housing' datatype='table' name='[__tableau_internal_object_id__].[housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113]' role='measure' type='quantitative' />
      <column caption='Avg Sale Price All' datatype='real' name='[avg_sale_price_all]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List' datatype='real' name='[avg_sale_to_list]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List Mom' datatype='real' name='[avg_sale_to_list_mom]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List Yoy' datatype='real' name='[avg_sale_to_list_yoy]' role='measure' type='quantitative' />
      <column caption='Cal Average' datatype='real' name='[cal_average]' role='measure' type='quantitative' />
      <column caption='City' datatype='real' name='[city]' role='measure' type='quantitative' />
      <column caption='Homes Sold' datatype='real' name='[homes_sold]' role='measure' type='quantitative' />
      <column caption='Homes Sold Mom' datatype='real' name='[homes_sold_mom]' role='measure' type='quantitative' />
      <column caption='Homes Sold Yoy' datatype='real' name='[homes_sold_yoy]' role='measure' type='quantitative' />
      <column caption='Il Average' datatype='real' name='[il_average]' role='measure' type='quantitative' />
      <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
      <column caption='Inventory Mom' datatype='real' name='[inventory_mom]' role='measure' type='quantitative' />
      <column caption='Inventory Yoy' datatype='real' name='[inventory_yoy]' role='measure' type='quantitative' />
      <column caption='Is Seasonally Adjusted' datatype='string' name='[is_seasonally_adjusted]' role='dimension' type='nominal' />
      <column caption='Last Updated' datatype='string' name='[last_updated]' role='dimension' type='nominal' />
      <column caption='Ma Average' datatype='real' name='[ma_average]' role='measure' type='quantitative' />
      <column caption='Median Dom' datatype='real' name='[median_dom]' role='measure' type='quantitative' />
      <column caption='Median Dom Mom' datatype='real' name='[median_dom_mom]' role='measure' type='quantitative' />
      <column caption='Median Dom Yoy' datatype='real' name='[median_dom_yoy]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf' datatype='real' name='[median_list_ppsf]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf Mom' datatype='real' name='[median_list_ppsf_mom]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf Yoy' datatype='real' name='[median_list_ppsf_yoy]' role='measure' type='quantitative' />
      <column caption='Median List Price' datatype='real' name='[median_list_price]' role='measure' type='quantitative' />
      <column caption='Median List Price Mom' datatype='real' name='[median_list_price_mom]' role='measure' type='quantitative' />
      <column caption='Median List Price Yoy' datatype='real' name='[median_list_price_yoy]' role='measure' type='quantitative' />
      <column caption='Median Ppsf' datatype='real' name='[median_ppsf]' role='measure' type='quantitative' />
      <column caption='Median Ppsf Mom' datatype='real' name='[median_ppsf_mom]' role='measure' type='quantitative' />
      <column caption='Median Ppsf Yoy' datatype='real' name='[median_ppsf_yoy]' role='measure' type='quantitative' />
      <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='measure' type='quantitative' />
      <column caption='Median Sale Price Mom' datatype='real' name='[median_sale_price_mom]' role='measure' type='quantitative' />
      <column caption='Median Sale Price Yoy' datatype='real' name='[median_sale_price_yoy]' role='measure' type='quantitative' />
      <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='measure' type='quantitative' />
      <column caption='Months Of Supply Mom' datatype='real' name='[months_of_supply_mom]' role='measure' type='quantitative' />
      <column caption='Months Of Supply Yoy' datatype='real' name='[months_of_supply_yoy]' role='measure' type='quantitative' />
      <column caption='New Listings' datatype='real' name='[new_listings]' role='measure' type='quantitative' />
      <column caption='New Listings Mom' datatype='real' name='[new_listings_mom]' role='measure' type='quantitative' />
      <column caption='New Listings Yoy' datatype='real' name='[new_listings_yoy]' role='measure' type='quantitative' />
      <column caption='Ny Average' datatype='real' name='[ny_average]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks' datatype='real' name='[off_market_in_two_weeks]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks Mom' datatype='real' name='[off_market_in_two_weeks_mom]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks Yoy' datatype='real' name='[off_market_in_two_weeks_yoy]' role='measure' type='quantitative' />
      <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' type='nominal' />
      <column caption='Parent Metro Region Metro Code' datatype='integer' name='[parent_metro_region_metro_code]' role='dimension' type='ordinal' />
      <column caption='Pending Sales' datatype='real' name='[pending_sales]' role='measure' type='quantitative' />
      <column caption='Pending Sales Mom' datatype='real' name='[pending_sales_mom]' role='measure' type='quantitative' />
      <column caption='Pending Sales Yoy' datatype='real' name='[pending_sales_yoy]' role='measure' type='quantitative' />
      <column caption='Period Begin' datatype='date' name='[period_begin]' role='dimension' type='ordinal' />
      <column caption='Period Duration' datatype='integer' name='[period_duration]' role='measure' type='quantitative' />
      <column caption='Period End' datatype='string' name='[period_end]' role='dimension' type='nominal' />
      <column caption='Price Drops' datatype='real' name='[price_drops]' role='measure' type='quantitative' />
      <column caption='Price Drops Mom' datatype='real' name='[price_drops_mom]' role='measure' type='quantitative' />
      <column caption='Price Drops Yoy' datatype='real' name='[price_drops_yoy]' role='measure' type='quantitative' />
      <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      <column caption='Property Type Id' datatype='integer' name='[property_type_id]' role='dimension' type='ordinal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Region Type' datatype='string' name='[region_type]' role='dimension' type='nominal' />
      <column caption='Region Type Id' datatype='integer' name='[region_type_id]' role='dimension' type='ordinal' />
      <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='measure' type='quantitative' />
      <column caption='Sold Above List Mom' datatype='real' name='[sold_above_list_mom]' role='measure' type='quantitative' />
      <column caption='Sold Above List Yoy' datatype='real' name='[sold_above_list_yoy]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state_]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Code' datatype='string' name='[state_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Table Id' datatype='integer' name='[table_id]' role='dimension' type='ordinal' />
      <column caption='Tx Average' datatype='real' name='[tx_average]' role='measure' type='quantitative' />
      <column caption='Us Average' datatype='real' name='[us_average]' role='measure' type='quantitative' />
      <column caption='Wa Average' datatype='real' name='[wa_average]' role='measure' type='quantitative' />
      <column caption='Year  (Housing)' datatype='integer' name='[year_ (housing)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
      <column-instance column='[ma_average]' derivation='Sum' name='[diff:sum:ma_average:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.013rz471gg41r913my6vd0ltv7bn].[tyr:period_begin:qk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ma_average]' derivation='Sum' name='[diff:sum:ma_average:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[inventory]' derivation='Sum' name='[pcdf:sum:inventory:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.013rz471gg41r913my6vd0ltv7bn].[tyr:period_begin:qk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[inventory]' derivation='Sum' name='[pcdf:sum:inventory:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[inventory_yoy]' derivation='Sum' name='[pcdf:sum:inventory_yoy:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[new_listings]' derivation='Sum' name='[pcdf:sum:new_listings:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inventory_yoy]' derivation='Sum' name='[sum:inventory_yoy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ma_average]' derivation='Sum' name='[sum:ma_average:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_listings]' derivation='Sum' name='[sum:new_listings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[period_begin]' derivation='Year-Trunc' name='[tyr:period_begin:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[pcdf:sum:inventory:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[sum:inventory:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[pcdf:sum:new_listings:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[sum:new_listings:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[pcdf:sum:inventory:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[pcdf:sum:inventory_yoy:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[sum:inventory_yoy:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[diff:sum:ma_average:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[diff:sum:ma_average:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.013rz471gg41r913my6vd0ltv7bn].[sum:ma_average:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_openings' id='avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029'>
            <properties context=''>
              <relation connection='postgres.0385zmp1s1dlj20zwapvz0nqcsz1' name='avg_openings' table='[boston].[avg_openings]' type='table' />
            </properties>
          </object>
          <object caption='housing' id='housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113'>
            <properties context=''>
              <relation connection='postgres.0385zmp1s1dlj20zwapvz0nqcsz1' name='housing' table='[boston].[housing]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[year_]' />
              <expression op='[year_ (housing)]' />
            </expression>
            <first-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='avg_openings (boston.avg_openings)_F1DAE63DBB404268A89AD94DC19B7029' unique-key='true' />
            <second-end-point object-id='housing (boston.housing)_DC41DC42D5604CDAB3C1D15D58766113' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='postgres' inline='true' name='federated.11llick1fir39c14urc6c1lanny9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0vkmax60o5rsrt18bclt20qry1yy'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
      </connection>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='employment_population_nohousing (boston.employment_population_nohousing) (postgres)' inline='true' name='federated.1gerhd3040j8wd1dh0t010ggiyas' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1yg38is03b4uwj18i4rt90ufdb9j'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1yg38is03b4uwj18i4rt90ufdb9j' name='employment_population_nohousing' table='[boston].[employment_population_nohousing]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1yg38is03b4uwj18i4rt90ufdb9j' name='employment_population_nohousing' table='[boston].[employment_population_nohousing]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[employment_population_nohousing]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_population_nohousing (boston.employment_population_nohousing)_454CC9E1CBA24A038ADE1B17937E36D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mass_hires_annual_sum</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mass_hires_annual_sum]</local-name>
            <parent-name>[employment_population_nohousing]</parent-name>
            <remote-alias>mass_hires_annual_sum</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_population_nohousing (boston.employment_population_nohousing)_454CC9E1CBA24A038ADE1B17937E36D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mass_openings_annual_sum</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mass_openings_annual_sum]</local-name>
            <parent-name>[employment_population_nohousing]</parent-name>
            <remote-alias>mass_openings_annual_sum</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_population_nohousing (boston.employment_population_nohousing)_454CC9E1CBA24A038ADE1B17937E36D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>131</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[employment_population_nohousing]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_population_nohousing (boston.employment_population_nohousing)_454CC9E1CBA24A038ADE1B17937E36D0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='employment_population_nohousing' datatype='table' name='[__tableau_internal_object_id__].[employment_population_nohousing (boston.employment_population_nohousing)_454CC9E1CBA24A038ADE1B17937E36D0]' role='measure' type='quantitative' />
      <column caption='Mass Hires Annual Sum' datatype='real' name='[mass_hires_annual_sum]' role='measure' type='quantitative' />
      <column caption='Mass Openings Annual Sum' datatype='real' name='[mass_openings_annual_sum]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
      <column-instance column='[mass_hires_annual_sum]' derivation='Sum' name='[sum:mass_hires_annual_sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gerhd3040j8wd1dh0t010ggiyas].[sum:mass_hires_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1gerhd3040j8wd1dh0t010ggiyas]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gerhd3040j8wd1dh0t010ggiyas].[sum:population:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='employment_population_nohousing' id='employment_population_nohousing (boston.employment_population_nohousing)_454CC9E1CBA24A038ADE1B17937E36D0'>
            <properties context=''>
              <relation connection='postgres.1yg38is03b4uwj18i4rt90ufdb9j' name='employment_population_nohousing' table='[boston].[employment_population_nohousing]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='avg_unemp_per_open (boston.avg_unemp_per_open)+ (postgres)' inline='true' name='federated.0est9s202frh341abh7k30cs89h6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0enmbn918it6391atdx0s0j30an5'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0enmbn918it6391atdx0s0j30an5' name='avg_unemp_per_open' table='[boston].[avg_unemp_per_open]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy' name='year_' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.0enmbn918it6391atdx0s0j30an5' name='avg_unemp_per_open' table='[boston].[avg_unemp_per_open]' type='table'>
            <columns>
              <column datatype='date' date-parse-format='yyyy' name='year_' />
            </columns>
          </relation>
          <relation connection='postgres.0enmbn918it6391atdx0s0j30an5' name='population' table='[boston].[population]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ma_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ma_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>ma_avg</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>us_avg</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cal_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[cal_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>cal_avg</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tx_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[tx_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>tx_avg</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>il_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[il_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>il_avg</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ny_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ny_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>ny_avg</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wa_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[wa_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>wa_avg</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>date_</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population (boston.population)_2E72CD6C805948D3BD5D3C8A5BA93A90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>131</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population (boston.population)_2E72CD6C805948D3BD5D3C8A5BA93A90]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='avg_unemp_per_open' datatype='table' name='[__tableau_internal_object_id__].[avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population' datatype='table' name='[__tableau_internal_object_id__].[population (boston.population)_2E72CD6C805948D3BD5D3C8A5BA93A90]' role='measure' type='quantitative' />
      <column caption='Cal Avg' datatype='real' name='[cal_avg]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
      <column caption='Il Avg' datatype='real' name='[il_avg]' role='measure' type='quantitative' />
      <column caption='Ma Avg' datatype='real' name='[ma_avg]' role='measure' type='quantitative' />
      <column caption='Ny Avg' datatype='real' name='[ny_avg]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Tx Avg' datatype='real' name='[tx_avg]' role='measure' type='quantitative' />
      <column caption='Us Avg' datatype='real' name='[us_avg]' role='measure' type='quantitative' />
      <column caption='Wa Avg' datatype='real' name='[wa_avg]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' datatype-customized='true' name='[year_]' role='dimension' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_unemp_per_open' id='avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7'>
            <properties context=''>
              <relation connection='postgres.0enmbn918it6391atdx0s0j30an5' name='avg_unemp_per_open' table='[boston].[avg_unemp_per_open]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy' name='year_' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population' id='population (boston.population)_2E72CD6C805948D3BD5D3C8A5BA93A90'>
            <properties context=''>
              <relation connection='postgres.0enmbn918it6391atdx0s0j30an5' name='population' table='[boston].[population]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[year_]' />
              <expression op='[date_]' />
            </expression>
            <first-end-point object-id='avg_unemp_per_open (boston.avg_unemp_per_open)_8E954710E0824E3A80E80EE17FA819C7' />
            <second-end-point object-id='population (boston.population)_2E72CD6C805948D3BD5D3C8A5BA93A90' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='MERGE: avg_openings (boston.avg_openings)+ (postgres)' inline='true' name='federated.1w7007l1grwbxg13mqecd1b3acxa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1jhstcx1384m6314c3j1k1nj54ic'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1jhstcx1384m6314c3j1k1nj54ic' name='avg_openings' table='[boston].[avg_openings]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy' name='year_' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.1jhstcx1384m6314c3j1k1nj54ic' name='avg_openings' table='[boston].[avg_openings]' type='table'>
            <columns>
              <column datatype='date' date-parse-format='yyyy' name='year_' />
            </columns>
          </relation>
          <relation connection='postgres.1jhstcx1384m6314c3j1k1nj54ic' name='population' table='[boston].[population]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ma_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ma_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>ma_average</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>us_average</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cal_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[cal_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>cal_average</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tx_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[tx_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>tx_average</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>il_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[il_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>il_average</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ny_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ny_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>ny_average</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wa_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[wa_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>wa_average</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>date_</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population (boston.population)_140FF9E1E7D34FD980B41C6DDB1D5069]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>131</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population (boston.population)_140FF9E1E7D34FD980B41C6DDB1D5069]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='avg_openings' datatype='table' name='[__tableau_internal_object_id__].[avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population' datatype='table' name='[__tableau_internal_object_id__].[population (boston.population)_140FF9E1E7D34FD980B41C6DDB1D5069]' role='measure' type='quantitative' />
      <column caption='Cal Average' datatype='real' name='[cal_average]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
      <column caption='Il Average' datatype='real' name='[il_average]' role='measure' type='quantitative' />
      <column caption='Ma Average' datatype='real' name='[ma_average]' role='measure' type='quantitative' />
      <column caption='Ny Average' datatype='real' name='[ny_average]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Tx Average' datatype='real' name='[tx_average]' role='measure' type='quantitative' />
      <column caption='Us Average' datatype='real' name='[us_average]' role='measure' type='quantitative' />
      <column caption='Wa Average' datatype='real' name='[wa_average]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' datatype-customized='true' name='[year_]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_openings' id='avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76'>
            <properties context=''>
              <relation connection='postgres.1jhstcx1384m6314c3j1k1nj54ic' name='avg_openings' table='[boston].[avg_openings]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy' name='year_' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='population' id='population (boston.population)_140FF9E1E7D34FD980B41C6DDB1D5069'>
            <properties context=''>
              <relation connection='postgres.1jhstcx1384m6314c3j1k1nj54ic' name='population' table='[boston].[population]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[year_]' />
              <expression op='[date_]' />
            </expression>
            <first-end-point object-id='avg_openings (boston.avg_openings)_AB7E9757C8434E668FCDE99A41A5DA76' />
            <second-end-point object-id='population (boston.population)_140FF9E1E7D34FD980B41C6DDB1D5069' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='annual_cpi_regions (boston.annual_cpi_regions) (postgres)' inline='true' name='federated.1ij591l1olj57z17dfmi40xrc9tf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0kmnp491kenb611b962tw1fj9qu9'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <column caption='East North Annual' datatype='real' name='[east_north_annual]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='annual_cpi_regions (boston.annual_cpi_regions)+ (postgres)' inline='true' name='federated.1quexlz09dabud1ddlrt507ba9ir' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.165wzg803qgv7m14gg5bp1v5k0d6'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.165wzg803qgv7m14gg5bp1v5k0d6' name='annual_cpi_regions' table='[boston].[annual_cpi_regions]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.165wzg803qgv7m14gg5bp1v5k0d6' name='annual_cpi_regions' table='[boston].[annual_cpi_regions]' type='table' />
          <relation connection='postgres.165wzg803qgv7m14gg5bp1v5k0d6' name='housing' table='[boston].[housing]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[avg_sale_price_all]' value='[housing].[avg_sale_price_all]' />
          <map key='[avg_sale_to_list]' value='[housing].[avg_sale_to_list]' />
          <map key='[avg_sale_to_list_mom]' value='[housing].[avg_sale_to_list_mom]' />
          <map key='[avg_sale_to_list_yoy]' value='[housing].[avg_sale_to_list_yoy]' />
          <map key='[city]' value='[housing].[city]' />
          <map key='[east_north_annual]' value='[annual_cpi_regions].[east_north_annual]' />
          <map key='[east_south_annual]' value='[annual_cpi_regions].[east_south_annual]' />
          <map key='[homes_sold]' value='[housing].[homes_sold]' />
          <map key='[homes_sold_mom]' value='[housing].[homes_sold_mom]' />
          <map key='[homes_sold_yoy]' value='[housing].[homes_sold_yoy]' />
          <map key='[inventory]' value='[housing].[inventory]' />
          <map key='[inventory_mom]' value='[housing].[inventory_mom]' />
          <map key='[inventory_yoy]' value='[housing].[inventory_yoy]' />
          <map key='[is_seasonally_adjusted]' value='[housing].[is_seasonally_adjusted]' />
          <map key='[last_updated]' value='[housing].[last_updated]' />
          <map key='[median_dom]' value='[housing].[median_dom]' />
          <map key='[median_dom_mom]' value='[housing].[median_dom_mom]' />
          <map key='[median_dom_yoy]' value='[housing].[median_dom_yoy]' />
          <map key='[median_list_ppsf]' value='[housing].[median_list_ppsf]' />
          <map key='[median_list_ppsf_mom]' value='[housing].[median_list_ppsf_mom]' />
          <map key='[median_list_ppsf_yoy]' value='[housing].[median_list_ppsf_yoy]' />
          <map key='[median_list_price]' value='[housing].[median_list_price]' />
          <map key='[median_list_price_mom]' value='[housing].[median_list_price_mom]' />
          <map key='[median_list_price_yoy]' value='[housing].[median_list_price_yoy]' />
          <map key='[median_ppsf]' value='[housing].[median_ppsf]' />
          <map key='[median_ppsf_mom]' value='[housing].[median_ppsf_mom]' />
          <map key='[median_ppsf_yoy]' value='[housing].[median_ppsf_yoy]' />
          <map key='[median_sale_price]' value='[housing].[median_sale_price]' />
          <map key='[median_sale_price_mom]' value='[housing].[median_sale_price_mom]' />
          <map key='[median_sale_price_yoy]' value='[housing].[median_sale_price_yoy]' />
          <map key='[mid_atl_annual]' value='[annual_cpi_regions].[mid_atl_annual]' />
          <map key='[months_of_supply]' value='[housing].[months_of_supply]' />
          <map key='[months_of_supply_mom]' value='[housing].[months_of_supply_mom]' />
          <map key='[months_of_supply_yoy]' value='[housing].[months_of_supply_yoy]' />
          <map key='[mountain_annual]' value='[annual_cpi_regions].[mountain_annual]' />
          <map key='[new_engl_annual]' value='[annual_cpi_regions].[new_engl_annual]' />
          <map key='[new_listings]' value='[housing].[new_listings]' />
          <map key='[new_listings_mom]' value='[housing].[new_listings_mom]' />
          <map key='[new_listings_yoy]' value='[housing].[new_listings_yoy]' />
          <map key='[off_market_in_two_weeks]' value='[housing].[off_market_in_two_weeks]' />
          <map key='[off_market_in_two_weeks_mom]' value='[housing].[off_market_in_two_weeks_mom]' />
          <map key='[off_market_in_two_weeks_yoy]' value='[housing].[off_market_in_two_weeks_yoy]' />
          <map key='[pacific_annual]' value='[annual_cpi_regions].[pacific_annual]' />
          <map key='[parent_metro_region]' value='[housing].[parent_metro_region]' />
          <map key='[parent_metro_region_metro_code]' value='[housing].[parent_metro_region_metro_code]' />
          <map key='[pending_sales]' value='[housing].[pending_sales]' />
          <map key='[pending_sales_mom]' value='[housing].[pending_sales_mom]' />
          <map key='[pending_sales_yoy]' value='[housing].[pending_sales_yoy]' />
          <map key='[period_begin]' value='[housing].[period_begin]' />
          <map key='[period_duration]' value='[housing].[period_duration]' />
          <map key='[period_end]' value='[housing].[period_end]' />
          <map key='[price_drops]' value='[housing].[price_drops]' />
          <map key='[price_drops_mom]' value='[housing].[price_drops_mom]' />
          <map key='[price_drops_yoy]' value='[housing].[price_drops_yoy]' />
          <map key='[property_type]' value='[housing].[property_type]' />
          <map key='[property_type_id]' value='[housing].[property_type_id]' />
          <map key='[region]' value='[housing].[region]' />
          <map key='[region_type]' value='[housing].[region_type]' />
          <map key='[region_type_id]' value='[housing].[region_type_id]' />
          <map key='[sold_above_list]' value='[housing].[sold_above_list]' />
          <map key='[sold_above_list_mom]' value='[housing].[sold_above_list_mom]' />
          <map key='[sold_above_list_yoy]' value='[housing].[sold_above_list_yoy]' />
          <map key='[south_atl_annual]' value='[annual_cpi_regions].[south_atl_annual]' />
          <map key='[state_]' value='[housing].[state_]' />
          <map key='[state_code]' value='[housing].[state_code]' />
          <map key='[table_id]' value='[housing].[table_id]' />
          <map key='[west_south_annual]' value='[annual_cpi_regions].[west_south_annual]' />
          <map key='[year_ (housing)]' value='[housing].[year_]' />
          <map key='[year_]' value='[annual_cpi_regions].[year_]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[annual_cpi_regions]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>east_north_annual</remote-name>
            <remote-type>131</remote-type>
            <local-name>[east_north_annual]</local-name>
            <parent-name>[annual_cpi_regions]</parent-name>
            <remote-alias>east_north_annual</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>east_south_annual</remote-name>
            <remote-type>131</remote-type>
            <local-name>[east_south_annual]</local-name>
            <parent-name>[annual_cpi_regions]</parent-name>
            <remote-alias>east_south_annual</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mid_atl_annual</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mid_atl_annual]</local-name>
            <parent-name>[annual_cpi_regions]</parent-name>
            <remote-alias>mid_atl_annual</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mountain_annual</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mountain_annual]</local-name>
            <parent-name>[annual_cpi_regions]</parent-name>
            <remote-alias>mountain_annual</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_engl_annual</remote-name>
            <remote-type>131</remote-type>
            <local-name>[new_engl_annual]</local-name>
            <parent-name>[annual_cpi_regions]</parent-name>
            <remote-alias>new_engl_annual</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pacific_annual</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pacific_annual]</local-name>
            <parent-name>[annual_cpi_regions]</parent-name>
            <remote-alias>pacific_annual</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>south_atl_annual</remote-name>
            <remote-type>131</remote-type>
            <local-name>[south_atl_annual]</local-name>
            <parent-name>[annual_cpi_regions]</parent-name>
            <remote-alias>south_atl_annual</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>west_south_annual</remote-name>
            <remote-type>131</remote-type>
            <local-name>[west_south_annual]</local-name>
            <parent-name>[annual_cpi_regions]</parent-name>
            <remote-alias>west_south_annual</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_begin</remote-name>
            <remote-type>7</remote-type>
            <local-name>[period_begin]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>period_begin</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_end</remote-name>
            <remote-type>129</remote-type>
            <local-name>[period_end]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>period_end</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_duration</remote-name>
            <remote-type>3</remote-type>
            <local-name>[period_duration]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>period_duration</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_type]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>region_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[region_type_id]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>region_type_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>table_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[table_id]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>table_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_seasonally_adjusted</remote-name>
            <remote-type>129</remote-type>
            <local-name>[is_seasonally_adjusted]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>is_seasonally_adjusted</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>5</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>state_</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_code]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>state_code</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_type]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>property_type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[property_type_id]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>property_type_id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_sale_price</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_sale_price_mom</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_sale_price_yoy</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_price</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_price_mom</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_price_yoy</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_ppsf</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_ppsf_mom</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_ppsf_yoy</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_ppsf</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_ppsf_mom</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_ppsf_yoy</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>homes_sold</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>homes_sold_mom</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>homes_sold_yoy</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>pending_sales</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>pending_sales_mom</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>pending_sales_yoy</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>new_listings</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>new_listings_mom</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>new_listings_yoy</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>inventory</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>inventory_mom</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>inventory_yoy</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>months_of_supply</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>months_of_supply_mom</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>months_of_supply_yoy</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_dom</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_dom_mom</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_dom_yoy</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_to_list</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_to_list_mom</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_to_list_yoy</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>sold_above_list</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>sold_above_list_mom</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>sold_above_list_yoy</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>price_drops</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>price_drops_mom</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>price_drops_yoy</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>off_market_in_two_weeks</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>off_market_in_two_weeks_mom</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>off_market_in_two_weeks_yoy</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parent_metro_region]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>parent_metro_region</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region_metro_code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[parent_metro_region_metro_code]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>parent_metro_region_metro_code</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_updated</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_updated]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>last_updated</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_price_all</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_price_all]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_price_all</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_ (housing)]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='new_engl_growth' datatype='real' name='[Calculation_211669230665551873]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([new_engl_annual]) - LOOKUP(SUM([new_engl_annual]), -1)) / LOOKUP(SUM([new_engl_annual]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='annual_cpi_regions' datatype='table' name='[__tableau_internal_object_id__].[annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='housing' datatype='table' name='[__tableau_internal_object_id__].[housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898]' role='measure' type='quantitative' />
      <column caption='Avg Sale Price All' datatype='real' name='[avg_sale_price_all]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List' datatype='real' name='[avg_sale_to_list]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List Mom' datatype='real' name='[avg_sale_to_list_mom]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List Yoy' datatype='real' name='[avg_sale_to_list_yoy]' role='measure' type='quantitative' />
      <column caption='City' datatype='real' name='[city]' role='measure' type='quantitative' />
      <column caption='East North Annual' datatype='real' name='[east_north_annual]' role='measure' type='quantitative' />
      <column caption='East South Annual' datatype='real' name='[east_south_annual]' role='measure' type='quantitative' />
      <column caption='Homes Sold' datatype='real' name='[homes_sold]' role='measure' type='quantitative' />
      <column caption='Homes Sold Mom' datatype='real' name='[homes_sold_mom]' role='measure' type='quantitative' />
      <column caption='Homes Sold Yoy' datatype='real' name='[homes_sold_yoy]' role='measure' type='quantitative' />
      <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
      <column caption='Inventory Mom' datatype='real' name='[inventory_mom]' role='measure' type='quantitative' />
      <column caption='Inventory Yoy' datatype='real' name='[inventory_yoy]' role='measure' type='quantitative' />
      <column caption='Is Seasonally Adjusted' datatype='string' name='[is_seasonally_adjusted]' role='dimension' type='nominal' />
      <column caption='Last Updated' datatype='string' name='[last_updated]' role='dimension' type='nominal' />
      <column caption='Median Dom' datatype='real' name='[median_dom]' role='measure' type='quantitative' />
      <column caption='Median Dom Mom' datatype='real' name='[median_dom_mom]' role='measure' type='quantitative' />
      <column caption='Median Dom Yoy' datatype='real' name='[median_dom_yoy]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf' datatype='real' name='[median_list_ppsf]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf Mom' datatype='real' name='[median_list_ppsf_mom]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf Yoy' datatype='real' name='[median_list_ppsf_yoy]' role='measure' type='quantitative' />
      <column caption='Median List Price' datatype='real' name='[median_list_price]' role='measure' type='quantitative' />
      <column caption='Median List Price Mom' datatype='real' name='[median_list_price_mom]' role='measure' type='quantitative' />
      <column caption='Median List Price Yoy' datatype='real' name='[median_list_price_yoy]' role='measure' type='quantitative' />
      <column caption='Median Ppsf' datatype='real' name='[median_ppsf]' role='measure' type='quantitative' />
      <column caption='Median Ppsf Mom' datatype='real' name='[median_ppsf_mom]' role='measure' type='quantitative' />
      <column caption='Median Ppsf Yoy' datatype='real' name='[median_ppsf_yoy]' role='measure' type='quantitative' />
      <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='measure' type='quantitative' />
      <column caption='Median Sale Price Mom' datatype='real' name='[median_sale_price_mom]' role='measure' type='quantitative' />
      <column caption='Median Sale Price Yoy' datatype='real' name='[median_sale_price_yoy]' role='measure' type='quantitative' />
      <column caption='Mid Atl Annual' datatype='real' name='[mid_atl_annual]' role='measure' type='quantitative' />
      <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='measure' type='quantitative' />
      <column caption='Months Of Supply Mom' datatype='real' name='[months_of_supply_mom]' role='measure' type='quantitative' />
      <column caption='Months Of Supply Yoy' datatype='real' name='[months_of_supply_yoy]' role='measure' type='quantitative' />
      <column caption='Mountain Annual' datatype='real' name='[mountain_annual]' role='measure' type='quantitative' />
      <column caption='New Engl Annual' datatype='real' name='[new_engl_annual]' role='measure' type='quantitative' />
      <column caption='New Listings' datatype='real' name='[new_listings]' role='measure' type='quantitative' />
      <column caption='New Listings Mom' datatype='real' name='[new_listings_mom]' role='measure' type='quantitative' />
      <column caption='New Listings Yoy' datatype='real' name='[new_listings_yoy]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks' datatype='real' name='[off_market_in_two_weeks]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks Mom' datatype='real' name='[off_market_in_two_weeks_mom]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks Yoy' datatype='real' name='[off_market_in_two_weeks_yoy]' role='measure' type='quantitative' />
      <column caption='Pacific Annual' datatype='real' name='[pacific_annual]' role='measure' type='quantitative' />
      <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' type='nominal' />
      <column caption='Parent Metro Region Metro Code' datatype='integer' name='[parent_metro_region_metro_code]' role='dimension' type='ordinal' />
      <column caption='Pending Sales' datatype='real' name='[pending_sales]' role='measure' type='quantitative' />
      <column caption='Pending Sales Mom' datatype='real' name='[pending_sales_mom]' role='measure' type='quantitative' />
      <column caption='Pending Sales Yoy' datatype='real' name='[pending_sales_yoy]' role='measure' type='quantitative' />
      <column caption='Period Begin' datatype='date' name='[period_begin]' role='dimension' type='ordinal' />
      <column caption='Period Duration' datatype='integer' name='[period_duration]' role='measure' type='quantitative' />
      <column caption='Period End' datatype='string' name='[period_end]' role='dimension' type='nominal' />
      <column caption='Price Drops' datatype='real' name='[price_drops]' role='measure' type='quantitative' />
      <column caption='Price Drops Mom' datatype='real' name='[price_drops_mom]' role='measure' type='quantitative' />
      <column caption='Price Drops Yoy' datatype='real' name='[price_drops_yoy]' role='measure' type='quantitative' />
      <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      <column caption='Property Type Id' datatype='integer' name='[property_type_id]' role='dimension' type='ordinal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Region Type' datatype='string' name='[region_type]' role='dimension' type='nominal' />
      <column caption='Region Type Id' datatype='integer' name='[region_type_id]' role='dimension' type='ordinal' />
      <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='measure' type='quantitative' />
      <column caption='Sold Above List Mom' datatype='real' name='[sold_above_list_mom]' role='measure' type='quantitative' />
      <column caption='Sold Above List Yoy' datatype='real' name='[sold_above_list_yoy]' role='measure' type='quantitative' />
      <column caption='South Atl Annual' datatype='real' name='[south_atl_annual]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state_]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Code' datatype='string' name='[state_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Table Id' datatype='integer' name='[table_id]' role='dimension' type='ordinal' />
      <column caption='West South Annual' datatype='real' name='[west_south_annual]' role='measure' type='quantitative' />
      <column caption='Year  (Housing)' datatype='integer' name='[year_ (housing)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[median_sale_price]' derivation='Sum' name='[sum:median_sale_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_engl_annual]' derivation='Sum' name='[sum:new_engl_annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pacific_annual]' derivation='Sum' name='[sum:pacific_annual:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1quexlz09dabud1ddlrt507ba9ir].[sum:median_sale_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1quexlz09dabud1ddlrt507ba9ir].[sum:new_engl_annual:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1quexlz09dabud1ddlrt507ba9ir].[sum:pacific_annual:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.1quexlz09dabud1ddlrt507ba9ir].[fVal:sum:median_sale_price:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.1quexlz09dabud1ddlrt507ba9ir].[fVal:sum:new_engl_annual:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.1quexlz09dabud1ddlrt507ba9ir].[usr:Calculation_211669230665551873:qk]&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='annual_cpi_regions' id='annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E'>
            <properties context=''>
              <relation connection='postgres.165wzg803qgv7m14gg5bp1v5k0d6' name='annual_cpi_regions' table='[boston].[annual_cpi_regions]' type='table' />
            </properties>
          </object>
          <object caption='housing' id='housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898'>
            <properties context=''>
              <relation connection='postgres.165wzg803qgv7m14gg5bp1v5k0d6' name='housing' table='[boston].[housing]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[year_]' />
              <expression op='[year_ (housing)]' />
            </expression>
            <first-end-point object-id='annual_cpi_regions (boston.annual_cpi_regions)_0B533230C530442BAC95807A05064F0E' />
            <second-end-point object-id='housing (boston.housing)_C7DF9FEA3F7E4F11BD61AF609A4C4898' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='boston_us_permits (boston.boston_us_permits) (postgres)' inline='true' name='federated.084ypj90zxo29x16a8gna1qbu496' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1kx2hf81ir2d5118mk11p1in5k4z'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1kx2hf81ir2d5118mk11p1in5k4z' name='boston_us_permits' table='[boston].[boston_us_permits]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='month_of_period_end' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1kx2hf81ir2d5118mk11p1in5k4z' name='boston_us_permits' table='[boston].[boston_us_permits]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='month_of_period_end' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>month_of_period_end</remote-name>
            <remote-type>7</remote-type>
            <local-name>[month_of_period_end]</local-name>
            <parent-name>[boston_us_permits]</parent-name>
            <remote-alias>month_of_period_end</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston_us_permits (boston.boston_us_permits)_59C05F82D0724837A821A7FA94236A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_permits_per</remote-name>
            <remote-type>129</remote-type>
            <local-name>[boston_permits_per]</local-name>
            <parent-name>[boston_us_permits]</parent-name>
            <remote-alias>boston_permits_per</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston_us_permits (boston.boston_us_permits)_59C05F82D0724837A821A7FA94236A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_permits_per</remote-name>
            <remote-type>129</remote-type>
            <local-name>[us_permits_per]</local-name>
            <parent-name>[boston_us_permits]</parent-name>
            <remote-alias>us_permits_per</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[boston_us_permits (boston.boston_us_permits)_59C05F82D0724837A821A7FA94236A47]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='boston_us_permits' datatype='table' name='[__tableau_internal_object_id__].[boston_us_permits (boston.boston_us_permits)_59C05F82D0724837A821A7FA94236A47]' role='measure' type='quantitative' />
      <column caption='Boston Permits Per' datatype='real' datatype-customized='true' name='[boston_permits_per]' role='dimension' type='ordinal' />
      <column caption='Month Of Period End' datatype='date' datatype-customized='true' name='[month_of_period_end]' role='dimension' type='ordinal' />
      <column caption='Us Permits Per' datatype='real' datatype-customized='true' name='[us_permits_per]' role='dimension' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='boston_us_permits' id='boston_us_permits (boston.boston_us_permits)_59C05F82D0724837A821A7FA94236A47'>
            <properties context=''>
              <relation connection='postgres.1kx2hf81ir2d5118mk11p1in5k4z' name='boston_us_permits' table='[boston].[boston_us_permits]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='MMM-yy' name='month_of_period_end' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='employment_construction_nohousing (boston.employment_construction_nohousing) (postgres)' inline='true' name='federated.1c6nvfh1k5shdl1gwk8k00lvk3k4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0a08nk91h6ygwe0zvfham1bwdbtm'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0a08nk91h6ygwe0zvfham1bwdbtm' name='employment_construction_nohousing' table='[boston].[employment_construction_nohousing]' type='table'>
          <columns>
            <column datatype='integer' date-parse-format='yyyy' name='year_' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0a08nk91h6ygwe0zvfham1bwdbtm' name='employment_construction_nohousing' table='[boston].[employment_construction_nohousing]' type='table'>
          <columns>
            <column datatype='integer' date-parse-format='yyyy' name='year_' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[employment_construction_nohousing]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_construction_nohousing (boston.employment_construction_nohousing)_F90D36941B9F4645AC165BD80BF90A92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mass_hires_annual_sum</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mass_hires_annual_sum]</local-name>
            <parent-name>[employment_construction_nohousing]</parent-name>
            <remote-alias>mass_hires_annual_sum</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_construction_nohousing (boston.employment_construction_nohousing)_F90D36941B9F4645AC165BD80BF90A92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mass_openings_annual_sum</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mass_openings_annual_sum]</local-name>
            <parent-name>[employment_construction_nohousing]</parent-name>
            <remote-alias>mass_openings_annual_sum</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_construction_nohousing (boston.employment_construction_nohousing)_F90D36941B9F4645AC165BD80BF90A92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_private_housing_structures_auth_by_building_permits</remote-name>
            <remote-type>131</remote-type>
            <local-name>[new_private_housing_structures_auth_by_building_permits]</local-name>
            <parent-name>[employment_construction_nohousing]</parent-name>
            <remote-alias>new_private_housing_structures_auth_by_building_permits</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_construction_nohousing (boston.employment_construction_nohousing)_F90D36941B9F4645AC165BD80BF90A92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>131</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[employment_construction_nohousing]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_construction_nohousing (boston.employment_construction_nohousing)_F90D36941B9F4645AC165BD80BF90A92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rough_household_growth</remote-name>
            <remote-type>131</remote-type>
            <local-name>[rough_household_growth]</local-name>
            <parent-name>[employment_construction_nohousing]</parent-name>
            <remote-alias>rough_household_growth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_construction_nohousing (boston.employment_construction_nohousing)_F90D36941B9F4645AC165BD80BF90A92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:rough_household_growth:qk]&quot;' value='Rough Number of Households' />
        </aliases>
      </column>
      <column caption='Growth Ratio' datatype='real' name='[Calculation_211669231000154114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((sum([population]) - LOOKUP(sum([population]), 1)) / &#13;&#10;&#13;&#10;(sum([new_private_housing_structures_auth_by_building_permits]) - &#13;&#10;LOOKUP(sum([new_private_housing_structures_auth_by_building_permits]), 1)))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='employment_construction_nohousing' datatype='table' name='[__tableau_internal_object_id__].[employment_construction_nohousing (boston.employment_construction_nohousing)_F90D36941B9F4645AC165BD80BF90A92]' role='measure' type='quantitative' />
      <column caption='Mass Hires Annual Sum' datatype='real' name='[mass_hires_annual_sum]' role='measure' type='quantitative' />
      <column caption='Mass Openings Annual Sum' datatype='real' name='[mass_openings_annual_sum]' role='measure' type='quantitative' />
      <column caption='New Private Housing Structures Auth By Building Permits' datatype='real' name='[new_private_housing_structures_auth_by_building_permits]' role='measure' type='quantitative' />
      <column datatype='real' name='[population]' role='measure' type='quantitative' />
      <column datatype='real' name='[rough_household_growth]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='quantitative' />
      <column-instance column='[mass_hires_annual_sum]' derivation='Avg' name='[avg:mass_hires_annual_sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mass_openings_annual_sum]' derivation='Avg' name='[avg:mass_openings_annual_sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[avg:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rough_household_growth]' derivation='Avg' name='[avg:rough_household_growth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[cum:avg:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[diff:avg:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[population]' derivation='Avg' name='[diff:avg:population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[rough_household_growth]' derivation='Avg' name='[diff:avg:rough_household_growth:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Sum' name='[diff:sum:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[diff:sum:population:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[diff:sum:population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mass_hires_annual_sum]' derivation='Sum' name='[pcdf:sum:mass_hires_annual_sum:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Sum' name='[pcdf:sum:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[pcdf:sum:population:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[pcdf:sum:population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[pcto:sum:population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[pcva:sum:population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[mass_hires_annual_sum]' derivation='Sum' name='[sum:mass_hires_annual_sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mass_openings_annual_sum]' derivation='Sum' name='[sum:mass_openings_annual_sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Sum' name='[sum:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rough_household_growth]' derivation='Sum' name='[sum:rough_household_growth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_211669231000154114]' derivation='User' name='[usr:Calculation_211669231000154114:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[win:avg:new_private_housing_structures_auth_by_building_permits:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[win:avg:new_private_housing_structures_auth_by_building_permits:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-1' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[win:avg:new_private_housing_structures_auth_by_building_permits:qk:6]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='0' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[win:avg:new_private_housing_structures_auth_by_building_permits:qk:7]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='0' ordering-field='' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[win:avg:new_private_housing_structures_auth_by_building_permits:qk:8]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='0' ordering-field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[year_]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[win:avg:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[rough_household_growth]' derivation='Avg' name='[win:avg:rough_household_growth:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[rough_household_growth]' derivation='Avg' name='[win:avg:rough_household_growth:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-1' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[rough_household_growth]' derivation='Avg' name='[win:avg:rough_household_growth:qk:6]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='0' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[rough_household_growth]' derivation='Avg' name='[win:avg:rough_household_growth:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[win:sum:population:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[win:sum:population:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[win:sum:population:qk:3]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-1' ordering-field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[population]' derivation='Sum' name='[win:sum:population:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:population:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[cum:avg:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[diff:avg:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[diff:avg:population:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[diff:sum:population:qk:1]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[diff:sum:population:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[pcdf:sum:population:qk:1]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[pcdf:sum:population:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[pcto:sum:population:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[pcva:sum:population:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[sum:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[sum:rough_household_growth:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:new_private_housing_structures_auth_by_building_permits:qk:2]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:new_private_housing_structures_auth_by_building_permits:qk:4]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:new_private_housing_structures_auth_by_building_permits:qk:6]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:new_private_housing_structures_auth_by_building_permits:qk:7]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:new_private_housing_structures_auth_by_building_permits:qk:8]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:sum:population:qk:1]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:sum:population:qk:2]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:sum:population:qk:3]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:sum:population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[pcdf:sum:mass_hires_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:mass_hires_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:mass_openings_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:rough_household_growth:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[diff:avg:rough_household_growth:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[diff:sum:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[pcdf:sum:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[sum:mass_hires_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[sum:mass_openings_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:rough_household_growth:qk:2]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:rough_household_growth:qk:4]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:rough_household_growth:qk:6]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[win:avg:rough_household_growth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[usr:Calculation_211669231000154114:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='employment_construction_nohousing' id='employment_construction_nohousing (boston.employment_construction_nohousing)_F90D36941B9F4645AC165BD80BF90A92'>
            <properties context=''>
              <relation connection='postgres.0a08nk91h6ygwe0zvfham1bwdbtm' name='employment_construction_nohousing' table='[boston].[employment_construction_nohousing]' type='table'>
                <columns>
                  <column datatype='integer' date-parse-format='yyyy' name='year_' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='avg_openings (boston.avg_openings) (postgres)' inline='true' name='federated.0jmnc9m1dhtstc18jx0o910k8d9v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.19c5vv90j0763u1evcfcs1mwxsyj'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.19c5vv90j0763u1evcfcs1mwxsyj' name='avg_openings' table='[boston].[avg_openings]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.19c5vv90j0763u1evcfcs1mwxsyj' name='avg_openings' table='[boston].[avg_openings]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ma_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ma_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>ma_average</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>us_average</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cal_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[cal_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>cal_average</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tx_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[tx_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>tx_average</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>il_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[il_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>il_average</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ny_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ny_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>ny_average</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wa_average</remote-name>
            <remote-type>131</remote-type>
            <local-name>[wa_average]</local-name>
            <parent-name>[avg_openings]</parent-name>
            <remote-alias>wa_average</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='avg_openings' datatype='table' name='[__tableau_internal_object_id__].[avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE]' role='measure' type='quantitative' />
      <column caption='CA Average' datatype='real' name='[cal_average]' role='measure' type='quantitative' />
      <column caption='IL Average' datatype='real' name='[il_average]' role='measure' type='quantitative' />
      <column caption='MA Average' datatype='real' name='[ma_average]' role='measure' type='quantitative' />
      <column caption='NY Average' datatype='real' name='[ny_average]' role='measure' type='quantitative' />
      <column caption='TX Average' datatype='real' name='[tx_average]' role='measure' type='quantitative' />
      <column caption='US Average' datatype='real' name='[us_average]' role='measure' type='quantitative' />
      <column caption='WA Average' datatype='real' name='[wa_average]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
      <column-instance column='[cal_average]' derivation='Sum' name='[sum:cal_average:qk]' pivot='key' type='quantitative' />
      <column-instance column='[il_average]' derivation='Sum' name='[sum:il_average:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ma_average]' derivation='Sum' name='[sum:ma_average:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ny_average]' derivation='Sum' name='[sum:ny_average:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tx_average]' derivation='Sum' name='[sum:tx_average:qk]' pivot='key' type='quantitative' />
      <column-instance column='[us_average]' derivation='Sum' name='[sum:us_average:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wa_average]' derivation='Sum' name='[sum:wa_average:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:us_average:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:ma_average:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:cal_average:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:il_average:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:ny_average:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:tx_average:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:wa_average:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <default-sorts>
        <natural-sort column='[:Measure Names]' direction='ASC' />
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_openings' id='avg_openings (boston.avg_openings)_6A54FE5C9A5D4DD394306F4DF1C416AE'>
            <properties context=''>
              <relation connection='postgres.19c5vv90j0763u1evcfcs1mwxsyj' name='avg_openings' table='[boston].[avg_openings]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='avg_unemp_per_open (boston.avg_unemp_per_open) (postgres)' inline='true' name='federated.0kemtyy15odxjt1d90c6p0msk57q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1jalvzw1f9w8i215fbhh00rbdmz4'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1jalvzw1f9w8i215fbhh00rbdmz4' name='avg_unemp_per_open' table='[boston].[avg_unemp_per_open]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1jalvzw1f9w8i215fbhh00rbdmz4' name='avg_unemp_per_open' table='[boston].[avg_unemp_per_open]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ma_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ma_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>ma_avg</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>us_avg</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cal_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[cal_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>cal_avg</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tx_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[tx_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>tx_avg</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>il_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[il_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>il_avg</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ny_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ny_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>ny_avg</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wa_avg</remote-name>
            <remote-type>131</remote-type>
            <local-name>[wa_avg]</local-name>
            <parent-name>[avg_unemp_per_open]</parent-name>
            <remote-alias>wa_avg</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='avg_unemp_per_open' datatype='table' name='[__tableau_internal_object_id__].[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]' role='measure' type='quantitative' />
      <column caption='CA Avg' datatype='real' name='[cal_avg]' role='measure' type='quantitative' />
      <column caption='IL Avg' datatype='real' name='[il_avg]' role='measure' type='quantitative' />
      <column caption='MA Avg' datatype='real' name='[ma_avg]' role='measure' type='quantitative' />
      <column caption='NY Avg' datatype='real' name='[ny_avg]' role='measure' type='quantitative' />
      <column caption='TX Avg' datatype='real' name='[tx_avg]' role='measure' type='quantitative' />
      <column caption='US Avg' datatype='real' name='[us_avg]' role='measure' type='quantitative' />
      <column caption='WA Avg' datatype='real' name='[wa_avg]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cal_avg]' derivation='Sum' name='[sum:cal_avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[il_avg]' derivation='Sum' name='[sum:il_avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ma_avg]' derivation='Sum' name='[sum:ma_avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ny_avg]' derivation='Sum' name='[sum:ny_avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tx_avg]' derivation='Sum' name='[sum:tx_avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[us_avg]' derivation='Sum' name='[sum:us_avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wa_avg]' derivation='Sum' name='[sum:wa_avg:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:us_avg:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:ma_avg:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:cal_avg:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:il_avg:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:ny_avg:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:tx_avg:qk]&quot;</bucket>
            </map>
            <map to='#c5c7c6'>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:wa_avg:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[__tableau_internal_object_id__].[cnt:avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='avg_unemp_per_open' id='avg_unemp_per_open (boston.avg_unemp_per_open)_3D90BA91E86E4A93A3BCDA46A52E9AD3'>
            <properties context=''>
              <relation connection='postgres.1jalvzw1f9w8i215fbhh00rbdmz4' name='avg_unemp_per_open' table='[boston].[avg_unemp_per_open]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='employment_housing (boston.employment_housing) (postgres)' inline='true' name='federated.118ly0x1n3kj9a1brphtg0e5nu8b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0bearea1nlpp0910gqqad1pjlz1q'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0bearea1nlpp0910gqqad1pjlz1q' name='employment_housing' table='[boston].[employment_housing]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0bearea1nlpp0910gqqad1pjlz1q' name='employment_housing' table='[boston].[employment_housing]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mass_hires_annual_sum</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mass_hires_annual_sum]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>mass_hires_annual_sum</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mass_openings_annual_sum</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mass_openings_annual_sum]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>mass_openings_annual_sum</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bos_cam_newt_pop</remote-name>
            <remote-type>131</remote-type>
            <local-name>[bos_cam_newt_pop]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>bos_cam_newt_pop</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_begin</remote-name>
            <remote-type>7</remote-type>
            <local-name>[period_begin]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>period_begin</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>inventory</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>homes_sold</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>months_of_supply</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>new_listings</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_private_housing_structures_auth_by_building_permits</remote-name>
            <remote-type>131</remote-type>
            <local-name>[new_private_housing_structures_auth_by_building_permits]</local-name>
            <parent-name>[employment_housing]</parent-name>
            <remote-alias>new_private_housing_structures_auth_by_building_permits</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:bos_cam_newt_pop:qk]&quot;' value='Population, Boston-Cambridge-Newton' />
          <alias key='&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:hires_annual_avg:qk]&quot;' value='Hires Annual Avg' />
          <alias key='&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:hires_annual_sum:qk]&quot;' value='Annual Sum of Hires' />
          <alias key='&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:openings_annual_avg:qk]&quot;' value='Openings Annual Avg' />
          <alias key='&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:openings_annual_sum:qk]&quot;' value='Annual Sum of Openings' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='employment_housing' datatype='table' name='[__tableau_internal_object_id__].[employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171]' role='measure' type='quantitative' />
      <column datatype='real' name='[bos_cam_newt_pop]' role='measure' type='quantitative' />
      <column caption='Homes Sold' datatype='real' name='[homes_sold]' role='measure' type='quantitative' />
      <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
      <column datatype='real' name='[mass_hires_annual_sum]' role='measure' type='quantitative' />
      <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='measure' type='quantitative' />
      <column caption='New Listings' datatype='real' name='[new_listings]' role='measure' type='quantitative' />
      <column datatype='real' name='[new_private_housing_structures_auth_by_building_permits]' role='measure' type='quantitative' />
      <column caption='Period Begin' datatype='date' name='[period_begin]' role='dimension' type='ordinal' />
      <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
      <column-instance column='[bos_cam_newt_pop]' derivation='Avg' name='[avg:bos_cam_newt_pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[homes_sold]' derivation='Avg' name='[avg:homes_sold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inventory]' derivation='Avg' name='[avg:inventory:qk]' pivot='key' type='quantitative' />
      <column-instance column='[months_of_supply]' derivation='Avg' name='[avg:months_of_supply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_listings]' derivation='Avg' name='[avg:new_listings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inventory]' derivation='Sum' name='[diff:sum:inventory:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[period_begin]' derivation='Quarter' name='[qr:period_begin:ok]' pivot='key' type='ordinal' />
      <column-instance column='[bos_cam_newt_pop]' derivation='Sum' name='[sum:bos_cam_newt_pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[homes_sold]' derivation='Sum' name='[sum:homes_sold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mass_hires_annual_sum]' derivation='Sum' name='[sum:mass_hires_annual_sum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[months_of_supply]' derivation='Sum' name='[sum:months_of_supply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_listings]' derivation='Sum' name='[sum:new_listings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Sum' name='[sum:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[qr:period_begin:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:homes_sold:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:homes_sold:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[diff:sum:hires_annual_avg:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:mass_hires_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[win:sum:hires_annual_avg:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[sum:mass_hires_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:inventory:qk]&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:months_of_supply:qk]&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:new_listings:qk]&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:inventory:qk]&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:months_of_supply:qk]&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:new_listings:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:bos_cam_newt_pop:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:hires_annual_avg:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:hires_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:openings_annual_avg:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[avg:openings_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:hires_annual_avg:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:hires_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:openings_annual_avg:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:openings_annual_sum:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[diff:sum:inventory:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:bos_cam_newt_pop:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.118ly0x1n3kj9a1brphtg0e5nu8b].[sum:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[sum:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='federated.1c6nvfh1k5shdl1gwk8k00lvk3k4'>
        <column caption='Mass Hires Annual Sum' datatype='real' name='[mass_hires_annual_sum]' role='measure' type='quantitative' />
        <column caption='New Private Housing Structures Auth By Building Permits' datatype='real' name='[new_private_housing_structures_auth_by_building_permits]' role='measure' type='quantitative' />
        <column-instance column='[mass_hires_annual_sum]' derivation='Sum' name='[sum:mass_hires_annual_sum:qk]' pivot='key' type='quantitative' />
        <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Sum' name='[sum:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d'>
        <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
        <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='employment_housing' id='employment_housing (boston.employment_housing)_05C78D5024394189BF9CD1363681C171'>
            <properties context=''>
              <relation connection='postgres.0bearea1nlpp0910gqqad1pjlz1q' name='employment_housing' table='[boston].[employment_housing]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='housing (boston.housing) (postgres)' inline='true' name='federated.1nol2rz0mh7ps41bweycg0387zpf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0o1ia7t1krwvtj19qvx4c0m4f053'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0o1ia7t1krwvtj19qvx4c0m4f053' name='housing' table='[boston].[housing]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_begin' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_end' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0o1ia7t1krwvtj19qvx4c0m4f053' name='housing' table='[boston].[housing]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_begin' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_end' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>period_begin</remote-name>
            <remote-type>7</remote-type>
            <local-name>[period_begin]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>period_begin</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_end</remote-name>
            <remote-type>7</remote-type>
            <local-name>[period_end]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>period_end</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_duration</remote-name>
            <remote-type>3</remote-type>
            <local-name>[period_duration]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>period_duration</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_type]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>region_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[region_type_id]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>region_type_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>table_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[table_id]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>table_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_seasonally_adjusted</remote-name>
            <remote-type>129</remote-type>
            <local-name>[is_seasonally_adjusted]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>is_seasonally_adjusted</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>5</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>state_</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_code]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>state_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_type]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>property_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[property_type_id]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>property_type_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_sale_price</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_sale_price_mom</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_sale_price_yoy</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_price</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_price_mom</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_price_yoy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_ppsf</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_ppsf_mom</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_ppsf_yoy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_ppsf</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_ppsf_mom</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_list_ppsf_yoy</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>homes_sold</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>homes_sold_mom</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>homes_sold_yoy</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>pending_sales</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>pending_sales_mom</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>pending_sales_yoy</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>new_listings</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>new_listings_mom</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>new_listings_yoy</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>inventory</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>inventory_mom</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>inventory_yoy</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>months_of_supply</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>months_of_supply_mom</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>months_of_supply_yoy</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_dom</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_dom_mom</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>median_dom_yoy</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_to_list</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_to_list_mom</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_to_list_yoy</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>sold_above_list</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>sold_above_list_mom</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>sold_above_list_yoy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>price_drops</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>price_drops_mom</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>price_drops_yoy</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>off_market_in_two_weeks</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks_mom]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>off_market_in_two_weeks_mom</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks_yoy]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>off_market_in_two_weeks_yoy</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parent_metro_region]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>parent_metro_region</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region_metro_code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[parent_metro_region_metro_code]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>parent_metro_region_metro_code</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_updated</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_updated]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>last_updated</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_price_all</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_price_all]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>avg_sale_price_all</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[housing]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='housing' datatype='table' name='[__tableau_internal_object_id__].[housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List' datatype='real' name='[avg_sale_to_list]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List Mom' datatype='real' name='[avg_sale_to_list_mom]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List Yoy' datatype='real' name='[avg_sale_to_list_yoy]' role='measure' type='quantitative' />
      <column caption='City' datatype='real' name='[city]' role='measure' type='quantitative' />
      <column caption='Homes Sold' datatype='real' name='[homes_sold]' role='measure' type='quantitative' />
      <column caption='Homes Sold Mom' datatype='real' name='[homes_sold_mom]' role='measure' type='quantitative' />
      <column caption='Homes Sold Yoy' datatype='real' name='[homes_sold_yoy]' role='measure' type='quantitative' />
      <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
      <column caption='Inventory Mom' datatype='real' name='[inventory_mom]' role='measure' type='quantitative' />
      <column caption='Inventory Yoy' datatype='real' name='[inventory_yoy]' role='measure' type='quantitative' />
      <column caption='Is Seasonally Adjusted' datatype='string' name='[is_seasonally_adjusted]' role='dimension' type='nominal' />
      <column caption='Last Updated' datatype='string' name='[last_updated]' role='dimension' type='nominal' />
      <column caption='Median Dom' datatype='real' name='[median_dom]' role='measure' type='quantitative' />
      <column caption='Median Dom Mom' datatype='real' name='[median_dom_mom]' role='measure' type='quantitative' />
      <column caption='Median Dom Yoy' datatype='real' name='[median_dom_yoy]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf' datatype='real' name='[median_list_ppsf]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf Mom' datatype='real' name='[median_list_ppsf_mom]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf Yoy' datatype='real' name='[median_list_ppsf_yoy]' role='measure' type='quantitative' />
      <column caption='Median List Price' datatype='real' name='[median_list_price]' role='measure' type='quantitative' />
      <column caption='Median List Price Mom' datatype='real' name='[median_list_price_mom]' role='measure' type='quantitative' />
      <column caption='Median List Price Yoy' datatype='real' name='[median_list_price_yoy]' role='measure' type='quantitative' />
      <column caption='Median Ppsf' datatype='real' name='[median_ppsf]' role='measure' type='quantitative' />
      <column caption='Median Ppsf Mom' datatype='real' name='[median_ppsf_mom]' role='measure' type='quantitative' />
      <column caption='Median Ppsf Yoy' datatype='real' name='[median_ppsf_yoy]' role='measure' type='quantitative' />
      <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='measure' type='quantitative' />
      <column caption='Median Sale Price Mom' datatype='real' name='[median_sale_price_mom]' role='measure' type='quantitative' />
      <column caption='Median Sale Price Yoy' datatype='real' name='[median_sale_price_yoy]' role='measure' type='quantitative' />
      <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='measure' type='quantitative' />
      <column caption='Months Of Supply Mom' datatype='real' name='[months_of_supply_mom]' role='measure' type='quantitative' />
      <column caption='Months Of Supply Yoy' datatype='real' name='[months_of_supply_yoy]' role='measure' type='quantitative' />
      <column caption='New Listings' datatype='real' name='[new_listings]' role='measure' type='quantitative' />
      <column caption='New Listings Mom' datatype='real' name='[new_listings_mom]' role='measure' type='quantitative' />
      <column caption='New Listings Yoy' datatype='real' name='[new_listings_yoy]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks' datatype='real' name='[off_market_in_two_weeks]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks Mom' datatype='real' name='[off_market_in_two_weeks_mom]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks Yoy' datatype='real' name='[off_market_in_two_weeks_yoy]' role='measure' type='quantitative' />
      <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Parent Metro Region Metro Code' datatype='integer' name='[parent_metro_region_metro_code]' role='dimension' type='ordinal' />
      <column caption='Pending Sales' datatype='real' name='[pending_sales]' role='measure' type='quantitative' />
      <column caption='Pending Sales Mom' datatype='real' name='[pending_sales_mom]' role='measure' type='quantitative' />
      <column caption='Pending Sales Yoy' datatype='real' name='[pending_sales_yoy]' role='measure' type='quantitative' />
      <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
      <column caption='Period Duration' datatype='integer' name='[period_duration]' role='measure' type='quantitative' />
      <column caption='Period End' datatype='date' datatype-customized='true' name='[period_end]' role='dimension' type='ordinal' />
      <column caption='Price Drops' datatype='real' name='[price_drops]' role='measure' type='quantitative' />
      <column caption='Price Drops Mom' datatype='real' name='[price_drops_mom]' role='measure' type='quantitative' />
      <column caption='Price Drops Yoy' datatype='real' name='[price_drops_yoy]' role='measure' type='quantitative' />
      <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      <column caption='Property Type Id' datatype='integer' name='[property_type_id]' role='dimension' type='ordinal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Region Type' datatype='string' name='[region_type]' role='dimension' type='nominal' />
      <column caption='Region Type Id' datatype='integer' name='[region_type_id]' role='dimension' type='ordinal' />
      <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='measure' type='quantitative' />
      <column caption='Sold Above List Mom' datatype='real' name='[sold_above_list_mom]' role='measure' type='quantitative' />
      <column caption='Sold Above List Yoy' datatype='real' name='[sold_above_list_yoy]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' default-role='measure' default-type='ordinal' name='[state_]' role='dimension' type='nominal' />
      <column caption='State Code' datatype='string' name='[state_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Table Id' datatype='integer' name='[table_id]' role='dimension' type='ordinal' />
      <column-instance column='[median_list_price]' derivation='Avg' name='[avg:median_list_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_sale_price]' derivation='Avg' name='[avg:median_sale_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_listings]' derivation='Avg' name='[avg:new_listings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sold_above_list]' derivation='Avg' name='[avg:sold_above_list:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Boston Metro Area' />
          <alias key='true' value='Other Metro Areas in High Population Set' />
        </aliases>
      </column-instance>
      <column-instance column='[Parent Metro Region Set 2]' derivation='InOut' name='[io:Parent Metro Region Set 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Relocation Set (copy 2)]' derivation='InOut' name='[io:Relocation Set (copy 2):nk]' pivot='key' type='nominal' />
      <column-instance column='[Relocation Set (copy)]' derivation='InOut' name='[io:Relocation Set (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <column-instance column='[period_begin]' derivation='Quarter' name='[qr:period_begin:ok]' pivot='key' type='ordinal' />
      <column-instance column='[homes_sold]' derivation='Sum' name='[sum:homes_sold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_dom]' derivation='Sum' name='[sum:median_dom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_list_price]' derivation='Sum' name='[sum:median_list_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_sale_price]' derivation='Sum' name='[sum:median_sale_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[months_of_supply]' derivation='Sum' name='[sum:months_of_supply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_listings]' derivation='Sum' name='[sum:new_listings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_listings_yoy]' derivation='Sum' name='[sum:new_listings_yoy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pending_sales]' derivation='Sum' name='[sum:pending_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price_drops]' derivation='Sum' name='[sum:price_drops:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sold_above_list]' derivation='Sum' name='[sum:sold_above_list:qk]' pivot='key' type='quantitative' />
      <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Parent Metro Region,YEAR(Period Begin),QUARTER(Period Begin))' hidden='true' name='[Action (Parent Metro Region,YEAR(Period Begin),QUARTER(Period Begin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[parent_metro_region]' />
          <groupfilter function='level-members' level='[yr:period_begin:ok]' />
          <groupfilter function='level-members' level='[qr:period_begin:ok]' />
        </groupfilter>
      </group>
      <group caption='High Population Set - Boston Special' name='[High Population Set (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
          <groupfilter function='except'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='%null%' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='High Population Set' name='[Parent Metro Region Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
          <groupfilter function='except'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='%null%' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Relocation Set' name='[Parent Metro Region Set 3]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
          <groupfilter function='except'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Coral, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orlando, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tampa, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='%null%' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Parent Metro Region Set' name='[Parent Metro Region Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
          <groupfilter function='except'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ann Arbor, MI&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atlanta, GA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, OR&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='%null%' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Relocation Set - Boston Special' name='[Relocation Set (copy 2)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
          <groupfilter function='except'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Coral, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orlando, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tampa, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='%null%' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Relocation Set - High Population Special' name='[Relocation Set (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
          <groupfilter function='except'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Coral, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orlando, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tampa, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='%null%' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='boston_set' name='[boston_set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
          <groupfilter function='except'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ann Arbor, MI&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atlanta, GA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, OR&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='%null%' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parent Metro Region Set]' type='palette'>
            <map to='#4e79a7'>
              <bucket>(&quot;Boston\, MA&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;San Francisco\, CA&quot;)</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>(&quot;New York\, NY&quot;)</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>(&quot;Atlanta\, GA&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Washington\, DC&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Los Angeles\, CA&quot;)</bucket>
            </map>
            <map to='#edc948'>
              <bucket>(&quot;Seattle\, WA&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Chicago\, IL&quot;)</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>(&quot;Ann Arbor\, MI&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:homes_sold:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[High Population Set (copy)]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_sale_price:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:new_listings_yoy:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:pending_sales:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:price_drops:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:new_listings:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_list_price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_list_price:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:sold_above_list:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:new_listings:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:new_listings:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:period_begin:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2020</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2012</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2016</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2021</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2017</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2013</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2018</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2022</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2019</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2023</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Washington, DC &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbus, OH &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Francisco, CA &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Paso, TX &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seattle, WA &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas, TX &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austin, TX &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New York, NY &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Houston, TX &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philadelphia, PA &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Jose, CA &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville, FL &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boston, MA &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Las Vegas, NV &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte, NC &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago, IL &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Antonio, TX &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Phoenix, AZ &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denver, CO &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indianapolis, IN &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Los Angeles, CA &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Worth, TX &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nashville, TN &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oklahoma City, OK &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Diego, CA &quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Relocation Set (copy):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Parent Metro Region Set 2:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Parent Metro Region Set 2]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>(&quot;Washington\, DC&quot;)</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>(&quot;Washington\, DC metropolitan area&quot;)</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>(&quot;Seattle\, WA metropolitan area&quot;)</bucket>
            </map>
            <map to='#33608d'>
              <bucket>(&quot;Seattle\, WA&quot;)</bucket>
            </map>
            <map to='#34618e'>
              <bucket>(&quot;San Jose\, CA metropolitan area&quot;)</bucket>
            </map>
            <map to='#396794'>
              <bucket>(&quot;San Francisco\, CA metropolitan area&quot;)</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>(&quot;San Jose\, CA&quot;)</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>(&quot;San Diego\, CA&quot;)</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>(&quot;San Diego\, CA metropolitan area&quot;)</bucket>
            </map>
            <map to='#42719f'>
              <bucket>(&quot;San Antonio\, TX&quot;)</bucket>
            </map>
            <map to='#42719f'>
              <bucket>(&quot;San Antonio\, TX metropolitan area&quot;)</bucket>
            </map>
            <map to='#43719f'>
              <bucket>(&quot;San Francisco\, CA&quot;)</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>(&quot;Phoenix\, AZ&quot;)</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>(&quot;Phoenix\, AZ metropolitan area&quot;)</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>(&quot;Portland\, OR&quot;)</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>(&quot;Philadelphia\, PA metropolitan area&quot;)</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>(&quot;Oklahoma City\, OK&quot;)</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>(&quot;Oklahoma City\, OK metropolitan area&quot;)</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>(&quot;Portland\, ME&quot;)</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>(&quot;New York\, NY metropolitan area&quot;)</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>(&quot;Nashville\, TN&quot;)</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>(&quot;Nashville\, TN metropolitan area&quot;)</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>(&quot;Philadelphia\, PA&quot;)</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>(&quot;Los Angeles\, CA metropolitan area&quot;)</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>(&quot;Las Vegas\, NV&quot;)</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>(&quot;Las Vegas\, NV metropolitan area&quot;)</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>(&quot;New York\, NY&quot;)</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>(&quot;Jacksonville\, FL&quot;)</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>(&quot;Jacksonville\, FL metropolitan area&quot;)</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>(&quot;Miami\, FL&quot;)</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>(&quot;Indianapolis\, IN&quot;)</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>(&quot;Indianapolis\, IN metropolitan area&quot;)</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>(&quot;Houston\, TX&quot;)</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>(&quot;Houston\, TX metropolitan area&quot;)</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>(&quot;Los Angeles\, CA&quot;)</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>(&quot;Fort Worth\, TX&quot;)</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>(&quot;Fort Worth\, TX metropolitan area&quot;)</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>(&quot;El Paso\, TX&quot;)</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>(&quot;El Paso\, TX metropolitan area&quot;)</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>(&quot;Hartford\, CT&quot;)</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>(&quot;Denver\, CO&quot;)</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>(&quot;Denver\, CO metropolitan area&quot;)</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>(&quot;Chicago\, IL&quot;)</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>(&quot;Dallas\, TX&quot;)</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>(&quot;Dallas\, TX metropolitan area&quot;)</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>(&quot;Columbus\, OH&quot;)</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>(&quot;Columbus\, OH metropolitan area&quot;)</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>(&quot;Atlanta\, GA&quot;)</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>(&quot;Chicago\, IL metropolitan area&quot;)</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>(&quot;Charlotte\, NC&quot;)</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>(&quot;Charlotte\, NC metropolitan area&quot;)</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>(&quot;Ann Arbor\, MI&quot;)</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>(&quot;Boston\, MA&quot;)</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>(&quot;Boston\, MA metropolitan area&quot;)</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>(&quot;Austin\, TX&quot;)</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>(&quot;Austin\, TX metropolitan area&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:High Population Set (copy):nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>true</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:parent_metro_region:nk]' palette='purple_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Washington, DC&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Seattle, WA&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;San Jose, CA&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;San Francisco, CA&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;San Diego, CA&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Antonio, TX&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Phoenix, AZ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Albany, NY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andrews, TX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bay City, TX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Blacksburg, VA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bremerton, WA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;California, MD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Centralia, WA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coeur d&apos;Alene, ID&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Corvallis, OR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Decatur, IL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durango, CO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ellensburg, WA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fayetteville, NC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Smith, AR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gary, IN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greensboro, NC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hastings, NE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Houghton, MI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson, OH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kalamazoo, MI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville, TN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laurinburg, NC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lock Haven, PA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Magnolia, AR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mayfield, KY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Milledgeville, GA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moultrie, GA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nassau County, NY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Port, FL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Opelousas, LA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama City, FL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pittsfield, MA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Price, UT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richmond, VA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rutland, VT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Fe, NM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seymour, IN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Bend, IN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steamboat Springs, CO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tullahoma, TN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vidalia, GA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Waterloo, IA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wilmington, NC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zapata, TX&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Portland, OR&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Philadelphia, PA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Altoona, PA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atchison, KS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barnstable Town, MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Berlin, NH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brenham, TX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Buffalo, NY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll, IA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clarksville, TN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cookeville, TN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danville, IL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dothan, AL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Dorado, AR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks, AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Collins, CO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gaffney, SC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Rapids, MN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hailey, ID&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hinesville, GA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indiana, PA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jefferson, GA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kill Devil Hills, NC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakeland, FL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewistown, PA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lumberton, NC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marquette, MI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meridian, MS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montgomery County, PA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muscatine, IA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Newark, NJ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oil City, PA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oxnard, CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Port St. Lucie, FL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reading, PA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rocky Mount, NC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scottsburg, IN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sebastian, FL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sikeston, MO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Joseph, MO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunbury, PA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Toledo, OH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Valdosta, GA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Warren, MI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Point, MS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Worthington, MN&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oklahoma City, OK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ames, IA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auburn, IN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Batesville, AR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Billings, MT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bradford, PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burlington, VT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cedartown, GA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cleveland, TN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cornelia, GA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Davenport, IA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DuBois, PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elizabethtown, KY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faribault, MN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fort Madison, IA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Galesburg, IL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Great Falls, MT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harrisburg, PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honolulu, HI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iron Mountain, MI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Johnstown, PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kingsville, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laredo, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lima, OH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madera, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martin, TN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michigan City, IN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morgan City, LA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nacogdoches, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niles, MI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Olympia, WA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palatka, FL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pine Bluff, AR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portsmouth, OH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reno, NV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Roswell, NM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandpoint, ID&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Selma, AL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Snyder, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Starkville, MS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tacoma, WA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trenton, NJ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernal, UT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Court House, OH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wichita, KS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Youngstown, OH&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Nashville, TN&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;New York, NY&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Las Vegas, NV&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jacksonville, FL&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Indianapolis, IN&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Houston, TX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Albertville, AL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Appleton, WI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austin, MN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bedford, IN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bluefield, WV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brookhaven, MS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Camden, NJ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charleston, SC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs, CO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crescent City, CA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deltona, FL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eagle Pass, TX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Enterprise, AL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fitzgerald, GA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frankfort, KY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glens Falls, NY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenville, OH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena, MT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington, IN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jacksonville, IL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kapaa, HI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laconia, NH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon, MO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Longview, TX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McComb, MS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Minneapolis, MN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mount Sterling, KY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Brunswick, NJ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norwich, CT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oskaloosa, IA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parsons, KS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plymouth, IN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo, CO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke, VA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salem, OH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Savannah, GA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shelby, NC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Lake, IA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stevens Point, WI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Texarkana, TX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls, ID&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Virginia Beach, VA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wauchula, FL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Winfield, KS&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;Washington, DC metropolitan area&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Fort Worth, TX&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso, TX&quot;</bucket>
            </map>
            <map to='#865986'>
              <bucket>&quot;Tampa, FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Albany, OR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Angola, IN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Auburn, NY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beatrice, NE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bloomington, IL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambridge, MD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chambersburg, PA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coffeyville, KS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coshocton, OH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Decatur, IN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Durant, OK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmira, NY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fergus Falls, MN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Wayne, IN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgetown, SC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greensburg, IN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hays, KS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houma, LA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson, TN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kalispell, MT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kokomo, IN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lawrence, KS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Logan, UT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malone, NY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maysville, KY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Milwaukee, WI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mount Airy, NC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Natchez, MS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Vernon, IN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orangeburg, SC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paragould, AR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plainview, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prineville, OR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio Grande City, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sacramento, CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Maria, CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shawano, WI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spartanburg, SC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stephenville, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Taos, NM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa, OK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vincennes, IN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Watertown, NY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wilmington, OH&quot;</bucket>
            </map>
            <map to='#875a87'>
              <bucket>&quot;Tampa, FL metropolitan area&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Denver, CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam, NY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlantic City, NJ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baton Rouge, LA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Binghamton, NY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brainerd, MN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Butte, MT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Celina, OH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clewiston, FL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corning, NY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dayton, OH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dubuque, IA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elk City, OK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Farmington, MO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fort Morgan, CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gallup, NM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greeley, CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harrison, AR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hood River, OR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ithaca, NY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jonesboro, AR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kinston, NC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Cruces, NM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln, IL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison, IN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Martinsville, VA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middlesborough, KY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morristown, TN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Napa, CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nogales, AZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Omaha, NE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palestine, TX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pinehurst, NC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pottsville, PA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rexburg, ID&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ruidoso, NM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sandusky, OH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seneca Falls, NY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somerset, KY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;State College, PA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tahlequah, OK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Troy, AL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vernon, TX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Plains, MO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Williamsport, PA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuba City, CA&quot;</bucket>
            </map>
            <map to='#916491'>
              <bucket>&quot;Portland, ME&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Dallas, TX&quot;</bucket>
            </map>
            <map to='#946692'>
              <bucket>&quot;Portland, ME metropolitan area&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Columbus, OH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Akron, OH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alma, MI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ashtabula, OH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baraboo, WI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bennettsville, SC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boone, NC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brunswick, GA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carbondale, IL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cincinnati, OH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord, NH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dixon, IL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Campo, TX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eureka, CA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forest City, NC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fresno, CA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand Junction, CO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guymon, OK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hilo, HI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hutchinson, MN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jasper, IN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kerrville, TX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lake County, IL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston, ID&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ludington, MI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marion, NC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Menomonie, WI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monroe, LA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Muncie, IN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Ulm, MN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ogden, UT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Owensboro, KY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peoria, IL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Port Angeles, WA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rapid City, SD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rockingham, NC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Searcy, AR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Cloud, MN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Summerville, GA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tifton, GA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Utica, NY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wapakoneta, OH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Palm Beach, FL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wooster, OH&quot;</bucket>
            </map>
            <map to='#a06f99'>
              <bucket>&quot;Orlando, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Altus, OK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Athens, OH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barre, VT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Big Rapids, MI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boulder, CO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burley, ID&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carson City, NV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clearlake, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coos Bay, OR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danville, KY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Douglas, GA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fairfield, IA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Dodge, IA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gainesville, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grants Pass, OR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hammond, LA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hobbs, NM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennings, LA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Killeen, TX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lamesa, TX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington, KY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lynchburg, VA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marshall, MN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico, MO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montgomery, AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Muskegon, MI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newberry, SC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Okeechobee, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ozark, AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portales, NM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Red Bluff, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rolla, MO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scranton, PA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sebring, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Silver City, NM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Louis, MO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Susanville, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Topeka, KS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vallejo, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Warren, PA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wheeling, WV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yakima, WA&quot;</bucket>
            </map>
            <map to='#a5729b'>
              <bucket>&quot;Orlando, FL metropolitan area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Charlotte, NC&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Atlanta, GA&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Boston, MA&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Boston, MA metropolitan area&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Chicago, IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ada, OK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alice, TX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asheville, NC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baltimore, MD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bemidji, MN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boise City, ID&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brownsville, TX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chico, CA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus, NE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cullowhee, NC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Des Moines, IA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edwards, CO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eufaula, AL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Florence, SC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fremont, NE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Granbury, TX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grenada, MS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hickory, NC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huron, SD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Janesville, WI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kennett, MO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Charles, LA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lewisburg, PA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisville, KY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marinette, WI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Medford, OR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mobile, AL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mountain Home, AR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Orleans, LA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ocean City, NJ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ottumwa, IA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pella, IA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pontiac, IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Racine, WI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rockford, IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salt Lake City, UT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Show Low, AZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Springfield, MO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sturgis, MI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thomasville, GA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Union, SC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wahpeton, ND&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Weirton, WV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wisconsin Rapids, WI&quot;</bucket>
            </map>
            <map to='#b57ea3'>
              <bucket>&quot;New York, NY metropolitan area&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anaheim, CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Atmore, AL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Battle Creek, MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Birmingham, AL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Branson, MO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cadillac, MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central City, KY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clinton, IA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corsicana, TX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dayton, TN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dumas, TX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elkhart, IN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Farmington, NM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Payne, AL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garden City, KS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Green Bay, WI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harrisonburg, VA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hope, AR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson, MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Joplin, MO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirksville, MO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Las Vegas, NM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lincoln, NE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madison, WI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maryville, MO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Midland, MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moscow, ID&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Naples, FL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk, NE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oneonta, NY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Bay, FL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pittsburg, KS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poughkeepsie, NY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richmond, IN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russellville, AR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sanford, NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seneca, SC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somerset, PA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Statesboro, GA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Talladega, AL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Truckee, CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vicksburg, MS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington, IN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willmar, MN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yuma, AZ&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Ann Arbor, MI&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Austin, TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aberdeen, SD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alexander City, AL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arcadia, FL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beeville, TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bluffton, IN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brookings, OR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Campbellsville, KY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia, MO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crestview, FL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deming, NM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Stroudsburg, PA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Erie, PA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flagstaff, AZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Frederick, MD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Glenwood Springs, CO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenville, SC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henderson, NC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huntington, WV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jacksonville, NC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kearney, NE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette, IN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon, NH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Longview, WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manitowoc, WI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McMinnville, TN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mount Vernon, IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Castle, IN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oak Harbor, WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Othello, WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Payson, AZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pocatello, ID&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pullman, WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rochelle, IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Salem, OR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sayre, PA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shelbyville, TN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spokane, WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stillwater, OK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;The Dalles, OR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler, TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Visalia, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wausau, WI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winnemucca, NV&quot;</bucket>
            </map>
            <map to='#bc86a9'>
              <bucket>&quot;Miami, FL&quot;</bucket>
            </map>
            <map to='#c28caf'>
              <bucket>&quot;Miami, FL metropolitan area&quot;</bucket>
            </map>
            <map to='#cd9bbc'>
              <bucket>&quot;Los Angeles, CA metropolitan area&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aberdeen, WA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alexandria, LA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ardmore, OK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bainbridge, GA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bellefontaine, OH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blytheville, AR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brookings, SD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cañon City, CO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlottesville, VA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus, IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crossville, TN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Easton, MD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Escanaba, MI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flint, MI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fredericksburg, TX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gloversville, NY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenwood, MS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hereford, TX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Huntsville, AL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jacksonville, TX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Keene, NH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lafayette, LA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon, PA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Los Alamos, NM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mansfield, OH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McPherson, KS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mitchell, SD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mount Vernon, OH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Castle, PA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oakland, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ottawa, IL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearsall, TX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Point Pleasant, WV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rochester, MN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salina, KS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scottsbluff, NE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton, WA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Springfield, IL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;The Villages, FL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukiah, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wabash, IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Waycross, GA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Winona, MN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adrian, MI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allentown, PA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ashland, OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangor, ME&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bend, OR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bonham, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brownwood, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Girardeau, MO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chillicothe, OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cumberland, MD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Detroit, MI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Effingham, IL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eugene, OR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fond du Lac, WI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fremont, OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Island, NE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gulfport, MS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hillsdale, MI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hutchinson, KS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jasper, AL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kennewick, WA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake City, FL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lewisburg, TN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lubbock, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marion, IN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Memphis, TN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Modesto, CA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mountain Home, ID&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Philadelphia, OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Odessa, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owatonna, MN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pensacola, FL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poplar Bluff, MO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raleigh, NC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rockingham County, NH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Angelo, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shreveport, LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Springfield, OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sulphur Springs, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tiffin, OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Urbana, OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walla Walla, WA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wenatchee, WA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodward, OK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alamogordo, NM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alpena, MI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Astoria, OR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bardstown, KY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bennington, VT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Borger, TX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bucyrus, OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carlsbad, NM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clarksdale, MS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Connersville, IN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dalton, GA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dodge City, KS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Centro, CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evansville, IN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forrest City, AR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gadsden, AL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand Rapids, MI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hagerstown, MD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hilton Head Island, SC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Idaho Falls, ID&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jefferson City, MO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Key West, FL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Havasu City, AZ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lewiston, ME&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lufkin, TX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marion, OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Merced, CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monroe, MI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murray, KY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogdensburg, NY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oxford, MS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru, IN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Port Lavaca, TX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Raymondville, TX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rockport, TX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sidney, OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Vista, AZ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. George, UT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sumter, SC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toccoa, GA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uvalde, TX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Warner Robins, GA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Worcester, MA&quot;</bucket>
            </map>
            <map to='#d9aaca'>
              <bucket>&quot;Hartford, CT metropolitan area&quot;</bucket>
            </map>
            <map to='#dcadcd'>
              <bucket>&quot;Chicago, IL metropolitan area&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Albemarle, NC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Auburn, AL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Augusta, GA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beaumont, TX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bloomington, IN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brevard, NC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambridge, OH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Champaign, IL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Craig, CO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Defiance, OH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham, NC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emporia, KS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fernley, NV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gettysburg, PA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenville, MS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Heber, UT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson, WY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kankakee, IL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Crosse, WI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lawrenceburg, TN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Logansport, IN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malvern, AR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McAlester, OK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Minden, LA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mount Pleasant, MI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Natchitoches, LA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Wilkesboro, NC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paris, TN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Platteville, WI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence, RI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riverside, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Safford, AZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Rosa, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shawnee, OK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spearfish, SD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sterling, CO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taylorville, IL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tupelo, MS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vineland, NJ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Watertown, SD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilson, NC&quot;</bucket>
            </map>
            <map to='#e5b8d8'>
              <bucket>&quot;Cape Coral, FL metropolitan area&quot;</bucket>
            </map>
            <map to='#e6b9d9'>
              <bucket>&quot;Hartford, CT&quot;</bucket>
            </map>
            <map to='#e7bada'>
              <bucket>&quot;Cape Coral, FL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albany, GA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anchorage, AK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bay City, MI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blackfoot, ID&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Breckenridge, CO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Calhoun, GA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Centralia, IL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clovis, NM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cortland, NY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Decatur, AL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duncan, OK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elko, NV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fayetteville, AR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Polk South, LA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gardnerville Ranchos, NV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greeneville, TN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helena, AR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hot Springs, AR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson, MS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kahului, HI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Klamath Falls, OR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Little Rock, AR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madisonville, KY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mason City, IA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Midland, TX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moses Lake, WA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Platte, NE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ontario, OR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pampa, TX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pittsburgh, PA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prescott Valley, AZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond, KY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ruston, LA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Cruz, CA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sevierville, TN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sonora, CA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Staunton, VA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tallahassee, FL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tucson, AZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Victoria, TX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington, NC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wilmington, DE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zanesville, OH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amarillo, TX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Athens, TN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bartlesville, OK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Big Spring, TX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bowling Green, KY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burlington, IA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cedar City, UT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cleveland, MS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cordele, GA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Danville, VA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dover, DE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elgin, IL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fairmont, MN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Lauderdale, FL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gainesville, GA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grants, NM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hanford, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Holland, MI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indianola, MS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jesup, GA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kingsport, TN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lancaster, PA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington, NE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macomb, IL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marshall, MO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Missoula, MT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montrose, CO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Muskogee, OK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newport, OR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paducah, KY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Picayune, MS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Punta Gorda, FL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red Wing, MN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rome, GA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Luis Obispo, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sedalia, MO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sioux City, IA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Marys, GA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweetwater, TX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Torrington, CT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Van Wert, OH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Warrensburg, MO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whitewater, WI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yankton, SD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Abilene, TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alexandria, MN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arkadelphia, AR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bakersfield, CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bellingham, WA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bogalusa, LA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brownsville, TN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canton, OH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coldwater, MI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbus, MS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cullman, AL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeRidder, LA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eau Claire, WI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Española, NM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Florence, AL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Freeport, IL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goldsboro, NC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenwood, SC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hermiston, OR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Huntsville, TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamestown, NY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kendallville, IN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LaGrange, GA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Levelland, TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan, KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marietta, OH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meadville, PA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moberly, MO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Vernon, WA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Haven, CT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ocala, FL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ottawa, KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pecos, TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ponca City, OK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rochester, NY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Salinas, CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Scottsboro, AL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sherman, TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Springfield, MA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Storm Lake, IA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thomaston, GA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Union City, TN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Waco, TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Weatherford, OK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Winston-Salem, NC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Albert Lea, MN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anniston, AL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Augusta, ME&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beaver Dam, WI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bloomsburg, PA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bridgeport, CT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Camden, AR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston, IL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station, TX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crawfordsville, IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Del Rio, TX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dyersburg, TN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Enid, OK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Findlay, OH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frankfort, IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glasgow, KY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenville, NC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hudson, NY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kansas City, MO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Grande, OR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawton, OK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;London, KY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manchester, NH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McAllen, TX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mineral Wells, TX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mount Pleasant, TX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bern, NC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norwalk, OH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oshkosh, WI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paris, TX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plattsburgh, NY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo, UT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roanoke Rapids, NC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw, MI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sault Ste. Marie, MI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sheboygan, WI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spencer, IA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sterling, IL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terre Haute, IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa, AL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vineyard Haven, MA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Watertown, WI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Winchester, VA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Americus, GA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Athens, TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Batavia, NY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Big Stone Gap, VA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bozeman, MT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burlington, NC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cedar Rapids, IA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cleveland, OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corinth, MS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Daphne, AL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dublin, GA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elizabeth City, NC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fallon, NV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Leonard Wood, MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gainesville, TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Bend, KS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hannibal, MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Homosassa Springs, FL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iowa City, IA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson City, TN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kingston, NY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lansing, MI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberal, KS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macon, GA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshalltown, IA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Miami, OK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morehead City, NC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myrtle Beach, SC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newport, TN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Olean, NY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pahrump, NV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pierre, SD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quincy, IL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Redding, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roseburg, OR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Rafael, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Selinsgrove, PA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sioux Falls, SD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Marys, PA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syracuse, NY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Traverse City, MI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermillion, SD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warsaw, IN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wichita Falls, TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;York, PA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Parent Metro Region Set 3]' palette='purple_10_0' type='palette'>
            <map to='#4878a6'>
              <bucket>(&quot;Washington\, DC&quot;)</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>(&quot;New York\, NY&quot;)</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>(&quot;Washington\, DC metropolitan area&quot;)</bucket>
            </map>
            <map to='#865986'>
              <bucket>(&quot;Tampa\, FL&quot;)</bucket>
            </map>
            <map to='#885b88'>
              <bucket>(&quot;Tampa\, FL metropolitan area&quot;)</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>(&quot;Los Angeles\, CA&quot;)</bucket>
            </map>
            <map to='#916491'>
              <bucket>(&quot;Portland\, ME&quot;)</bucket>
            </map>
            <map to='#986995'>
              <bucket>(&quot;Portland\, ME metropolitan area&quot;)</bucket>
            </map>
            <map to='#a06f99'>
              <bucket>(&quot;Orlando\, FL&quot;)</bucket>
            </map>
            <map to='#a06f99'>
              <bucket>(&quot;Orlando\, FL metropolitan area&quot;)</bucket>
            </map>
            <map to='#ac769d'>
              <bucket>(&quot;New York\, NY metropolitan area&quot;)</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>(&quot;Boston\, MA&quot;)</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>(&quot;Boston\, MA metropolitan area&quot;)</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>(&quot;Chicago\, IL&quot;)</bucket>
            </map>
            <map to='#bc86a9'>
              <bucket>(&quot;Miami\, FL&quot;)</bucket>
            </map>
            <map to='#bc86a9'>
              <bucket>(&quot;Miami\, FL metropolitan area&quot;)</bucket>
            </map>
            <map to='#c995b7'>
              <bucket>(&quot;Los Angeles\, CA metropolitan area&quot;)</bucket>
            </map>
            <map to='#d1a0c0'>
              <bucket>(&quot;Hartford\, CT&quot;)</bucket>
            </map>
            <map to='#d6a6c6'>
              <bucket>(&quot;Hartford\, CT metropolitan area&quot;)</bucket>
            </map>
            <map to='#dcadcd'>
              <bucket>(&quot;Chicago\, IL metropolitan area&quot;)</bucket>
            </map>
            <map to='#e4b6d6'>
              <bucket>(&quot;Cape Coral\, FL metropolitan area&quot;)</bucket>
            </map>
            <map to='#e7bada'>
              <bucket>(&quot;Cape Coral\, FL&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Relocation Set (copy 2):nk]' type='palette'>
            <map to='#ae123a'>
              <bucket>false</bucket>
            </map>
            <map to='#ca96b8'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:15:ok]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>3</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>2</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>1</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:3:ok]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>7</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>9</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>22</bucket>
            </map>
            <map to='#300561'>
              <bucket>0</bucket>
            </map>
            <map to='#305d89'>
              <bucket>21</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>6</bucket>
            </map>
            <map to='#366390'>
              <bucket>20</bucket>
            </map>
            <map to='#396794'>
              <bucket>8</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>19</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>18</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>17</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>4</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>16</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>15</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>14</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>3</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>13</bucket>
            </map>
            <map to='#6394be'>
              <bucket>12</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>11</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>10</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>2</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>1</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>3</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>2</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{0a95e730-a73c-4b4c-af3a-5536d5904aa3}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{c6e6c377-95c5-477c-ac38-b441e8a1889a}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{c9054b67-6288-417f-8e18-d709a9fc72b9}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='housing' id='housing (boston.housing)_EE5E2C7D28C94570A73D84EE966BD7A0'>
            <properties context=''>
              <relation connection='postgres.0o1ia7t1krwvtj19qvx4c0m4f053' name='housing' table='[boston].[housing]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_begin' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_end' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='bos_commuting_21 (boston.bos_commuting_21) (postgres)' inline='true' name='federated.0ujnqdc0ko1xqq14tq9jg0jt9j70' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1dazt920279arb133cno20f7gziw'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1dazt920279arb133cno20f7gziw' name='bos_commuting_21' table='[boston].[bos_commuting_21]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1dazt920279arb133cno20f7gziw' name='bos_commuting_21' table='[boston].[bos_commuting_21]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>label_grouping</remote-name>
            <remote-type>129</remote-type>
            <local-name>[label_grouping]</local-name>
            <parent-name>[bos_commuting_21]</parent-name>
            <remote-alias>label_grouping</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting_21 (boston.bos_commuting_21)_FFCB8EECF4B446BDB03032BAF2B1DEBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_est</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_est]</local-name>
            <parent-name>[bos_commuting_21]</parent-name>
            <remote-alias>total_est</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting_21 (boston.bos_commuting_21)_FFCB8EECF4B446BDB03032BAF2B1DEBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_moe</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_moe]</local-name>
            <parent-name>[bos_commuting_21]</parent-name>
            <remote-alias>total_moe</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting_21 (boston.bos_commuting_21)_FFCB8EECF4B446BDB03032BAF2B1DEBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_est</remote-name>
            <remote-type>131</remote-type>
            <local-name>[male_est]</local-name>
            <parent-name>[bos_commuting_21]</parent-name>
            <remote-alias>male_est</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting_21 (boston.bos_commuting_21)_FFCB8EECF4B446BDB03032BAF2B1DEBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_moe</remote-name>
            <remote-type>131</remote-type>
            <local-name>[male_moe]</local-name>
            <parent-name>[bos_commuting_21]</parent-name>
            <remote-alias>male_moe</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting_21 (boston.bos_commuting_21)_FFCB8EECF4B446BDB03032BAF2B1DEBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_est</remote-name>
            <remote-type>131</remote-type>
            <local-name>[female_est]</local-name>
            <parent-name>[bos_commuting_21]</parent-name>
            <remote-alias>female_est</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting_21 (boston.bos_commuting_21)_FFCB8EECF4B446BDB03032BAF2B1DEBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_moe</remote-name>
            <remote-type>131</remote-type>
            <local-name>[female_moe]</local-name>
            <parent-name>[bos_commuting_21]</parent-name>
            <remote-alias>female_moe</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting_21 (boston.bos_commuting_21)_FFCB8EECF4B446BDB03032BAF2B1DEBA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='bos_commuting_21' datatype='table' name='[__tableau_internal_object_id__].[bos_commuting_21 (boston.bos_commuting_21)_FFCB8EECF4B446BDB03032BAF2B1DEBA]' role='measure' type='quantitative' />
      <column caption='Female Est' datatype='real' name='[female_est]' role='dimension' type='ordinal' />
      <column caption='Female Moe' datatype='real' name='[female_moe]' role='dimension' type='ordinal' />
      <column caption='Label Grouping' datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
      <column caption='Male Est' datatype='real' name='[male_est]' role='dimension' type='ordinal' />
      <column caption='Male Moe' datatype='real' name='[male_moe]' role='dimension' type='ordinal' />
      <column caption='Total Est' datatype='real' name='[total_est]' role='dimension' type='ordinal' />
      <column caption='Total Moe' datatype='real' name='[total_moe]' role='dimension' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='bos_commuting_21' id='bos_commuting_21 (boston.bos_commuting_21)_FFCB8EECF4B446BDB03032BAF2B1DEBA'>
            <properties context=''>
              <relation connection='postgres.1dazt920279arb133cno20f7gziw' name='bos_commuting_21' table='[boston].[bos_commuting_21]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='redfin_construction_dom (boston.redfin_construction_dom) (postgres)' inline='true' name='federated.1l3udmg117jwxt1b3osnh04wnvas' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1rzin7g02duoel1d3lvui0alu3la'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1rzin7g02duoel1d3lvui0alu3la' name='redfin_construction_dom' table='[boston].[redfin_construction_dom]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='timeframe' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1rzin7g02duoel1d3lvui0alu3la' name='redfin_construction_dom' table='[boston].[redfin_construction_dom]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='timeframe' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indicator]</local-name>
            <parent-name>[redfin_construction_dom]</parent-name>
            <remote-alias>indicator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_construction_dom (boston.redfin_construction_dom)_8D4A575951A24F778FC28510E72CA3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeframe</remote-name>
            <remote-type>7</remote-type>
            <local-name>[timeframe]</local-name>
            <parent-name>[redfin_construction_dom]</parent-name>
            <remote-alias>timeframe</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_construction_dom (boston.redfin_construction_dom)_8D4A575951A24F778FC28510E72CA3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>existing</remote-name>
            <remote-type>129</remote-type>
            <local-name>[existing]</local-name>
            <parent-name>[redfin_construction_dom]</parent-name>
            <remote-alias>existing</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_construction_dom (boston.redfin_construction_dom)_8D4A575951A24F778FC28510E72CA3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_construction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_construction]</local-name>
            <parent-name>[redfin_construction_dom]</parent-name>
            <remote-alias>new_construction</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_construction_dom (boston.redfin_construction_dom)_8D4A575951A24F778FC28510E72CA3A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='redfin_construction_dom' datatype='table' name='[__tableau_internal_object_id__].[redfin_construction_dom (boston.redfin_construction_dom)_8D4A575951A24F778FC28510E72CA3A1]' role='measure' type='quantitative' />
      <column caption='Existing' datatype='real' datatype-customized='true' name='[existing]' role='dimension' type='ordinal' />
      <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
      <column caption='New Construction' datatype='real' datatype-customized='true' name='[new_construction]' role='dimension' type='ordinal' />
      <column caption='Timeframe' datatype='date' datatype-customized='true' name='[timeframe]' role='dimension' type='ordinal' />
      <column-instance column='[existing]' derivation='Sum' name='[sum:existing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_construction]' derivation='Sum' name='[sum:new_construction:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l3udmg117jwxt1b3osnh04wnvas].[sum:existing:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1l3udmg117jwxt1b3osnh04wnvas].[sum:new_construction:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='redfin_construction_dom' id='redfin_construction_dom (boston.redfin_construction_dom)_8D4A575951A24F778FC28510E72CA3A1'>
            <properties context=''>
              <relation connection='postgres.1rzin7g02duoel1d3lvui0alu3la' name='redfin_construction_dom' table='[boston].[redfin_construction_dom]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='MMM-yy' name='timeframe' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='join_pop_housing (boston.join_pop_housing) (postgres)' inline='true' name='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0cuqhi905m7e71119ilgm0nyt4xf'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0cuqhi905m7e71119ilgm0nyt4xf' name='join_pop_housing' table='[boston].[join_pop_housing]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0cuqhi905m7e71119ilgm0nyt4xf' name='join_pop_housing' table='[boston].[join_pop_housing]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>date_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>131</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_begin</remote-name>
            <remote-type>7</remote-type>
            <local-name>[period_begin]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>period_begin</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_end</remote-name>
            <remote-type>129</remote-type>
            <local-name>[period_end]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>period_end</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_duration</remote-name>
            <remote-type>3</remote-type>
            <local-name>[period_duration]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>period_duration</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_type]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>region_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[region_type_id]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>region_type_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>table_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[table_id]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>table_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_seasonally_adjusted</remote-name>
            <remote-type>129</remote-type>
            <local-name>[is_seasonally_adjusted]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>is_seasonally_adjusted</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>5</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[state_]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>state_</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_code]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>state_code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_type]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>property_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[property_type_id]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>property_type_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_sale_price</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_sale_price_mom</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_sale_price_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_sale_price_yoy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_list_price</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_list_price_mom</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_price_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_list_price_yoy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_ppsf</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_ppsf_mom</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_ppsf_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_ppsf_yoy</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_list_ppsf</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_list_ppsf_mom</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_list_ppsf_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_list_ppsf_yoy</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>homes_sold</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>homes_sold_mom</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[homes_sold_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>homes_sold_yoy</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>pending_sales</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>pending_sales_mom</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pending_sales_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>pending_sales_yoy</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>new_listings</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>new_listings_mom</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_listings_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>new_listings_yoy</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>inventory</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>inventory_mom</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inventory_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>inventory_yoy</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>months_of_supply</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>months_of_supply_mom</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[months_of_supply_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>months_of_supply_yoy</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_dom</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_dom_mom</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_dom_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>median_dom_yoy</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>avg_sale_to_list</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>avg_sale_to_list_mom</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_to_list_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>avg_sale_to_list_yoy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>sold_above_list</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>sold_above_list_mom</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sold_above_list_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>sold_above_list_yoy</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>price_drops</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>price_drops_mom</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_drops_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>price_drops_yoy</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>off_market_in_two_weeks</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_mom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks_mom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>off_market_in_two_weeks_mom</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_yoy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[off_market_in_two_weeks_yoy]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>off_market_in_two_weeks_yoy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parent_metro_region]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>parent_metro_region</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region_metro_code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[parent_metro_region_metro_code]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>parent_metro_region_metro_code</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_updated</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_updated]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>last_updated</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_price_all</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_sale_price_all]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>avg_sale_price_all</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_price]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>avg_price</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_dom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_dom]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>avg_dom</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_mos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_mos]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>avg_mos</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_omtw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_omtw]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>avg_omtw</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cpi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cpi]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>cpi</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cpi_housing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cpi_housing]</local-name>
            <parent-name>[join_pop_housing]</parent-name>
            <remote-alias>cpi_housing</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='join_pop_housing' datatype='table' name='[__tableau_internal_object_id__].[join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE]' role='measure' type='quantitative' />
      <column caption='Avg Sale Price All' datatype='real' name='[avg_sale_price_all]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List' datatype='real' name='[avg_sale_to_list]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List Mom' datatype='real' name='[avg_sale_to_list_mom]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List Yoy' datatype='real' name='[avg_sale_to_list_yoy]' role='measure' type='quantitative' />
      <column caption='City' datatype='real' name='[city]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
      <column caption='Homes Sold' datatype='real' name='[homes_sold]' role='measure' type='quantitative' />
      <column caption='Homes Sold Mom' datatype='real' name='[homes_sold_mom]' role='measure' type='quantitative' />
      <column caption='Homes Sold Yoy' datatype='real' name='[homes_sold_yoy]' role='measure' type='quantitative' />
      <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
      <column caption='Inventory Mom' datatype='real' name='[inventory_mom]' role='measure' type='quantitative' />
      <column caption='Inventory Yoy' datatype='real' name='[inventory_yoy]' role='measure' type='quantitative' />
      <column caption='Is Seasonally Adjusted' datatype='string' name='[is_seasonally_adjusted]' role='dimension' type='nominal' />
      <column caption='Last Updated' datatype='string' name='[last_updated]' role='dimension' type='nominal' />
      <column caption='Median Dom' datatype='real' name='[median_dom]' role='measure' type='quantitative' />
      <column caption='Median Dom Mom' datatype='real' name='[median_dom_mom]' role='measure' type='quantitative' />
      <column caption='Median Dom Yoy' datatype='real' name='[median_dom_yoy]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf' datatype='real' name='[median_list_ppsf]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf Mom' datatype='real' name='[median_list_ppsf_mom]' role='measure' type='quantitative' />
      <column caption='Median List Ppsf Yoy' datatype='real' name='[median_list_ppsf_yoy]' role='measure' type='quantitative' />
      <column caption='Median List Price' datatype='real' name='[median_list_price]' role='measure' type='quantitative' />
      <column caption='Median List Price Mom' datatype='real' name='[median_list_price_mom]' role='measure' type='quantitative' />
      <column caption='Median List Price Yoy' datatype='real' name='[median_list_price_yoy]' role='measure' type='quantitative' />
      <column caption='Median Ppsf' datatype='real' name='[median_ppsf]' role='measure' type='quantitative' />
      <column caption='Median Ppsf Mom' datatype='real' name='[median_ppsf_mom]' role='measure' type='quantitative' />
      <column caption='Median Ppsf Yoy' datatype='real' name='[median_ppsf_yoy]' role='measure' type='quantitative' />
      <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='measure' type='quantitative' />
      <column caption='Median Sale Price Mom' datatype='real' name='[median_sale_price_mom]' role='measure' type='quantitative' />
      <column caption='Median Sale Price Yoy' datatype='real' name='[median_sale_price_yoy]' role='measure' type='quantitative' />
      <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='measure' type='quantitative' />
      <column caption='Months Of Supply Mom' datatype='real' name='[months_of_supply_mom]' role='measure' type='quantitative' />
      <column caption='Months Of Supply Yoy' datatype='real' name='[months_of_supply_yoy]' role='measure' type='quantitative' />
      <column caption='New Listings' datatype='real' name='[new_listings]' role='measure' type='quantitative' />
      <column caption='New Listings Mom' datatype='real' name='[new_listings_mom]' role='measure' type='quantitative' />
      <column caption='New Listings Yoy' datatype='real' name='[new_listings_yoy]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks' datatype='real' name='[off_market_in_two_weeks]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks Mom' datatype='real' name='[off_market_in_two_weeks_mom]' role='measure' type='quantitative' />
      <column caption='Off Market In Two Weeks Yoy' datatype='real' name='[off_market_in_two_weeks_yoy]' role='measure' type='quantitative' />
      <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' type='nominal' />
      <column caption='Parent Metro Region Metro Code' datatype='integer' name='[parent_metro_region_metro_code]' role='dimension' type='ordinal' />
      <column caption='Pending Sales' datatype='real' name='[pending_sales]' role='measure' type='quantitative' />
      <column caption='Pending Sales Mom' datatype='real' name='[pending_sales_mom]' role='measure' type='quantitative' />
      <column caption='Pending Sales Yoy' datatype='real' name='[pending_sales_yoy]' role='measure' type='quantitative' />
      <column caption='Period Begin' datatype='date' name='[period_begin]' role='dimension' type='ordinal' />
      <column caption='Period Duration' datatype='integer' name='[period_duration]' role='measure' type='quantitative' />
      <column caption='Period End' datatype='string' name='[period_end]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Price Drops' datatype='real' name='[price_drops]' role='measure' type='quantitative' />
      <column caption='Price Drops Mom' datatype='real' name='[price_drops_mom]' role='measure' type='quantitative' />
      <column caption='Price Drops Yoy' datatype='real' name='[price_drops_yoy]' role='measure' type='quantitative' />
      <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      <column caption='Property Type Id' datatype='integer' name='[property_type_id]' role='dimension' type='ordinal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Region Type' datatype='string' name='[region_type]' role='dimension' type='nominal' />
      <column caption='Region Type Id' datatype='integer' name='[region_type_id]' role='dimension' type='ordinal' />
      <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='measure' type='quantitative' />
      <column caption='Sold Above List Mom' datatype='real' name='[sold_above_list_mom]' role='measure' type='quantitative' />
      <column caption='Sold Above List Yoy' datatype='real' name='[sold_above_list_yoy]' role='measure' type='quantitative' />
      <column caption='State' datatype='real' name='[state_]' role='measure' type='quantitative' />
      <column caption='State Code' datatype='string' name='[state_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Table Id' datatype='integer' name='[table_id]' role='dimension' type='ordinal' />
      <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
      <column-instance column='[homes_sold]' derivation='Avg' name='[avg:homes_sold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[homes_sold]' derivation='Sum' name='[sum:homes_sold:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_list_price]' derivation='Sum' name='[sum:median_list_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_sale_price]' derivation='Sum' name='[sum:median_sale_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[months_of_supply]' derivation='Sum' name='[sum:months_of_supply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_listings]' derivation='Sum' name='[sum:new_listings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sold_above_list]' derivation='Sum' name='[sum:sold_above_list:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[avg:homes_sold:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:homes_sold:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:inventory:qk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:months_of_supply:qk]&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:new_listings:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[avg:population:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:sold_above_list:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_sale_price:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='join_pop_housing' id='join_pop_housing (boston.join_pop_housing)_8AD4415378374F159EF5FE5E3F4367BE'>
            <properties context=''>
              <relation connection='postgres.0cuqhi905m7e71119ilgm0nyt4xf' name='join_pop_housing' table='[boston].[join_pop_housing]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='income_restricted_22 (boston.income_restricted_22) (postgres)' inline='true' name='federated.1pveoyc116gjhu152l1r30wh75id' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.119khd11ytxz0917mmnbe1jq74f6'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.119khd11ytxz0917mmnbe1jq74f6' name='income_restricted_22' table='[boston].[income_restricted_22]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.119khd11ytxz0917mmnbe1jq74f6' name='income_restricted_22' table='[boston].[income_restricted_22]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>project_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[project_name]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>project_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_project_units</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_project_units]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>total_project_units</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rent_units</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rent_units]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>rent_units</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>own_units</remote-name>
            <remote-type>3</remote-type>
            <local-name>[own_units]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>own_units</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_market</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_market]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>total_market</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_rent</remote-name>
            <remote-type>3</remote-type>
            <local-name>[market_rent]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>market_rent</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_own</remote-name>
            <remote-type>3</remote-type>
            <local-name>[market_own]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>market_own</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_income_restricted</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_income_restricted]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>total_income_restricted</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income_restricted_rental</remote-name>
            <remote-type>3</remote-type>
            <local-name>[income_restricted_rental]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>income_restricted_rental</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income_restricted_ownership</remote-name>
            <remote-type>3</remote-type>
            <local-name>[income_restricted_ownership]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>income_restricted_ownership</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tenure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tenure]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>tenure</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>public_private</remote-name>
            <remote-type>129</remote-type>
            <local-name>[public_private]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>public_private</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elderly_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[elderly_units]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>elderly_units</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>section_8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[section_8]</local-name>
            <parent-name>[income_restricted_22]</parent-name>
            <remote-alias>section_8</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='income_restricted_22' datatype='table' name='[__tableau_internal_object_id__].[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]' role='measure' type='quantitative' />
      <column caption='Elderly Units' datatype='string' name='[elderly_units]' role='dimension' type='nominal' />
      <column caption='Income Restricted Ownership' datatype='integer' name='[income_restricted_ownership]' role='measure' type='quantitative' />
      <column caption='Income Restricted Rental' datatype='integer' name='[income_restricted_rental]' role='measure' type='quantitative' />
      <column caption='Market Own' datatype='integer' name='[market_own]' role='measure' type='quantitative' />
      <column caption='Market Rent' datatype='integer' name='[market_rent]' role='measure' type='quantitative' />
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
      <column caption='Own Units' datatype='integer' name='[own_units]' role='measure' type='quantitative' />
      <column caption='Project Name' datatype='string' name='[project_name]' role='dimension' type='nominal' />
      <column caption='Public Private' datatype='string' name='[public_private]' role='dimension' type='nominal' />
      <column caption='Rent Units' datatype='integer' name='[rent_units]' role='measure' type='quantitative' />
      <column caption='Section 8' datatype='string' name='[section_8]' role='dimension' type='nominal' />
      <column caption='Tenure' datatype='string' name='[tenure]' role='dimension' type='nominal' />
      <column caption='Total Income Restricted' datatype='integer' name='[total_income_restricted]' role='measure' type='quantitative' />
      <column caption='Total Market' datatype='integer' name='[total_market]' role='measure' type='quantitative' />
      <column caption='Total Project Units' datatype='integer' name='[total_project_units]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income_restricted_ownership]' derivation='Sum' name='[sum:income_restricted_ownership:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income_restricted_rental]' derivation='Sum' name='[sum:income_restricted_rental:qk]' pivot='key' type='quantitative' />
      <column-instance column='[market_own]' derivation='Sum' name='[sum:market_own:qk]' pivot='key' type='quantitative' />
      <column-instance column='[market_rent]' derivation='Sum' name='[sum:market_rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[own_units]' derivation='Sum' name='[sum:own_units:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rent_units]' derivation='Sum' name='[sum:rent_units:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_income_restricted]' derivation='Sum' name='[sum:total_income_restricted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_market]' derivation='Sum' name='[sum:total_market:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_project_units]' derivation='Sum' name='[sum:total_project_units:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:income_restricted_ownership:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:market_rent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:market_own:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:total_market:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:rent_units:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:income_restricted_rental:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:total_project_units:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[__tableau_internal_object_id__].[cnt:income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:own_units:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:total_income_restricted:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='income_restricted_22' id='income_restricted_22 (boston.income_restricted_22)_B6748003F99D45C28D337330EABB5CA0'>
            <properties context=''>
              <relation connection='postgres.119khd11ytxz0917mmnbe1jq74f6' name='income_restricted_22' table='[boston].[income_restricted_22]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='gross_rent (boston.gross_rent) (postgres)' inline='true' name='federated.0fod11d0cmxddv15cv2uw0dbqdgs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.183bhlh00rk3xx13sx0i21ngulx6'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.183bhlh00rk3xx13sx0i21ngulx6' name='gross_rent' table='[boston].[gross_rent]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.183bhlh00rk3xx13sx0i21ngulx6' name='gross_rent' table='[boston].[gross_rent]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>label_grouping</remote-name>
            <remote-type>129</remote-type>
            <local-name>[label_grouping]</local-name>
            <parent-name>[gross_rent]</parent-name>
            <remote-alias>label_grouping</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gross_rent (boston.gross_rent)_584EDB483A9044AB9812875FBCEE9850]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_estimate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_estimate]</local-name>
            <parent-name>[gross_rent]</parent-name>
            <remote-alias>boston_2016_21_estimate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gross_rent (boston.gross_rent)_584EDB483A9044AB9812875FBCEE9850]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_moe_plusminus</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_moe_plusminus]</local-name>
            <parent-name>[gross_rent]</parent-name>
            <remote-alias>boston_2016_21_moe_plusminus</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gross_rent (boston.gross_rent)_584EDB483A9044AB9812875FBCEE9850]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_percent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_percent]</local-name>
            <parent-name>[gross_rent]</parent-name>
            <remote-alias>boston_2016_21_percent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gross_rent (boston.gross_rent)_584EDB483A9044AB9812875FBCEE9850]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_estimate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_estimate]</local-name>
            <parent-name>[gross_rent]</parent-name>
            <remote-alias>us_2016_21_estimate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gross_rent (boston.gross_rent)_584EDB483A9044AB9812875FBCEE9850]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_moe_plusminus</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_moe_plusminus]</local-name>
            <parent-name>[gross_rent]</parent-name>
            <remote-alias>us_2016_21_moe_plusminus</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gross_rent (boston.gross_rent)_584EDB483A9044AB9812875FBCEE9850]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_percent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_percent]</local-name>
            <parent-name>[gross_rent]</parent-name>
            <remote-alias>us_2016_21_percent</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gross_rent (boston.gross_rent)_584EDB483A9044AB9812875FBCEE9850]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:boston_2016_21_percent:qk]&quot;' value='Boston 2016-21 Percent' />
          <alias key='&quot;[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:us_2016_21_percent:qk]&quot;' value='US 2016-21 Percent' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='gross_rent' datatype='table' name='[__tableau_internal_object_id__].[gross_rent (boston.gross_rent)_584EDB483A9044AB9812875FBCEE9850]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Estimate' datatype='real' name='[boston_2016_21_estimate]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Moe Plusminus' datatype='real' name='[boston_2016_21_moe_plusminus]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Percent' datatype='real' name='[boston_2016_21_percent]' role='measure' type='quantitative' />
      <column caption='Label Grouping' datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
      <column caption='Us 2016 21 Estimate' datatype='real' name='[us_2016_21_estimate]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Moe Plusminus' datatype='real' name='[us_2016_21_moe_plusminus]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Percent' datatype='real' name='[us_2016_21_percent]' role='measure' type='quantitative' />
      <column-instance column='[boston_2016_21_estimate]' derivation='Sum' name='[sum:boston_2016_21_estimate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[boston_2016_21_percent]' derivation='Sum' name='[sum:boston_2016_21_percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[us_2016_21_estimate]' derivation='Sum' name='[sum:us_2016_21_estimate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[us_2016_21_percent]' derivation='Sum' name='[sum:us_2016_21_percent:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:us_2016_21_percent:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:boston_2016_21_estimate:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:boston_2016_21_percent:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:us_2016_21_estimate:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='gross_rent' id='gross_rent (boston.gross_rent)_584EDB483A9044AB9812875FBCEE9850'>
            <properties context=''>
              <relation connection='postgres.183bhlh00rk3xx13sx0i21ngulx6' name='gross_rent' table='[boston].[gross_rent]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='redfin_construction_medsale (boston.redfin_construction_medsale) (postgres)' inline='true' name='federated.0kzp9sz11ftqab13o6fs41hx3obo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0kltbfs0icplxh189okxa1n47thi'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0kltbfs0icplxh189okxa1n47thi' name='redfin_construction_medsale' table='[boston].[redfin_construction_medsale]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='timeframe' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0kltbfs0icplxh189okxa1n47thi' name='redfin_construction_medsale' table='[boston].[redfin_construction_medsale]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='timeframe' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indicator]</local-name>
            <parent-name>[redfin_construction_medsale]</parent-name>
            <remote-alias>indicator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_construction_medsale (boston.redfin_construction_medsale)_652FBF5CF05640208823738ED4926853]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeframe</remote-name>
            <remote-type>7</remote-type>
            <local-name>[timeframe]</local-name>
            <parent-name>[redfin_construction_medsale]</parent-name>
            <remote-alias>timeframe</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_construction_medsale (boston.redfin_construction_medsale)_652FBF5CF05640208823738ED4926853]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>existing</remote-name>
            <remote-type>129</remote-type>
            <local-name>[existing]</local-name>
            <parent-name>[redfin_construction_medsale]</parent-name>
            <remote-alias>existing</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_construction_medsale (boston.redfin_construction_medsale)_652FBF5CF05640208823738ED4926853]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_construction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_construction]</local-name>
            <parent-name>[redfin_construction_medsale]</parent-name>
            <remote-alias>new_construction</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_construction_medsale (boston.redfin_construction_medsale)_652FBF5CF05640208823738ED4926853]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='redfin_construction_medsale' datatype='table' name='[__tableau_internal_object_id__].[redfin_construction_medsale (boston.redfin_construction_medsale)_652FBF5CF05640208823738ED4926853]' role='measure' type='quantitative' />
      <column caption='Existing' datatype='real' datatype-customized='true' name='[existing]' role='dimension' type='ordinal' />
      <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
      <column caption='New Construction' datatype='real' datatype-customized='true' name='[new_construction]' role='dimension' type='ordinal' />
      <column caption='Timeframe' datatype='date' datatype-customized='true' name='[timeframe]' role='dimension' type='ordinal' />
      <column-instance column='[existing]' derivation='Sum' name='[sum:existing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_construction]' derivation='Sum' name='[sum:new_construction:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kzp9sz11ftqab13o6fs41hx3obo].[sum:existing:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.0kzp9sz11ftqab13o6fs41hx3obo].[sum:new_construction:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='redfin_construction_medsale' id='redfin_construction_medsale (boston.redfin_construction_medsale)_652FBF5CF05640208823738ED4926853'>
            <properties context=''>
              <relation connection='postgres.0kltbfs0icplxh189okxa1n47thi' name='redfin_construction_medsale' table='[boston].[redfin_construction_medsale]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='MMM-yy' name='timeframe' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' inline='true' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0ars7ug1wxw7v218npe1r1v3qsdl'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0ars7ug1wxw7v218npe1r1v3qsdl' name='city_housing_small' table='[boston].[city_housing_small]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_end' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_begin' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0ars7ug1wxw7v218npe1r1v3qsdl' name='city_housing_small' table='[boston].[city_housing_small]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_end' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_begin' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>period_begin</remote-name>
            <remote-type>7</remote-type>
            <local-name>[period_begin]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>period_begin</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_end</remote-name>
            <remote-type>7</remote-type>
            <local-name>[period_end]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>period_end</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>period_duration</remote-name>
            <remote-type>3</remote-type>
            <local-name>[period_duration]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>period_duration</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_type]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>region_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[region_type_id]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>region_type_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>table_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[table_id]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>table_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_seasonally_adjusted</remote-name>
            <remote-type>129</remote-type>
            <local-name>[is_seasonally_adjusted]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>is_seasonally_adjusted</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>state_</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_code]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>state_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_type]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>property_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[property_type_id]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>property_type_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price</remote-name>
            <remote-type>131</remote-type>
            <local-name>[median_sale_price]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_sale_price</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_sale_price_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_sale_price_mom</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_sale_price_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_sale_price_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_sale_price_yoy</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price</remote-name>
            <remote-type>131</remote-type>
            <local-name>[median_list_price]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_list_price</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_list_price_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_list_price_mom</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_price_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_list_price_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_list_price_yoy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf</remote-name>
            <remote-type>131</remote-type>
            <local-name>[median_ppsf]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_ppsf</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_ppsf_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_ppsf_mom</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_ppsf_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_ppsf_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_ppsf_yoy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf</remote-name>
            <remote-type>131</remote-type>
            <local-name>[median_list_ppsf]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_list_ppsf</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_list_ppsf_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_list_ppsf_mom</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_list_ppsf_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_list_ppsf_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_list_ppsf_yoy</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold</remote-name>
            <remote-type>131</remote-type>
            <local-name>[homes_sold]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>homes_sold</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[homes_sold_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>homes_sold_mom</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>homes_sold_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[homes_sold_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>homes_sold_yoy</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pending_sales]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>pending_sales</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pending_sales_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>pending_sales_mom</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending_sales_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pending_sales_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>pending_sales_yoy</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings</remote-name>
            <remote-type>131</remote-type>
            <local-name>[new_listings]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>new_listings</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_listings_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>new_listings_mom</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_listings_yoy</remote-name>
            <remote-type>131</remote-type>
            <local-name>[new_listings_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>new_listings_yoy</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory</remote-name>
            <remote-type>131</remote-type>
            <local-name>[inventory]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>inventory</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[inventory_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>inventory_mom</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[inventory_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>inventory_yoy</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply</remote-name>
            <remote-type>131</remote-type>
            <local-name>[months_of_supply]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>months_of_supply</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[months_of_supply_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>months_of_supply_mom</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months_of_supply_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[months_of_supply_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>months_of_supply_yoy</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom</remote-name>
            <remote-type>131</remote-type>
            <local-name>[median_dom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_dom</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_dom_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_dom_mom</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_dom_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[median_dom_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>median_dom_yoy</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list</remote-name>
            <remote-type>131</remote-type>
            <local-name>[avg_sale_to_list]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>avg_sale_to_list</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[avg_sale_to_list_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>avg_sale_to_list_mom</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_sale_to_list_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[avg_sale_to_list_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>avg_sale_to_list_yoy</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list</remote-name>
            <remote-type>131</remote-type>
            <local-name>[sold_above_list]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>sold_above_list</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sold_above_list_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>sold_above_list_mom</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sold_above_list_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sold_above_list_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>sold_above_list_yoy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops</remote-name>
            <remote-type>131</remote-type>
            <local-name>[price_drops]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>price_drops</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price_drops_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>price_drops_mom</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_drops_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[price_drops_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>price_drops_yoy</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks</remote-name>
            <remote-type>131</remote-type>
            <local-name>[off_market_in_two_weeks]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>off_market_in_two_weeks</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_mom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[off_market_in_two_weeks_mom]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>off_market_in_two_weeks_mom</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>off_market_in_two_weeks_yoy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[off_market_in_two_weeks_yoy]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>off_market_in_two_weeks_yoy</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parent_metro_region]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>parent_metro_region</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_metro_region_metro_code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[parent_metro_region_metro_code]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>parent_metro_region_metro_code</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_updated</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_updated]</local-name>
            <parent-name>[city_housing_small]</parent-name>
            <remote-alias>last_updated</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='city_housing_small' datatype='table' name='[__tableau_internal_object_id__].[city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2]' role='measure' type='quantitative' />
      <column caption='Avg Sale To List' datatype='real' name='[avg_sale_to_list]' role='dimension' type='ordinal' />
      <column caption='Avg Sale To List Mom' datatype='string' name='[avg_sale_to_list_mom]' role='dimension' type='nominal' />
      <column caption='Avg Sale To List Yoy' datatype='string' name='[avg_sale_to_list_yoy]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Homes Sold' datatype='real' name='[homes_sold]' role='dimension' type='ordinal' />
      <column caption='Homes Sold Mom' datatype='string' name='[homes_sold_mom]' role='dimension' type='nominal' />
      <column caption='Homes Sold Yoy' datatype='string' name='[homes_sold_yoy]' role='dimension' type='nominal' />
      <column caption='Inventory' datatype='real' name='[inventory]' role='dimension' type='ordinal' />
      <column caption='Inventory Mom' datatype='string' name='[inventory_mom]' role='dimension' type='nominal' />
      <column caption='Inventory Yoy' datatype='string' name='[inventory_yoy]' role='dimension' type='nominal' />
      <column caption='Is Seasonally Adjusted' datatype='string' name='[is_seasonally_adjusted]' role='dimension' type='nominal' />
      <column caption='Last Updated' datatype='string' name='[last_updated]' role='dimension' type='nominal' />
      <column caption='Median Dom' datatype='real' name='[median_dom]' role='dimension' type='ordinal' />
      <column caption='Median Dom Mom' datatype='string' name='[median_dom_mom]' role='dimension' type='nominal' />
      <column caption='Median Dom Yoy' datatype='string' name='[median_dom_yoy]' role='dimension' type='nominal' />
      <column caption='Median List Ppsf' datatype='real' name='[median_list_ppsf]' role='dimension' type='ordinal' />
      <column caption='Median List Ppsf Mom' datatype='string' name='[median_list_ppsf_mom]' role='dimension' type='nominal' />
      <column caption='Median List Ppsf Yoy' datatype='string' name='[median_list_ppsf_yoy]' role='dimension' type='nominal' />
      <column caption='Median List Price' datatype='real' name='[median_list_price]' role='dimension' type='ordinal' />
      <column caption='Median List Price Mom' datatype='string' name='[median_list_price_mom]' role='dimension' type='nominal' />
      <column caption='Median List Price Yoy' datatype='string' name='[median_list_price_yoy]' role='dimension' type='nominal' />
      <column caption='Median Ppsf' datatype='real' name='[median_ppsf]' role='dimension' type='ordinal' />
      <column caption='Median Ppsf Mom' datatype='string' name='[median_ppsf_mom]' role='dimension' type='nominal' />
      <column caption='Median Ppsf Yoy' datatype='string' name='[median_ppsf_yoy]' role='dimension' type='nominal' />
      <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='dimension' type='ordinal' />
      <column caption='Median Sale Price Mom' datatype='string' name='[median_sale_price_mom]' role='dimension' type='nominal' />
      <column caption='Median Sale Price Yoy' datatype='string' name='[median_sale_price_yoy]' role='dimension' type='nominal' />
      <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='dimension' type='ordinal' />
      <column caption='Months Of Supply Mom' datatype='string' name='[months_of_supply_mom]' role='dimension' type='nominal' />
      <column caption='Months Of Supply Yoy' datatype='string' name='[months_of_supply_yoy]' role='dimension' type='nominal' />
      <column caption='New Listings' datatype='real' name='[new_listings]' role='dimension' type='ordinal' />
      <column caption='New Listings Mom' datatype='string' name='[new_listings_mom]' role='dimension' type='nominal' />
      <column caption='New Listings Yoy' datatype='integer' datatype-customized='true' name='[new_listings_yoy]' role='dimension' type='ordinal' />
      <column caption='Off Market In Two Weeks' datatype='real' name='[off_market_in_two_weeks]' role='dimension' type='ordinal' />
      <column caption='Off Market In Two Weeks Mom' datatype='string' name='[off_market_in_two_weeks_mom]' role='dimension' type='nominal' />
      <column caption='Off Market In Two Weeks Yoy' datatype='string' name='[off_market_in_two_weeks_yoy]' role='dimension' type='nominal' />
      <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' type='nominal' />
      <column caption='Parent Metro Region Metro Code' datatype='integer' name='[parent_metro_region_metro_code]' role='dimension' type='ordinal' />
      <column caption='Pending Sales' datatype='real' name='[pending_sales]' role='dimension' type='ordinal' />
      <column caption='Pending Sales Mom' datatype='string' name='[pending_sales_mom]' role='dimension' type='nominal' />
      <column caption='Pending Sales Yoy' datatype='string' name='[pending_sales_yoy]' role='dimension' type='nominal' />
      <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
      <column caption='Period Duration' datatype='integer' datatype-customized='true' name='[period_duration]' role='dimension' type='ordinal' />
      <column aggregation='Count' caption='Period End' datatype='date' datatype-customized='true' name='[period_end]' role='dimension' type='ordinal' />
      <column caption='Price Drops' datatype='real' name='[price_drops]' role='dimension' type='ordinal' />
      <column caption='Price Drops Mom' datatype='string' name='[price_drops_mom]' role='dimension' type='nominal' />
      <column caption='Price Drops Yoy' datatype='string' name='[price_drops_yoy]' role='dimension' type='nominal' />
      <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      <column caption='Property Type Id' datatype='integer' name='[property_type_id]' role='dimension' type='ordinal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Region Type' datatype='string' name='[region_type]' role='dimension' type='nominal' />
      <column caption='Region Type Id' datatype='integer' datatype-customized='true' name='[region_type_id]' role='dimension' type='ordinal' />
      <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='dimension' type='ordinal' />
      <column caption='Sold Above List Mom' datatype='string' name='[sold_above_list_mom]' role='dimension' type='nominal' />
      <column caption='Sold Above List Yoy' datatype='string' name='[sold_above_list_yoy]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state_]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Code' datatype='string' name='[state_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Table Id' datatype='integer' datatype-customized='true' name='[table_id]' role='dimension' type='ordinal' />
      <column-instance column='[median_sale_price]' derivation='Avg' name='[avg:median_sale_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sold_above_list]' derivation='Avg' name='[avg:sold_above_list:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <column-instance column='[period_begin]' derivation='Quarter' name='[qr:period_begin:ok]' pivot='key' type='ordinal' />
      <group caption='High Population Set - Boston Special' name='[High Population Set (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:region:nk]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Boston, MA&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Hartford, CT&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Jacksonville, FL&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Miami, FL&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Orlando, FL&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Portland, ME&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Tampa, FL&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='High Population Set' name='[High Population Set - Cities]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:region:nk]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Cape Coral, FL&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Hartford, CT&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Jacksonville, FL&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Miami, FL&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Orlando, FL&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Portland, ME&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Tampa, FL&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Region Set' name='[Region Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:region:nk]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Boston, MA&quot;' />
            <groupfilter function='member' level='[none:region:nk]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[qr:period_begin:ok]' type='palette'>
            <map to='#ae123a'>
              <bucket>2</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>1</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:High Population Set (copy):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>1</bucket>
            </map>
            <map to='#43719f'>
              <bucket>7</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>4</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>6</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>5</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>9</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>2</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>3</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>8</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>5</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>11</bucket>
            </map>
            <map to='#376491'>
              <bucket>10</bucket>
            </map>
            <map to='#42709e'>
              <bucket>9</bucket>
            </map>
            <map to='#43719f'>
              <bucket>7</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>8</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>2</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>1</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>6</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>3</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:region:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Washington, DC&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Tampa, FL&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Seattle, WA&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;San Jose, CA&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;San Francisco, CA&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;San Diego, CA&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;San Antonio, TX&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Portland, ME&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Phoenix, AZ&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Philadelphia, PA&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orlando, FL&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Oklahoma City, OK&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;New York, NY&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Nashville, TN&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Miami, FL&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Las Vegas, NV&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Jacksonville, FL&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Indianapolis, IN&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Houston, TX&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Hartford, CT&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Fort Worth, TX&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;El Paso, TX&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Denver, CO&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Dallas, TX&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Columbus, OH&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Chicago, IL&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Charlotte, NC&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Cape Coral, FL&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Boston, MA&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Austin, TX&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{36a31d85-085d-4d97-97fb-2cfcfa7c886b}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>7</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{8c078291-e75d-405b-9a68-e18159002c81}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>7</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='city_housing_small' id='city_housing_small (boston.city_housing_small)_B46066A16013405999CB914F80A1B3C2'>
            <properties context=''>
              <relation connection='postgres.0ars7ug1wxw7v218npe1r1v3qsdl' name='city_housing_small' table='[boston].[city_housing_small]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_end' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='period_begin' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='income_restricted_18 (boston.income_restricted_18) (postgres)' inline='true' name='federated.0wwugh11qqo7ko19b8gr9021ddg8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1yn6icw0glccpl14a1kfh07se8yh'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1yn6icw0glccpl14a1kfh07se8yh' name='income_restricted_18' table='[boston].[income_restricted_18]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1yn6icw0glccpl14a1kfh07se8yh' name='income_restricted_18' table='[boston].[income_restricted_18]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>project_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[project_name]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>project_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_project_units</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_project_units]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>total_project_units</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rent_units</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rent_units]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>rent_units</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>own_units</remote-name>
            <remote-type>3</remote-type>
            <local-name>[own_units]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>own_units</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_market</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_market]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>total_market</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_rent</remote-name>
            <remote-type>3</remote-type>
            <local-name>[market_rent]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>market_rent</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_own</remote-name>
            <remote-type>3</remote-type>
            <local-name>[market_own]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>market_own</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_income_restricted</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_income_restricted]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>total_income_restricted</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income_restricted_rental</remote-name>
            <remote-type>3</remote-type>
            <local-name>[income_restricted_rental]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>income_restricted_rental</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income_restricted_ownership</remote-name>
            <remote-type>3</remote-type>
            <local-name>[income_restricted_ownership]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>income_restricted_ownership</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tenure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tenure]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>tenure</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>public_private</remote-name>
            <remote-type>129</remote-type>
            <local-name>[public_private]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>public_private</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elderly_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[elderly_units]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>elderly_units</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>section_8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[section_8]</local-name>
            <parent-name>[income_restricted_18]</parent-name>
            <remote-alias>section_8</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='income_restricted_18' datatype='table' name='[__tableau_internal_object_id__].[income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C]' role='measure' type='quantitative' />
      <column caption='Elderly Units' datatype='string' name='[elderly_units]' role='dimension' type='nominal' />
      <column caption='Income Restricted Ownership' datatype='integer' name='[income_restricted_ownership]' role='measure' type='quantitative' />
      <column caption='Income Restricted Rental' datatype='integer' name='[income_restricted_rental]' role='measure' type='quantitative' />
      <column caption='Market Own' datatype='integer' name='[market_own]' role='measure' type='quantitative' />
      <column caption='Market Rent' datatype='integer' name='[market_rent]' role='measure' type='quantitative' />
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
      <column caption='Own Units' datatype='integer' name='[own_units]' role='measure' type='quantitative' />
      <column caption='Project Name' datatype='string' name='[project_name]' role='dimension' type='nominal' />
      <column caption='Public Private' datatype='string' name='[public_private]' role='dimension' type='nominal' />
      <column caption='Rent Units' datatype='integer' name='[rent_units]' role='measure' type='quantitative' />
      <column caption='Section 8' datatype='string' name='[section_8]' role='dimension' type='nominal' />
      <column caption='Tenure' datatype='string' name='[tenure]' role='dimension' type='nominal' />
      <column caption='Total Income Restricted' datatype='integer' name='[total_income_restricted]' role='measure' type='quantitative' />
      <column caption='Total Market' datatype='integer' name='[total_market]' role='measure' type='quantitative' />
      <column caption='Total Project Units' datatype='integer' name='[total_project_units]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[total_income_restricted]' derivation='Sum' name='[cum:sum:total_income_restricted:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
      </column-instance>
      <column-instance column='[income_restricted_ownership]' derivation='Sum' name='[sum:income_restricted_ownership:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income_restricted_rental]' derivation='Sum' name='[sum:income_restricted_rental:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_income_restricted]' derivation='Sum' name='[sum:total_income_restricted:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_ownership:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_rental:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[cum:sum:total_income_restricted:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:total_income_restricted:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='income_restricted_18' id='income_restricted_18 (boston.income_restricted_18)_902027A3CF3B4714AF8DA6C32F212B9C'>
            <properties context=''>
              <relation connection='postgres.1yn6icw0glccpl14a1kfh07se8yh' name='income_restricted_18' table='[boston].[income_restricted_18]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='bos_commuting (boston.bos_commuting) (postgres)' inline='true' name='federated.1wefjtl1vj660u11kn0u20817tl8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1isd5e708lxm5c190sutd0dzop0y'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1isd5e708lxm5c190sutd0dzop0y' name='bos_commuting' table='[boston].[bos_commuting]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1isd5e708lxm5c190sutd0dzop0y' name='bos_commuting' table='[boston].[bos_commuting]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>label_grouping</remote-name>
            <remote-type>129</remote-type>
            <local-name>[label_grouping]</local-name>
            <parent-name>[bos_commuting]</parent-name>
            <remote-alias>label_grouping</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting (boston.bos_commuting)_D3CC5EAAC60640A285913EEA5884612B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_est</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_est]</local-name>
            <parent-name>[bos_commuting]</parent-name>
            <remote-alias>total_est</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting (boston.bos_commuting)_D3CC5EAAC60640A285913EEA5884612B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_moe</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_moe]</local-name>
            <parent-name>[bos_commuting]</parent-name>
            <remote-alias>total_moe</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting (boston.bos_commuting)_D3CC5EAAC60640A285913EEA5884612B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_est</remote-name>
            <remote-type>131</remote-type>
            <local-name>[male_est]</local-name>
            <parent-name>[bos_commuting]</parent-name>
            <remote-alias>male_est</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting (boston.bos_commuting)_D3CC5EAAC60640A285913EEA5884612B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_moe</remote-name>
            <remote-type>131</remote-type>
            <local-name>[male_moe]</local-name>
            <parent-name>[bos_commuting]</parent-name>
            <remote-alias>male_moe</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting (boston.bos_commuting)_D3CC5EAAC60640A285913EEA5884612B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_est</remote-name>
            <remote-type>131</remote-type>
            <local-name>[female_est]</local-name>
            <parent-name>[bos_commuting]</parent-name>
            <remote-alias>female_est</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting (boston.bos_commuting)_D3CC5EAAC60640A285913EEA5884612B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_moe</remote-name>
            <remote-type>131</remote-type>
            <local-name>[female_moe]</local-name>
            <parent-name>[bos_commuting]</parent-name>
            <remote-alias>female_moe</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bos_commuting (boston.bos_commuting)_D3CC5EAAC60640A285913EEA5884612B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='bos_commuting' datatype='table' name='[__tableau_internal_object_id__].[bos_commuting (boston.bos_commuting)_D3CC5EAAC60640A285913EEA5884612B]' role='measure' type='quantitative' />
      <column caption='Female Est' datatype='real' name='[female_est]' role='measure' type='quantitative' />
      <column caption='Female Moe' datatype='real' name='[female_moe]' role='measure' type='quantitative' />
      <column caption='Label Grouping' datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
      <column caption='Male Est' datatype='real' name='[male_est]' role='measure' type='quantitative' />
      <column caption='Male Moe' datatype='real' name='[male_moe]' role='measure' type='quantitative' />
      <column caption='Total Est' datatype='real' name='[total_est]' role='measure' type='quantitative' />
      <column caption='Total Moe' datatype='real' name='[total_moe]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='bos_commuting' id='bos_commuting (boston.bos_commuting)_D3CC5EAAC60640A285913EEA5884612B'>
            <properties context=''>
              <relation connection='postgres.1isd5e708lxm5c190sutd0dzop0y' name='bos_commuting' table='[boston].[bos_commuting]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='redfin_permits (boston.redfin_permits) (postgres)' inline='true' name='federated.0gpq7nu00xltvb1dmmz7j0fw3gdu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0uutvz60rtf3ud0zo91kg1gdcsn6'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0uutvz60rtf3ud0zo91kg1gdcsn6' name='redfin_permits' table='[boston].[redfin_permits]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='month_of_period_end' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0uutvz60rtf3ud0zo91kg1gdcsn6' name='redfin_permits' table='[boston].[redfin_permits]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='month_of_period_end' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>month_of_period_end</remote-name>
            <remote-type>7</remote-type>
            <local-name>[month_of_period_end]</local-name>
            <parent-name>[redfin_permits]</parent-name>
            <remote-alias>month_of_period_end</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_permits (boston.redfin_permits)_C7DA9213A78D49C99F30D81A32788868]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>permits_per_10000_ppl</remote-name>
            <remote-type>129</remote-type>
            <local-name>[permits_per_10000_ppl]</local-name>
            <parent-name>[redfin_permits]</parent-name>
            <remote-alias>permits_per_10000_ppl</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_permits (boston.redfin_permits)_C7DA9213A78D49C99F30D81A32788868]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='redfin_permits' datatype='table' name='[__tableau_internal_object_id__].[redfin_permits (boston.redfin_permits)_C7DA9213A78D49C99F30D81A32788868]' role='measure' type='quantitative' />
      <column caption='Month Of Period End' datatype='date' datatype-customized='true' name='[month_of_period_end]' role='dimension' type='ordinal' />
      <column caption='Permits Per 10000 Ppl' datatype='real' datatype-customized='true' name='[permits_per_10000_ppl]' role='dimension' type='ordinal' />
      <column-instance column='[permits_per_10000_ppl]' derivation='Sum' name='[sum:permits_per_10000_ppl:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#3d6a98'>
              <bucket>5</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>1</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>6</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#c46487'>
              <bucket>4</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>0</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{8b22ff94-b6d1-4670-a692-5ac46d0171cd}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='redfin_permits' id='redfin_permits (boston.redfin_permits)_C7DA9213A78D49C99F30D81A32788868'>
            <properties context=''>
              <relation connection='postgres.0uutvz60rtf3ud0zo91kg1gdcsn6' name='redfin_permits' table='[boston].[redfin_permits]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='MMM-yy' name='month_of_period_end' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='redfin_permits_yoy (boston.redfin_permits_yoy) (postgres)' inline='true' name='federated.152wax70nwka6c1368l9h1wutbu1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.15f91fw08h21w912b5iof1jo9uw6'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.15f91fw08h21w912b5iof1jo9uw6' name='redfin_permits_yoy' table='[boston].[redfin_permits_yoy]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='timeframe' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.15f91fw08h21w912b5iof1jo9uw6' name='redfin_permits_yoy' table='[boston].[redfin_permits_yoy]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='MMM-yy' name='timeframe' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indicator]</local-name>
            <parent-name>[redfin_permits_yoy]</parent-name>
            <remote-alias>indicator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_permits_yoy (boston.redfin_permits_yoy)_FAD7B6D37AD3450D846623E1735DDD49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timeframe</remote-name>
            <remote-type>7</remote-type>
            <local-name>[timeframe]</local-name>
            <parent-name>[redfin_permits_yoy]</parent-name>
            <remote-alias>timeframe</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_permits_yoy (boston.redfin_permits_yoy)_FAD7B6D37AD3450D846623E1735DDD49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>existing</remote-name>
            <remote-type>129</remote-type>
            <local-name>[existing]</local-name>
            <parent-name>[redfin_permits_yoy]</parent-name>
            <remote-alias>existing</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_permits_yoy (boston.redfin_permits_yoy)_FAD7B6D37AD3450D846623E1735DDD49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_construction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_construction]</local-name>
            <parent-name>[redfin_permits_yoy]</parent-name>
            <remote-alias>new_construction</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[redfin_permits_yoy (boston.redfin_permits_yoy)_FAD7B6D37AD3450D846623E1735DDD49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='redfin_permits_yoy' datatype='table' name='[__tableau_internal_object_id__].[redfin_permits_yoy (boston.redfin_permits_yoy)_FAD7B6D37AD3450D846623E1735DDD49]' role='measure' type='quantitative' />
      <column caption='Existing' datatype='string' name='[existing]' role='dimension' type='nominal' />
      <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
      <column caption='New Construction' datatype='real' datatype-customized='true' name='[new_construction]' role='dimension' type='ordinal' />
      <column caption='Timeframe' datatype='date' datatype-customized='true' name='[timeframe]' role='dimension' type='ordinal' />
      <column-instance column='[new_construction]' derivation='Sum' name='[sum:new_construction:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' palette='red_10_0' type='palette'>
            <map to='#6394be'>
              <bucket>5</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>2</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>3</bucket>
            </map>
            <map to='#b882a6'>
              <bucket>4</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{cc0aa320-a094-4549-a386-8055dfd1cd37}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='redfin_permits_yoy' id='redfin_permits_yoy (boston.redfin_permits_yoy)_FAD7B6D37AD3450D846623E1735DDD49'>
            <properties context=''>
              <relation connection='postgres.15f91fw08h21w912b5iof1jo9uw6' name='redfin_permits_yoy' table='[boston].[redfin_permits_yoy]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='MMM-yy' name='timeframe' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='sale_cpi_join (boston.sale_cpi_join) (postgres)' inline='true' name='federated.1tz0z5k0yisc5w15tms1a14xjwo1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.11m12d71cx2grs13nzygr0zz1jer'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.11m12d71cx2grs13nzygr0zz1jer' name='sale_cpi_join' table='[boston].[sale_cpi_join]' type='table'>
          <columns>
            <column datatype='integer' date-parse-format='yyyy' name='year_' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.11m12d71cx2grs13nzygr0zz1jer' name='sale_cpi_join' table='[boston].[sale_cpi_join]' type='table'>
          <columns>
            <column datatype='integer' date-parse-format='yyyy' name='year_' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>avg_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_price]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>avg_price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jan</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jan]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>jan</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feb]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>feb</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mar]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>mar</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>apr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[apr]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>apr</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>may</remote-name>
            <remote-type>5</remote-type>
            <local-name>[may]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>may</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jun</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jun]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>jun</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jul</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jul]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>jul</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aug</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aug]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>aug</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sep]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>sep</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oct]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>oct</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nov</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nov]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>nov</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dec_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dec_]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>dec_</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[annual]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>annual</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>half1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[half1]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>half1</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>half2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[half2]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>half2</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>housing_annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[housing_annual]</local-name>
            <parent-name>[sale_cpi_join]</parent-name>
            <remote-alias>housing_annual</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='cpi_growth' datatype='real' name='[Calculation1 (copy)_1326873080117075970]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([annual]) - LOOKUP(SUM([annual]), -1)) / LOOKUP(SUM([annual]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Median_sale_price growth' datatype='real' name='[Calculation_1326873080115212289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([avg_price]) - LOOKUP(SUM([avg_price]), -1)) / LOOKUP(SUM([avg_price]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='sale_cpi_join' datatype='table' name='[__tableau_internal_object_id__].[sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3]' role='measure' type='quantitative' />
      <column caption='Annual CPI Avg - Boston' datatype='real' name='[annual]' role='measure' type='quantitative' />
      <column caption='Apr' datatype='real' name='[apr]' role='measure' type='quantitative' />
      <column caption='Aug' datatype='real' name='[aug]' role='measure' type='quantitative' />
      <column caption='Median Sale Price, Avg by Year - All Residential, Boston' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
      <column caption='cpi_growth_housing' datatype='real' name='[cpi_growth (copy)_1326873080153210883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([housing_annual]) - LOOKUP(SUM([housing_annual]), -1)) / LOOKUP(SUM([housing_annual]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Dec' datatype='real' name='[dec_]' role='measure' type='quantitative' />
      <column caption='Feb' datatype='real' name='[feb]' role='measure' type='quantitative' />
      <column caption='Half1' datatype='real' name='[half1]' role='measure' type='quantitative' />
      <column caption='Half2' datatype='real' name='[half2]' role='measure' type='quantitative' />
      <column datatype='real' name='[housing_annual]' role='measure' type='quantitative' />
      <column caption='Jan' datatype='real' name='[jan]' role='measure' type='quantitative' />
      <column caption='Jul' datatype='real' name='[jul]' role='measure' type='quantitative' />
      <column caption='Jun' datatype='real' name='[jun]' role='measure' type='quantitative' />
      <column caption='Mar' datatype='real' name='[mar]' role='measure' type='quantitative' />
      <column caption='May' datatype='real' name='[may]' role='measure' type='quantitative' />
      <column caption='Nov' datatype='real' name='[nov]' role='measure' type='quantitative' />
      <column caption='Oct' datatype='real' name='[oct]' role='measure' type='quantitative' />
      <column caption='Sep' datatype='real' name='[sep]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='ordinal' />
      <column-instance column='[annual]' derivation='Avg' name='[avg:annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_price]' derivation='Avg' name='[avg:avg_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[annual]' derivation='Sum' forecast-column-base='[sum:annual:qk]' forecast-column-type='forecast-fit-trend' name='[fTre:sum:annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[annual]' derivation='Sum' forecast-column-base='[sum:annual:qk]' forecast-column-type='forecast-value' name='[fVal:sum:annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_price]' derivation='Sum' forecast-column-base='[sum:avg_price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:avg_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[housing_annual]' derivation='Sum' forecast-column-base='[sum:housing_annual:qk]' forecast-column-type='forecast-value' name='[fVal:sum:housing_annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[year_]' derivation='None' name='[none:year_:ok]' pivot='key' type='ordinal' />
      <column-instance column='[annual]' derivation='Sum' name='[sum:annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_price]' derivation='Sum' name='[sum:avg_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[housing_annual]' derivation='Sum' name='[sum:housing_annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1 (copy)_1326873080117075970]' derivation='User' name='[usr:Calculation1 (copy)_1326873080117075970:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation1 (copy)_1326873080117075970]' derivation='User' name='[usr:Calculation1 (copy)_1326873080117075970:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1326873080115212289]' derivation='User' name='[usr:Calculation_1326873080115212289:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1326873080115212289]' derivation='User' name='[usr:Calculation_1326873080115212289:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[year_]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1326873080115212289]' derivation='User' name='[usr:Calculation_1326873080115212289:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_1326873080115212289]' derivation='User' name='[usr:Calculation_1326873080115212289:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[cpi_growth (copy)_1326873080153210883]' derivation='User' name='[usr:cpi_growth (copy)_1326873080153210883:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk]&quot;</bucket>
            </map>
            <map to='#49525e'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:cpi_growth (copy)_1326873080153210883:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[avg:annual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:annual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[sum:annual:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:housing_annual:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk:1]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[avg:avg_price:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[sum:avg_price:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[sum:housing_annual:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map to='#49525e'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:annual:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#49525e'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:housing_annual:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[sum:annual:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fTre:sum:annual:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[sum:avg_price:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ae123a'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4b7b7'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:annual:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b4b7b7'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:housing_annual:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fTre:sum:annual:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[sum:avg_price:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[sum:annual:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#feb4a6'>
              <multibucket>
                <bucket>&quot;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sale_cpi_join' id='sale_cpi_join (boston.sale_cpi_join)_AE65D552A5DD469AAD83385EB110F5F3'>
            <properties context=''>
              <relation connection='postgres.11m12d71cx2grs13nzygr0zz1jer' name='sale_cpi_join' table='[boston].[sale_cpi_join]' type='table'>
                <columns>
                  <column datatype='integer' date-parse-format='yyyy' name='year_' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='earnings_sale_join (boston.earnings_sale_join) (postgres)' inline='true' name='federated.1ro1uyf1vcnn9o1fy3o900aal5hw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0f25b5x1ozkt1l1drehnb0zbzart'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0f25b5x1ozkt1l1drehnb0zbzart' name='earnings_sale_join' table='[boston].[earnings_sale_join]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0f25b5x1ozkt1l1drehnb0zbzart' name='earnings_sale_join' table='[boston].[earnings_sale_join]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>avg_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_price]</local-name>
            <parent-name>[earnings_sale_join]</parent-name>
            <remote-alias>avg_price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[earnings_sale_join (boston.earnings_sale_join)_D63845C9DFFD45ED85625B1DA770F82B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year_]</local-name>
            <parent-name>[earnings_sale_join]</parent-name>
            <remote-alias>year_</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[earnings_sale_join (boston.earnings_sale_join)_D63845C9DFFD45ED85625B1DA770F82B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>annual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[annual]</local-name>
            <parent-name>[earnings_sale_join]</parent-name>
            <remote-alias>annual</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[earnings_sale_join (boston.earnings_sale_join)_D63845C9DFFD45ED85625B1DA770F82B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:avg_price:qk]&quot;' value='Median Sale Price - metro Boston, Averaged by Year' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='earnings_sale_join' datatype='table' name='[__tableau_internal_object_id__].[earnings_sale_join (boston.earnings_sale_join)_D63845C9DFFD45ED85625B1DA770F82B]' role='measure' type='quantitative' />
      <column caption='Average Annual Income' datatype='real' name='[annual]' role='measure' type='quantitative' />
      <column caption='Median Sale Price - Boston, Averaged by Year' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
      <column-instance column='[annual]' derivation='Sum' name='[pcdf:sum:annual:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[avg_price]' derivation='Sum' name='[pcdf:sum:avg_price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[annual]' derivation='Sum' name='[pcto:sum:annual:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[annual]' derivation='Sum' name='[sum:annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_price]' derivation='Sum' name='[sum:avg_price:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='red_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:avg_:qk]&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[pcdf:sum:annual:qk]&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[pcto:sum:annual:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[pcdf:sum:avg_price:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:annual:qk]&quot;</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>&quot;[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:avg_price:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='earnings_sale_join' id='earnings_sale_join (boston.earnings_sale_join)_D63845C9DFFD45ED85625B1DA770F82B'>
            <properties context=''>
              <relation connection='postgres.0f25b5x1ozkt1l1drehnb0zbzart' name='earnings_sale_join' table='[boston].[earnings_sale_join]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='grapi (boston.grapi) (postgres)' inline='true' name='federated.0k4ktit04nh92813cecnd0tsn37o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1b8mdks0903jz31es8tyr1iihihx'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1b8mdks0903jz31es8tyr1iihihx' name='grapi' table='[boston].[grapi]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1b8mdks0903jz31es8tyr1iihihx' name='grapi' table='[boston].[grapi]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>label_grouping</remote-name>
            <remote-type>129</remote-type>
            <local-name>[label_grouping]</local-name>
            <parent-name>[grapi]</parent-name>
            <remote-alias>label_grouping</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grapi (boston.grapi)_AEBBDCAD799C48019D3C245E79AABB1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_estimate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_estimate]</local-name>
            <parent-name>[grapi]</parent-name>
            <remote-alias>boston_2016_21_estimate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grapi (boston.grapi)_AEBBDCAD799C48019D3C245E79AABB1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_moe_plusminus</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_moe_plusminus]</local-name>
            <parent-name>[grapi]</parent-name>
            <remote-alias>boston_2016_21_moe_plusminus</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grapi (boston.grapi)_AEBBDCAD799C48019D3C245E79AABB1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_percent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_percent]</local-name>
            <parent-name>[grapi]</parent-name>
            <remote-alias>boston_2016_21_percent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grapi (boston.grapi)_AEBBDCAD799C48019D3C245E79AABB1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_estimate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_estimate]</local-name>
            <parent-name>[grapi]</parent-name>
            <remote-alias>us_2016_21_estimate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grapi (boston.grapi)_AEBBDCAD799C48019D3C245E79AABB1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_moe_plusminus</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_moe_plusminus]</local-name>
            <parent-name>[grapi]</parent-name>
            <remote-alias>us_2016_21_moe_plusminus</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grapi (boston.grapi)_AEBBDCAD799C48019D3C245E79AABB1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_percent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_percent]</local-name>
            <parent-name>[grapi]</parent-name>
            <remote-alias>us_2016_21_percent</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[grapi (boston.grapi)_AEBBDCAD799C48019D3C245E79AABB1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='grapi' datatype='table' name='[__tableau_internal_object_id__].[grapi (boston.grapi)_AEBBDCAD799C48019D3C245E79AABB1E]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Estimate' datatype='real' name='[boston_2016_21_estimate]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Moe Plusminus' datatype='real' name='[boston_2016_21_moe_plusminus]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Percent' datatype='real' name='[boston_2016_21_percent]' role='measure' type='quantitative' />
      <column caption='Label Grouping' datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
      <column caption='Us 2016 21 Estimate' datatype='real' name='[us_2016_21_estimate]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Moe Plusminus' datatype='real' name='[us_2016_21_moe_plusminus]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Percent' datatype='real' name='[us_2016_21_percent]' role='measure' type='quantitative' />
      <column-instance column='[label_grouping]' derivation='None' name='[none:label_grouping:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:label_grouping:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;        GRAPI - Not computed&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;        GRAPI - 35.0 percent or more&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;        GRAPI - 15.0 to 19.9 percent&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;        GRAPI - 20.0 to 24.9 percent&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;        GRAPI - 25.0 to 29.9 percent&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;        GRAPI - 30.0 to 34.9 percent&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;        GRAPI - Less than 15.0 percent&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='grapi' id='grapi (boston.grapi)_AEBBDCAD799C48019D3C245E79AABB1E'>
            <properties context=''>
              <relation connection='postgres.1b8mdks0903jz31es8tyr1iihihx' name='grapi' table='[boston].[grapi]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='no_each (boston.no_each) (postgres)' inline='true' name='federated.0b2seqf0y9yx4516oxqpk1bt9n6s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0xeloqo05lcflq1ayfj9o17a8ssw'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.0xeloqo05lcflq1ayfj9o17a8ssw' name='no_each' table='[boston].[no_each]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.0xeloqo05lcflq1ayfj9o17a8ssw' name='no_each' table='[boston].[no_each]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>label_grouping</remote-name>
            <remote-type>129</remote-type>
            <local-name>[label_grouping]</local-name>
            <parent-name>[no_each]</parent-name>
            <remote-alias>label_grouping</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[no_each (boston.no_each)_60AFA9289C7E43C09924E0F996620999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_estimate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_estimate]</local-name>
            <parent-name>[no_each]</parent-name>
            <remote-alias>boston_2016_21_estimate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[no_each (boston.no_each)_60AFA9289C7E43C09924E0F996620999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_moe_plusminus</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_moe_plusminus]</local-name>
            <parent-name>[no_each]</parent-name>
            <remote-alias>boston_2016_21_moe_plusminus</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[no_each (boston.no_each)_60AFA9289C7E43C09924E0F996620999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_percent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_percent]</local-name>
            <parent-name>[no_each]</parent-name>
            <remote-alias>boston_2016_21_percent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[no_each (boston.no_each)_60AFA9289C7E43C09924E0F996620999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_estimate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_estimate]</local-name>
            <parent-name>[no_each]</parent-name>
            <remote-alias>us_2016_21_estimate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[no_each (boston.no_each)_60AFA9289C7E43C09924E0F996620999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_moe_plusminus</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_moe_plusminus]</local-name>
            <parent-name>[no_each]</parent-name>
            <remote-alias>us_2016_21_moe_plusminus</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[no_each (boston.no_each)_60AFA9289C7E43C09924E0F996620999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_percent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_percent]</local-name>
            <parent-name>[no_each]</parent-name>
            <remote-alias>us_2016_21_percent</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[no_each (boston.no_each)_60AFA9289C7E43C09924E0F996620999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='no_each' datatype='table' name='[__tableau_internal_object_id__].[no_each (boston.no_each)_60AFA9289C7E43C09924E0F996620999]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Estimate' datatype='real' name='[boston_2016_21_estimate]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Moe Plusminus' datatype='real' name='[boston_2016_21_moe_plusminus]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Percent' datatype='real' name='[boston_2016_21_percent]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Estimate' datatype='real' name='[us_2016_21_estimate]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Moe Plusminus' datatype='real' name='[us_2016_21_moe_plusminus]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Percent' datatype='real' name='[us_2016_21_percent]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='no_each' id='no_each (boston.no_each)_60AFA9289C7E43C09924E0F996620999'>
            <properties context=''>
              <relation connection='postgres.0xeloqo05lcflq1ayfj9o17a8ssw' name='no_each' table='[boston].[no_each]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='vacancy (boston.vacancy) (postgres)' inline='true' name='federated.02ccs1q01w6aw018luhv60oik3bq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1ete6bp0vowquz1449v0i0fd46b0'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1ete6bp0vowquz1449v0i0fd46b0' name='vacancy' table='[boston].[vacancy]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1ete6bp0vowquz1449v0i0fd46b0' name='vacancy' table='[boston].[vacancy]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>label_grouping</remote-name>
            <remote-type>129</remote-type>
            <local-name>[label_grouping]</local-name>
            <parent-name>[vacancy]</parent-name>
            <remote-alias>label_grouping</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy (boston.vacancy)_9E2F021072AC4D7FA012548DA4DFAEC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_estimate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_estimate]</local-name>
            <parent-name>[vacancy]</parent-name>
            <remote-alias>boston_2016_21_estimate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy (boston.vacancy)_9E2F021072AC4D7FA012548DA4DFAEC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_moe_plusminus</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_moe_plusminus]</local-name>
            <parent-name>[vacancy]</parent-name>
            <remote-alias>boston_2016_21_moe_plusminus</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy (boston.vacancy)_9E2F021072AC4D7FA012548DA4DFAEC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boston_2016_21_percent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[boston_2016_21_percent]</local-name>
            <parent-name>[vacancy]</parent-name>
            <remote-alias>boston_2016_21_percent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy (boston.vacancy)_9E2F021072AC4D7FA012548DA4DFAEC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_estimate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_estimate]</local-name>
            <parent-name>[vacancy]</parent-name>
            <remote-alias>us_2016_21_estimate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy (boston.vacancy)_9E2F021072AC4D7FA012548DA4DFAEC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_moe_plusminus</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_moe_plusminus]</local-name>
            <parent-name>[vacancy]</parent-name>
            <remote-alias>us_2016_21_moe_plusminus</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy (boston.vacancy)_9E2F021072AC4D7FA012548DA4DFAEC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>us_2016_21_percent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[us_2016_21_percent]</local-name>
            <parent-name>[vacancy]</parent-name>
            <remote-alias>us_2016_21_percent</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy (boston.vacancy)_9E2F021072AC4D7FA012548DA4DFAEC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='vacancy' datatype='table' name='[__tableau_internal_object_id__].[vacancy (boston.vacancy)_9E2F021072AC4D7FA012548DA4DFAEC5]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Estimate' datatype='real' name='[boston_2016_21_estimate]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Moe Plusminus' datatype='real' name='[boston_2016_21_moe_plusminus]' role='measure' type='quantitative' />
      <column caption='Boston 2016 21 Percent' datatype='real' name='[boston_2016_21_percent]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Estimate' datatype='real' name='[us_2016_21_estimate]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Moe Plusminus' datatype='real' name='[us_2016_21_moe_plusminus]' role='measure' type='quantitative' />
      <column caption='Us 2016 21 Percent' datatype='real' name='[us_2016_21_percent]' role='measure' type='quantitative' />
      <column-instance column='[boston_2016_21_estimate]' derivation='Sum' name='[sum:boston_2016_21_estimate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[us_2016_21_estimate]' derivation='Sum' name='[sum:us_2016_21_estimate:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:us_2016_21_estimate:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:boston_2016_21_estimate:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='vacancy' id='vacancy (boston.vacancy)_9E2F021072AC4D7FA012548DA4DFAEC5'>
            <properties context=''>
              <relation connection='postgres.1ete6bp0vowquz1449v0i0fd46b0' name='vacancy' table='[boston].[vacancy]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='migration_boston (boston.migration_boston) (postgres)' inline='true' name='federated.1wuxdmv1eajlf01ey74fs00bzs9g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.01b533g10k52vy1frr3df14yrods'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.01b533g10k52vy1frr3df14yrods' name='migration_boston' table='[boston].[migration_boston]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.01b533g10k52vy1frr3df14yrods' name='migration_boston' table='[boston].[migration_boston]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>date_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>origin</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_display</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin_display]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>origin_display</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin_state]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>origin_state</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination_city]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>destination_city</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_display</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination_display]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>destination_display</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination_state]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>destination_state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_of_origin_to_dest</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pct_of_origin_to_dest]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>pct_of_origin_to_dest</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_of_dest_from_origin</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pct_of_dest_from_origin]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>pct_of_dest_from_origin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_percent_leavers</remote-name>
            <remote-type>131</remote-type>
            <local-name>[dest_percent_leavers]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>dest_percent_leavers</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_percent_dest_incomers</remote-name>
            <remote-type>131</remote-type>
            <local-name>[origin_percent_dest_incomers]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>origin_percent_dest_incomers</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[migration_boston]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='boolean' name='[Calculation_1328280451439955968]' role='measure' type='nominal'>
        <calculation class='tableau' formula='index()&lt;=10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='migration_boston' datatype='table' name='[__tableau_internal_object_id__].[migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC]' role='measure' type='quantitative' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Boise City&quot;' value='&quot;Boise City&quot;' />
          <semantic-value key='&quot;Urban Honolulu&quot;' value='&quot;Honolulu&quot;' />
        </semantic-values>
      </column>
      <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
      <column caption='Dest Percent Leavers' datatype='real' name='[dest_percent_leavers]' role='measure' type='quantitative' />
      <column caption='Destination City' datatype='string' name='[destination_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Destination Display' datatype='string' name='[destination_display]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Albany, NY&quot;' value='&quot;Albany&quot;' />
        </semantic-values>
      </column>
      <column caption='Destination State' datatype='string' name='[destination_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
      <column caption='Origin Display' datatype='string' name='[origin_display]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Origin Percent Dest Incomers' datatype='real' name='[origin_percent_dest_incomers]' role='measure' type='quantitative' />
      <column caption='Origin State' datatype='string' name='[origin_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Pct Of Dest From Origin' datatype='real' name='[pct_of_dest_from_origin]' role='measure' type='quantitative' />
      <column caption='Pct Of Origin To Dest' datatype='real' name='[pct_of_origin_to_dest]' role='measure' type='quantitative' />
      <column-instance column='[date_]' derivation='MDY' name='[md:date_:ok]' pivot='key' type='ordinal' />
      <column-instance column='[destination_city]' derivation='None' name='[none:destination_city:nk]' pivot='key' type='nominal' />
      <column-instance column='[date_]' derivation='Year' name='[yr:date_:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:destination_city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austin-Round Rock-Georgetown, TX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clarksville, TN-KY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harrisburg-York-Lebanon, PA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Louisville/Jefferson County--Elizabethtown--Bardstown, KY-IN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pensacola-Ferry Pass, FL-AL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose-San Francisco-Oakland, CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albany-Schenectady, NY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington-South Burlington, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eugene-Springfield, OR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Knoxville-Morristown-Sevierville, TN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New York-Newark, NY-NJ-CT-PA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento-Roseville, CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tucson-Nogales, AZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asheville-Marion-Brevard, NC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlottesville, VA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Rapids-Wyoming-Muskegon, MI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Vegas-Henderson, NV-AZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Omaha-Council Bluffs-Fremont, NE-IA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Antonio-New Braunfels-Pearsall, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington-Baltimore-Arlington, DC-MD-VA-WV-PA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bellingham, WA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Columbus-Marion-Zanesville, OH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Homosassa Springs, FL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami-Fort Lauderdale-Port St. Lucie, FL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pittsburgh-New Castle-Weirton, PA-OH-WV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle-Tacoma, WA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austin-Round Rock, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cleveland-Akron-Canton, OH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hartford-East Hartford, CT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madison-Janesville-Beloit, WI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philadelphia-Reading-Camden, PA-NJ-DE-MD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Luis Obispo-Paso Robles, CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlanta--Athens-Clarke County--Sandy Springs, GA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chattanooga-Cleveland-Dalton, TN-GA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greensboro--Winston-Salem--High Point, NC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington-Fayette--Richmond--Frankfort, KY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Orlando-Deltona-Daytona Beach, FL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Antonio-New Braunfels, TX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Youngstown-Warren, OH-PA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Buffalo-Cheektowaga, NY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Detroit-Warren-Ann Arbor, MI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kansas City-Overland Park-Kansas City, MO-KS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nashville-Davidson--Murfreesboro, TN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Richmond, VA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tallahassee, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albuquerque-Santa Fe-Las Vegas, NM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cape Coral-Fort Myers-Naples, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Collins, CO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lakeland-Winter Haven, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Port-Sarasota, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salinas, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tulsa-Muskogee-Bartlesville, OK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boston-Worcester-Providence, MA-RI-NH-CT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dayton-Springfield-Kettering, OH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville-St. Marys-Palatka, FL-GA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mobile-Daphne-Fairhope, AL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raleigh-Durham-Chapel Hill, NC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Louis-St. Charles-Farmington, MO-IL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Atlanta--Athens-Clarke County--Sandy Springs, GA-AL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicago-Naperville, IL-IN-WI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenville-Spartanburg-Anderson, SC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Little Rock-North Little Rock, AR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Orlando-Lakeland-Deltona, FL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Diego-Carlsbad, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bend-Prineville, OR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corpus Christi-Kingsville-Alice, TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Houston-The Woodlands, TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Miami-Port St. Lucie-Fort Lauderdale, FL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portland-Lewiston-South Portland, ME&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Bend-Elkhart-Mishawaka, IN-MI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Birmingham-Hoover-Talladega, AL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crestview-Fort Walton Beach-Destin, FL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Huntsville-Decatur, AL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milwaukee-Racine-Waukesha, WI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portland-Vancouver-Salem, OR-WA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spokane-Spokane Valley-Coeur d&apos;Alene, WA-ID&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo-Cheektowaga-Olean, NY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denver-Aurora, CO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kahului-Wailuku-Lahaina, HI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myrtle Beach-Conway, SC-NC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reno-Carson City-Fernley, NV&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Syracuse-Auburn, NY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burlington-South Burlington-Barre, VT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Paso-Las Cruces, TX-NM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Killeen-Temple, TX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Orleans-Metairie-Hammond, LA-MS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester-Batavia-Seneca Falls, NY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tampa-St. Petersburg-Clearwater, FL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangor, ME&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colorado Springs, CO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hartford-West Hartford, CT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McAllen-Edinburg, TX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Phoenix-Mesa-Scottsdale, AZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria-Santa Barbara, CA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Augusta-Richmond County, GA-SC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cincinnati-Wilmington-Maysville, OH-KY-IN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gulfport-Biloxi, MS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Los Angeles-Long Beach, CA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Bay-Melbourne-Titusville, FL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Diego-Chula Vista-Carlsbad, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allentown-Bethlehem-Easton, PA-NJ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charleston-North Charleston, SC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gainesville-Lake City, FL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lancaster, PA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ocala, FL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salisbury-Cambridge, MD-DE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Urban Honolulu, HI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise City-Mountain Home-Ontario, ID-OR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dallas-Fort Worth, TX-OK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indianapolis-Carmel-Muncie, IN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis-St. Paul, MN-WI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raleigh-Durham-Cary, NC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Springfield, MA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baton Rouge, LA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbia-Orangeburg-Newberry, SC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hickory-Lenoir-Morganton, NC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Memphis-Forrest City, TN-MS-AR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phoenix-Mesa, AZ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Savannah-Hinesville-Statesboro, GA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asheville-Brevard, NC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charlotte-Concord, NC-SC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Rapids-Kentwood-Muskegon, MI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Las Vegas-Henderson, NV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oklahoma City-Shawnee, OK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Salt Lake City-Provo-Orem, UT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Virginia Beach-Norfolk, VA-NC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[md:date_:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2017</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2021</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2020</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>20171001</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>20181001</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>20191001</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>20201001</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>20211001</bucket>
            </map>
            <map to='#da323f'>
              <bucket>20170701</bucket>
            </map>
            <map to='#da323f'>
              <bucket>20180701</bucket>
            </map>
            <map to='#da323f'>
              <bucket>20190701</bucket>
            </map>
            <map to='#da323f'>
              <bucket>20200701</bucket>
            </map>
            <map to='#da323f'>
              <bucket>20210701</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2019</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2022</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2018</bucket>
            </map>
            <map to='#f36754'>
              <bucket>20170401</bucket>
            </map>
            <map to='#f36754'>
              <bucket>20180401</bucket>
            </map>
            <map to='#f36754'>
              <bucket>20190401</bucket>
            </map>
            <map to='#f36754'>
              <bucket>20200401</bucket>
            </map>
            <map to='#f36754'>
              <bucket>20210401</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>20170101</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>20180101</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>20190101</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>20200101</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>20210101</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>20220101</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:date_:ok]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>2017</bucket>
            </map>
            <map to='#da323f'>
              <bucket>2018</bucket>
            </map>
            <map to='#f36754'>
              <bucket>2019</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>2020</bucket>
            </map>
            <map to='#fdab9b'>
              <bucket>2021</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>2022</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='migration_boston' id='migration_boston (boston.migration_boston)_A2B2A51DAAD545BA89B39507817259BC'>
            <properties context=''>
              <relation connection='postgres.01b533g10k52vy1frr3df14yrods' name='migration_boston' table='[boston].[migration_boston]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='us_popchange (boston.us_popchange) (postgres)' inline='true' name='federated.08s5a8m1ty4l6u17m9d1o0qqq5xd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.06x580h1l1tp8n1cpm59d0z4q5ro'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.06x580h1l1tp8n1cpm59d0z4q5ro' name='us_popchange' table='[boston].[us_popchange]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.06x580h1l1tp8n1cpm59d0z4q5ro' name='us_popchange' table='[boston].[us_popchange]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[us_popchange]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_popchange (boston.us_popchange)_70C299464E1047AD94A28DEC546825D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2021</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pop2021]</local-name>
            <parent-name>[us_popchange]</parent-name>
            <remote-alias>pop2021</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_popchange (boston.us_popchange)_70C299464E1047AD94A28DEC546825D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2022</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pop2022]</local-name>
            <parent-name>[us_popchange]</parent-name>
            <remote-alias>pop2022</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_popchange (boston.us_popchange)_70C299464E1047AD94A28DEC546825D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>change</remote-name>
            <remote-type>131</remote-type>
            <local-name>[change]</local-name>
            <parent-name>[us_popchange]</parent-name>
            <remote-alias>change</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_popchange (boston.us_popchange)_70C299464E1047AD94A28DEC546825D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_change</remote-name>
            <remote-type>131</remote-type>
            <local-name>[percent_change]</local-name>
            <parent-name>[us_popchange]</parent-name>
            <remote-alias>percent_change</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_popchange (boston.us_popchange)_70C299464E1047AD94A28DEC546825D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='string' name='[Calculation_1328280452871688193]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [city] = &quot;Boston, Massachusetts&quot; THEN &quot;&lt;b&gt;&quot; + [city] + &quot;&lt;/b&gt;&quot; ELSE [city] END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='us_popchange' datatype='table' name='[__tableau_internal_object_id__].[us_popchange (boston.us_popchange)_70C299464E1047AD94A28DEC546825D1]' role='measure' type='quantitative' />
      <column caption='Change' datatype='real' name='[change]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Percent Change' datatype='real' name='[percent_change]' role='measure' type='quantitative' />
      <column caption='Pop2021' datatype='real' name='[pop2021]' role='measure' type='quantitative' />
      <column caption='Pop2022' datatype='real' name='[pop2022]' role='measure' type='quantitative' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Seattle ,  Washington&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Seattle city Washington&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Seattle, Washington&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Fort Worth ,  Texas&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Fort Worth city Texas&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Fort Worth, Texas&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Charlotte ,  North Carolina&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Charlotte city North Carolina&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Charlotte, North Carolina&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Jacksonville ,  Florida&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Jacksonville city Florida&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Jacksonville, Florida&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;San Antonio, Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;San Antonio ,  Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;San Antonio city Texas&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Phoenix ,  Arizona&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Phoenix city Arizona&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Tucson ,  Arizona&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Tucson city Arizona&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Oklahoma City ,  Oklahoma&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Oklahoma City city Oklahoma&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;Phoenix, Arizona&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Nashville-Davidson metropolitan government (balance) Tennessee&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Las Vegas ,  Nevada&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Las Vegas city Nevada&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Las Vegas, Nevada&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Oklahoma City, Oklahoma&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Tucson, Arizona&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Dallas ,  Texas&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Dallas city Texas&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Mesa ,  Arizona&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Mesa city Arizona&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Washington ,  District of Columbia&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Washington city District of Columbia&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;San Diego ,  California&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;San Diego city California&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Dallas, Texas&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Houston ,  Texas&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Houston city Texas&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Columbus ,  Ohio&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Columbus city Ohio&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mesa, Arizona&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Washington, District of Columbia&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Austin ,  Texas&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Austin city Texas&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Sacramento ,  California&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Sacramento city California&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;San Diego, California&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Fresno ,  California&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Fresno city California&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Denver ,  Colorado&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Denver city Colorado&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Kansas City ,  Missouri&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Kansas City city Missouri&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Indianapolis ,  (balance) Indiana&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Indianapolis city (balance) Indiana&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;El Paso ,  Texas&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;El Paso city Texas&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Houston, Texas&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;San Francisco ,  California&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;San Francisco city California&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Milwaukee ,  Wisconsin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Milwaukee city Wisconsin&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Los Angeles ,  California&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Los Angeles city California&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Albuquerque ,  New Mexico&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Albuquerque city New Mexico&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Columbus, Ohio&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Boston ,  Massachusetts&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Austin, Texas&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Memphis ,  Tennessee&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Memphis city Tennessee&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;San Jose ,  California&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;San Jose city California&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Sacramento, California&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Detroit ,  Michigan&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Detroit city Michigan&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Chicago ,  Illinois&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Chicago city Illinois&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Baltimore ,  Maryland&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Baltimore city Maryland&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Boston city Massachusetts&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Boston, Massachusetts&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Portland ,  Oregon&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Portland city Oregon&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Denver, Colorado&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Fresno, California&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Philadelphia ,  Pennsylvania&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Philadelphia city Pennsylvania&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Kansas City, Missouri&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;New York ,  New York&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;New York city New York&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;New York, New York&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;Philadelphia, Pennsylvania&quot;</bucket>
            </map>
            <map to='#f07e27'>
              <bucket>&quot;Portland, Oregon&quot;</bucket>
            </map>
            <map to='#f2882d'>
              <bucket>&quot;Baltimore, Maryland&quot;</bucket>
            </map>
            <map to='#f2882d'>
              <bucket>&quot;Chicago, Illinois&quot;</bucket>
            </map>
            <map to='#f2882d'>
              <bucket>&quot;Detroit, Michigan&quot;</bucket>
            </map>
            <map to='#f49234'>
              <bucket>&quot;San Jose, California&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;Louisville/Jefferson County metro government (balance) Kentucky&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;Memphis, Tennessee&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Albuquerque, New Mexico&quot;</bucket>
            </map>
            <map to='#f7ae54'>
              <bucket>&quot;Los Angeles, California&quot;</bucket>
            </map>
            <map to='#f7ae54'>
              <bucket>&quot;Milwaukee, Wisconsin&quot;</bucket>
            </map>
            <map to='#f9b665'>
              <bucket>&quot;San Francisco, California&quot;</bucket>
            </map>
            <map to='#fcbe75'>
              <bucket>&quot;El Paso, Texas&quot;</bucket>
            </map>
            <map to='#fcbe75'>
              <bucket>&quot;Indianapolis, (balance) Indiana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='us_popchange' id='us_popchange (boston.us_popchange)_70C299464E1047AD94A28DEC546825D1'>
            <properties context=''>
              <relation connection='postgres.06x580h1l1tp8n1cpm59d0z4q5ro' name='us_popchange' table='[boston].[us_popchange]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='mass_popchange (boston.mass_popchange) (postgres)' inline='true' name='federated.1hzc58j0prpowb1ez06dc1kj2fvx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1uhhnld1scrpgs13cwilp1avh1xg'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1uhhnld1scrpgs13cwilp1avh1xg' name='mass_popchange' table='[boston].[mass_popchange]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1uhhnld1scrpgs13cwilp1avh1xg' name='mass_popchange' table='[boston].[mass_popchange]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_27D2F2A9FD3C4AC0A9E3DCAC58C85845]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2021</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pop2021]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>pop2021</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_27D2F2A9FD3C4AC0A9E3DCAC58C85845]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2022</remote-name>
            <remote-type>131</remote-type>
            <local-name>[pop2022]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>pop2022</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_27D2F2A9FD3C4AC0A9E3DCAC58C85845]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>change</remote-name>
            <remote-type>131</remote-type>
            <local-name>[change]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>change</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_27D2F2A9FD3C4AC0A9E3DCAC58C85845]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_change</remote-name>
            <remote-type>131</remote-type>
            <local-name>[percent_change]</local-name>
            <parent-name>[mass_popchange]</parent-name>
            <remote-alias>percent_change</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mass_popchange (boston.mass_popchange)_27D2F2A9FD3C4AC0A9E3DCAC58C85845]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='string' name='[Calculation_1328280452873105410]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [city] = &quot;Boston&quot; THEN &quot;&lt;b&gt;&quot; + [city] + &quot;&lt;/b&gt;&quot; ELSE [city] END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='mass_popchange' datatype='table' name='[__tableau_internal_object_id__].[mass_popchange (boston.mass_popchange)_27D2F2A9FD3C4AC0A9E3DCAC58C85845]' role='measure' type='quantitative' />
      <column caption='Change' datatype='real' name='[change]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Percent Change' datatype='real' name='[percent_change]' role='measure' type='quantitative' />
      <column caption='Pop2021' datatype='real' name='[pop2021]' role='measure' type='quantitative' />
      <column caption='Pop2022' datatype='real' name='[pop2022]' role='measure' type='quantitative' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Methuen Town&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Taunton&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#f07e27'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#f07e27'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#f49234'>
              <bucket>&quot;Brockton&quot;</bucket>
            </map>
            <map to='#f49234'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#f49234'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;Framingham&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Peabody&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Waltham&quot;</bucket>
            </map>
            <map to='#f9b665'>
              <bucket>&quot;Chicopee&quot;</bucket>
            </map>
            <map to='#f9b665'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#f9b665'>
              <bucket>&quot;Haverhill&quot;</bucket>
            </map>
            <map to='#f9b665'>
              <bucket>&quot;Weymouth Town&quot;</bucket>
            </map>
            <map to='#fcbe75'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#fcbe75'>
              <bucket>&quot;Somerville&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='mass_popchange' id='mass_popchange (boston.mass_popchange)_27D2F2A9FD3C4AC0A9E3DCAC58C85845'>
            <properties context=''>
              <relation connection='postgres.1uhhnld1scrpgs13cwilp1avh1xg' name='mass_popchange' table='[boston].[mass_popchange]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='population (boston.population) (postgres)' inline='true' name='federated.1lg9qvz0z3th3z1a5lf261cc85ov' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1hc1ezw018c2x81aa7xa400zh9ob'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1hc1ezw018c2x81aa7xa400zh9ob' name='population' table='[boston].[population]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1hc1ezw018c2x81aa7xa400zh9ob' name='population' table='[boston].[population]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date_</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>date_</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population (boston.population)_66CCADA538B44628BC828A8794E64246]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>131</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[population]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population (boston.population)_66CCADA538B44628BC828A8794E64246]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='real' name='[Calculation_1326873080749076484]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([population]) - LOOKUP(SUM([population]), -1)) / LOOKUP(SUM([population]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='population' datatype='table' name='[__tableau_internal_object_id__].[population (boston.population)_66CCADA538B44628BC828A8794E64246]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='population' id='population (boston.population)_66CCADA538B44628BC828A8794E64246'>
            <properties context=''>
              <relation connection='postgres.1hc1ezw018c2x81aa7xa400zh9ob' name='population' table='[boston].[population]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 3 (generated) 3' name='[Action10_0256ADB0C6D74FF6ACF8AF49A47FDD60]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Inventory, MOS -cities' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,High Population Set,Region' />
        <param name='target' value='Inventory, MOS -cities' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 2 2' name='[Action11_A811805E4A8842FAA5D438289C71F1ED]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Metro - Median Sale Price' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,Clusters (2)' />
        <param name='target' value='Metro - Median Sale Price' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action12_3D4F80B7D6E74219A4D93B213C5C0AD7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sold Above List Price - Metro' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,Clusters (2),Clusters (1)' />
        <param name='target' value='Sold Above List Price - Metro' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 3' name='[Action13_1D1B8AC8A4504FFA98FF74F51EE8A179]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sold Above List Price (3)' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,Clusters (2)' />
        <param name='target' value='Sold Above List Price (3)' />
      </command>
    </action>
    <action caption='Highlight 3 (generated) 1 1 2' name='[Action14_38757DE6B652401AB9F936130741F904]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Days on the Market - Metro' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,Parent Metro Region' />
        <param name='target' value='Days on the Market - Metro' />
      </command>
    </action>
    <action caption='Highlight 3 (generated) 1 1 3' name='[Action15_5AAA028A0CFC465FA523F416F9244393]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DOM vs. Med Sale, Construction' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,Parent Metro Region' />
        <param name='target' value='DOM vs. Med Sale, Construction' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action16_316486D7EA8E491ABEC520FDEB0A2AB0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Permits' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Clusters' />
        <param name='target' value='Permits' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action1_27FCB264EFB14EA8A00B18EFBE6DA0B2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sold Above List Price' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,Clusters (2),Clusters (1)' />
        <param name='target' value='Sold Above List Price' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action3_F736AF03089B40EF932B842D91DCA76F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Inventory, MOS - metro' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,High Population Set' />
        <param name='target' value='Inventory, MOS - metro' />
      </command>
    </action>
    <action caption='Highlight 3 (generated) 2' name='[Action4_D3E40F7307FA43C289E702DB44089E9E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Invent vs. MOS Population Correlations' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,High Population Set' />
        <param name='target' value='Invent vs. MOS Population Correlations' />
      </command>
    </action>
    <action caption='Highlight 3 (generated) 1 1' name='[Action6_135AA4E05C4243A6ACBE070394DAB2B3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Days on the Market' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,Parent Metro Region' />
        <param name='target' value='Days on the Market' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 2' name='[Action7_6AFD3D698B68490EBBE57987758F9793]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Median Sale Price' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,Clusters (2),Clusters' />
        <param name='target' value='Median Sale Price' />
      </command>
    </action>
    <action caption='Highlight 3 (generated) 1' name='[Action8_816E1A807EC64613AA2B3EE9E942AA4D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='MOS Metro' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,High Population Set' />
        <param name='target' value='MOS Metro' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 2 1' name='[Action8_F92511FBC178404E8B14CA8171F2A2A1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Rent' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2' />
        <param name='target' value='Rent' />
      </command>
    </action>
    <action caption='Highlight 3 (generated) 1 1 1' name='[Action9_3F7483D3225E465FB95C0B777350BD51]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Days on the Market (2)' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,Parent Metro Region' />
        <param name='target' value='Days on the Market (2)' />
      </command>
    </action>
    <action caption='Highlight 3 (generated) 3 1' name='[Action9_4426F5A584A14AE385C6869EEC4CFDE5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Vacancy' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Parent Metro Region Set 2,High Population Set' />
        <param name='target' value='Vacancy' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='%moving_within_boston'>
      <table>
        <view>
          <datasources>
            <datasource caption='migration_boston (boston.migration_boston) (postgres)' name='federated.1wuxdmv1eajlf01ey74fs00bzs9g' />
          </datasources>
          <datasource-dependencies datasource='federated.1wuxdmv1eajlf01ey74fs00bzs9g'>
            <column-instance column='[date_]' derivation='Attribute' name='[attr:date_:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Boise City&quot;' value='&quot;Boise City&quot;' />
                <semantic-value key='&quot;Urban Honolulu&quot;' value='&quot;Honolulu&quot;' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
            <column-instance column='[date_]' derivation='MDY' name='[md:date_:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Pct Of Origin To Dest' datatype='real' name='[pct_of_origin_to_dest]' role='measure' type='quantitative' />
            <column-instance column='[pct_of_origin_to_dest]' derivation='Sum' name='[sum:pct_of_origin_to_dest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_]' derivation='Year' name='[yr:date_:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:city:nk]'>
            <groupfilter function='member' level='[none:city:nk]' member='&quot;Boston&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:city:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:pct_of_origin_to_dest:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[md:date_:ok]' value='66' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[md:date_:ok]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[yr:date_:ok]' />
              <text column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:pct_of_origin_to_dest:qk]' />
              <lod column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[attr:date_:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:pct_of_origin_to_dest:qk]</rows>
        <cols>([federated.1wuxdmv1eajlf01ey74fs00bzs9g].[yr:date_:ok] / [federated.1wuxdmv1eajlf01ey74fs00bzs9g].[md:date_:ok])</cols>
      </table>
      <simple-id uuid='{D8F5050D-8CDD-4B4F-84C0-CA11C0002F7F}' />
    </worksheet>
    <worksheet name='2018 IRH'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Income Restricted Housing by Neighborhood, 2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='income_restricted_18 (boston.income_restricted_18) (postgres)' name='federated.0wwugh11qqo7ko19b8gr9021ddg8' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwugh11qqo7ko19b8gr9021ddg8'>
            <column caption='Income Restricted Ownership' datatype='integer' name='[income_restricted_ownership]' role='measure' type='quantitative' />
            <column caption='Income Restricted Rental' datatype='integer' name='[income_restricted_rental]' role='measure' type='quantitative' />
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[income_restricted_ownership]' derivation='Sum' name='[sum:income_restricted_ownership:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income_restricted_rental]' derivation='Sum' name='[sum:income_restricted_rental:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_income_restricted]' derivation='Sum' name='[sum:total_income_restricted:qk]' pivot='key' type='quantitative' />
            <column caption='Total Income Restricted' datatype='integer' name='[total_income_restricted]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[none:neighborhood:nk]' direction='DESC' using='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:total_income_restricted:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[none:neighborhood:nk]' value='260' />
            <format attr='background-color' data-class='total' value='#e6e6e6' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:total_income_restricted:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:total_income_restricted:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:total_income_restricted:qk]' />
              <tooltip column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_ownership:qk]' />
              <tooltip column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_rental:qk]' />
              <text column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:total_income_restricted:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0wwugh11qqo7ko19b8gr9021ddg8].[none:neighborhood:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2D285EBA-61E1-43EC-99FA-E54AF6BB38D6}' />
    </worksheet>
    <worksheet name='2022 IRH'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Income Restricted Housing by Neighborhood, 2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='income_restricted_22 (boston.income_restricted_22) (postgres)' name='federated.1pveoyc116gjhu152l1r30wh75id' />
          </datasources>
          <datasource-dependencies datasource='federated.1pveoyc116gjhu152l1r30wh75id'>
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_income_restricted]' derivation='Sum' name='[sum:total_income_restricted:qk]' pivot='key' type='quantitative' />
            <column caption='Total Income Restricted' datatype='integer' name='[total_income_restricted]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1pveoyc116gjhu152l1r30wh75id].[none:neighborhood:nk]' direction='DESC' using='[federated.1pveoyc116gjhu152l1r30wh75id].[sum:total_income_restricted:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1pveoyc116gjhu152l1r30wh75id].[none:neighborhood:nk]' value='288' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' value='#e6e6e6' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1pveoyc116gjhu152l1r30wh75id].[sum:total_income_restricted:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1pveoyc116gjhu152l1r30wh75id].[sum:total_income_restricted:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1pveoyc116gjhu152l1r30wh75id].[sum:total_income_restricted:qk]' />
              <text column='[federated.1pveoyc116gjhu152l1r30wh75id].[sum:total_income_restricted:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1pveoyc116gjhu152l1r30wh75id].[none:neighborhood:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2398B241-AB08-4FAC-8B63-990891A42DF2}' />
    </worksheet>
    <worksheet name='Cities - DOM Close (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Days on the Market, High Population Cities 2017-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column-instance column='[median_dom]' derivation='Avg' name='[avg:median_dom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal' />
            <column caption='Median Dom' datatype='real' name='[median_dom]' role='dimension' type='ordinal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' />
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_dom:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' direction='DESC' measure-to-sort-by='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' value='#e6e6e6' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_dom:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline2' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_dom:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_dom:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_dom:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>([federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok] / [federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities])</rows>
        <cols>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_dom:qk]</cols>
      </table>
      <simple-id uuid='{64BF0D9D-1589-46B0-AEDE-B762F2B20E43}' />
    </worksheet>
    <worksheet name='Cities - Inventory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Inventory, High Population Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column caption='Inventory' datatype='real' name='[inventory]' role='dimension' type='ordinal' />
            <column-instance column='[Region Set]' derivation='InOut' name='[io:Region Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Fort Worth, TX&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Philadelphia, PA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;San Francisco, CA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;San Jose, CA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Seattle, WA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Washington, DC&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Boston, MA&quot;</bucket>
              <bucket>&quot;Austin, TX&quot;</bucket>
              <bucket>&quot;Cape Coral, FL&quot;</bucket>
              <bucket>&quot;Charlotte, NC&quot;</bucket>
              <bucket>&quot;Chicago, IL&quot;</bucket>
              <bucket>&quot;Columbus, OH&quot;</bucket>
              <bucket>&quot;Dallas, TX&quot;</bucket>
              <bucket>&quot;Denver, CO&quot;</bucket>
              <bucket>&quot;El Paso, TX&quot;</bucket>
              <bucket>&quot;Fort Worth, TX&quot;</bucket>
              <bucket>&quot;Hartford, CT&quot;</bucket>
              <bucket>&quot;Houston, TX&quot;</bucket>
              <bucket>&quot;Indianapolis, IN&quot;</bucket>
              <bucket>&quot;Jacksonville, FL&quot;</bucket>
              <bucket>&quot;Las Vegas, NV&quot;</bucket>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
              <bucket>&quot;Miami, FL&quot;</bucket>
              <bucket>&quot;Nashville, TN&quot;</bucket>
              <bucket>&quot;New York, NY&quot;</bucket>
              <bucket>&quot;Oklahoma City, OK&quot;</bucket>
              <bucket>&quot;Orlando, FL&quot;</bucket>
              <bucket>&quot;Philadelphia, PA&quot;</bucket>
              <bucket>&quot;Phoenix, AZ&quot;</bucket>
              <bucket>&quot;Portland, ME&quot;</bucket>
              <bucket>&quot;San Antonio, TX&quot;</bucket>
              <bucket>&quot;San Diego, CA&quot;</bucket>
              <bucket>&quot;San Francisco, CA&quot;</bucket>
              <bucket>&quot;San Jose, CA&quot;</bucket>
              <bucket>&quot;Seattle, WA&quot;</bucket>
              <bucket>&quot;Tampa, FL&quot;</bucket>
              <bucket>&quot;Washington, DC&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' />
              <size column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:Region Set:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline0' label-type='none' paired-distribution-id='refline1' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' paired-distribution-id='refline0' probability='95' scope='per-table' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' z-order='2' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' z-order='3' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' paired-distribution-id='refline2' probability='95' scope='per-table' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' z-order='4' />
          </pane>
        </panes>
        <rows>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]</rows>
        <cols>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{7456C50A-8332-41CE-B8E4-719FB3DBD413}' />
    </worksheet>
    <worksheet name='Cities - MOS'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Months of Supply, High Population Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column caption='Inventory' datatype='real' name='[inventory]' role='dimension' type='ordinal' />
            <column-instance column='[Region Set]' derivation='InOut' name='[io:Region Set:nk]' pivot='key' type='nominal' />
            <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='dimension' type='ordinal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
            <column-instance column='[months_of_supply]' derivation='Sum' name='[sum:months_of_supply:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Fort Worth, TX&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Philadelphia, PA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;San Francisco, CA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;San Jose, CA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Seattle, WA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Washington, DC&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Boston, MA&quot;</bucket>
              <bucket>&quot;Austin, TX&quot;</bucket>
              <bucket>&quot;Cape Coral, FL&quot;</bucket>
              <bucket>&quot;Charlotte, NC&quot;</bucket>
              <bucket>&quot;Chicago, IL&quot;</bucket>
              <bucket>&quot;Columbus, OH&quot;</bucket>
              <bucket>&quot;Dallas, TX&quot;</bucket>
              <bucket>&quot;Denver, CO&quot;</bucket>
              <bucket>&quot;El Paso, TX&quot;</bucket>
              <bucket>&quot;Fort Worth, TX&quot;</bucket>
              <bucket>&quot;Hartford, CT&quot;</bucket>
              <bucket>&quot;Houston, TX&quot;</bucket>
              <bucket>&quot;Indianapolis, IN&quot;</bucket>
              <bucket>&quot;Jacksonville, FL&quot;</bucket>
              <bucket>&quot;Las Vegas, NV&quot;</bucket>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
              <bucket>&quot;Miami, FL&quot;</bucket>
              <bucket>&quot;Nashville, TN&quot;</bucket>
              <bucket>&quot;New York, NY&quot;</bucket>
              <bucket>&quot;Oklahoma City, OK&quot;</bucket>
              <bucket>&quot;Orlando, FL&quot;</bucket>
              <bucket>&quot;Philadelphia, PA&quot;</bucket>
              <bucket>&quot;Phoenix, AZ&quot;</bucket>
              <bucket>&quot;Portland, ME&quot;</bucket>
              <bucket>&quot;San Antonio, TX&quot;</bucket>
              <bucket>&quot;San Diego, CA&quot;</bucket>
              <bucket>&quot;San Francisco, CA&quot;</bucket>
              <bucket>&quot;San Jose, CA&quot;</bucket>
              <bucket>&quot;Seattle, WA&quot;</bucket>
              <bucket>&quot;Tampa, FL&quot;</bucket>
              <bucket>&quot;Washington, DC&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' />
              <size column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:Region Set:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline4' label-type='none' paired-distribution-id='refline5' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='automatic' paired-distribution-id='refline4' probability='95' scope='per-table' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]' z-order='2' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline6' label-type='none' paired-distribution-id='refline7' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]' z-order='3' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]' enable-instant-analytics='true' formula='median' id='refline7' label-type='automatic' paired-distribution-id='refline6' probability='95' scope='per-table' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]' z-order='4' />
          </pane>
        </panes>
        <rows>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:months_of_supply:qk]</rows>
        <cols>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{ACBA8772-D367-4C96-B9DE-933BC883D107}' />
    </worksheet>
    <worksheet name='Cities - MOS (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Days on the Market, High Population Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column caption='Inventory' datatype='real' name='[inventory]' role='dimension' type='ordinal' />
            <column-instance column='[Region Set]' derivation='InOut' name='[io:Region Set:nk]' pivot='key' type='nominal' />
            <column caption='Median Dom' datatype='real' name='[median_dom]' role='dimension' type='ordinal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_dom]' derivation='Sum' name='[sum:median_dom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Fort Worth, TX&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Philadelphia, PA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;San Francisco, CA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;San Jose, CA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Seattle, WA&quot;' />
              <groupfilter function='member' level='[none:region:nk]' member='&quot;Washington, DC&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Boston, MA&quot;</bucket>
              <bucket>&quot;Austin, TX&quot;</bucket>
              <bucket>&quot;Cape Coral, FL&quot;</bucket>
              <bucket>&quot;Charlotte, NC&quot;</bucket>
              <bucket>&quot;Chicago, IL&quot;</bucket>
              <bucket>&quot;Columbus, OH&quot;</bucket>
              <bucket>&quot;Dallas, TX&quot;</bucket>
              <bucket>&quot;Denver, CO&quot;</bucket>
              <bucket>&quot;El Paso, TX&quot;</bucket>
              <bucket>&quot;Fort Worth, TX&quot;</bucket>
              <bucket>&quot;Hartford, CT&quot;</bucket>
              <bucket>&quot;Houston, TX&quot;</bucket>
              <bucket>&quot;Indianapolis, IN&quot;</bucket>
              <bucket>&quot;Jacksonville, FL&quot;</bucket>
              <bucket>&quot;Las Vegas, NV&quot;</bucket>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
              <bucket>&quot;Miami, FL&quot;</bucket>
              <bucket>&quot;Nashville, TN&quot;</bucket>
              <bucket>&quot;New York, NY&quot;</bucket>
              <bucket>&quot;Oklahoma City, OK&quot;</bucket>
              <bucket>&quot;Orlando, FL&quot;</bucket>
              <bucket>&quot;Philadelphia, PA&quot;</bucket>
              <bucket>&quot;Phoenix, AZ&quot;</bucket>
              <bucket>&quot;Portland, ME&quot;</bucket>
              <bucket>&quot;San Antonio, TX&quot;</bucket>
              <bucket>&quot;San Diego, CA&quot;</bucket>
              <bucket>&quot;San Francisco, CA&quot;</bucket>
              <bucket>&quot;San Jose, CA&quot;</bucket>
              <bucket>&quot;Seattle, WA&quot;</bucket>
              <bucket>&quot;Tampa, FL&quot;</bucket>
              <bucket>&quot;Washington, DC&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:inventory:qk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:median_dom:qk]' scope='rows' value='Median Days on the Market' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:median_dom:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' />
              <size column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:Region Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:median_dom:qk]</rows>
        <cols>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{C1112443-4C7A-41DB-AD26-4DEAB93558A9}' />
    </worksheet>
    <worksheet name='Cities - Med List Close'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median List Price, High Population Cities 2017-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column-instance column='[median_list_price]' derivation='Avg' name='[avg:median_list_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal' />
            <column caption='Median List Price' datatype='real' name='[median_list_price]' role='dimension' type='ordinal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' />
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_list_price:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' direction='DESC' measure-to-sort-by='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' value='#e6e6e6' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' value='#e6e6e6' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_list_price:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_list_price:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_list_price:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_list_price:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_list_price:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>([federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok] / [federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities])</rows>
        <cols>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_list_price:qk]</cols>
      </table>
      <simple-id uuid='{0B8C8663-7677-4056-9F21-2D64CB72B1F0}' />
    </worksheet>
    <worksheet name='Cities - Med Sale'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Sale Price - Cluster Analysis, High Population Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{36a31d85-085d-4d97-97fb-2cfcfa7c886b}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[median_sale_price]' derivation='Avg' name='[avg:median_sale_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal' />
            <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='dimension' type='ordinal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' palette='blue_10_0' type='palette'>
                  <map to='#2a5783'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#43719f'>
                    <bucket>7</bucket>
                  </map>
                  <map to='#4878a6'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#6a9bc3'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#92c0df'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#9c755f'>
                    <bucket>9</bucket>
                  </map>
                  <map to='#a5cfe9'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#b9ddf1'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#bab0ac'>
                    <bucket>10</bucket>
                  </map>
                  <map to='#ff9da7'>
                    <bucket>8</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' />
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:AdhocCluster:1:ok]' />
              <size column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' />
              <lod column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' />
            </encodings>
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' z-order='2' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]</rows>
        <cols>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{15633EA2-DA42-4EC7-82D6-4CC351E27020}' />
    </worksheet>
    <worksheet name='Cities - Med Sale Close'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Sale Price, High Population Cities Annual Average 2020-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column-instance column='[median_sale_price]' derivation='Avg' name='[avg:median_sale_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal' />
            <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='dimension' type='ordinal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' />
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2017' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2018' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2019' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' direction='DESC' measure-to-sort-by='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>([federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok] / [federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities])</rows>
        <cols>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:median_sale_price:qk]</cols>
      </table>
      <simple-id uuid='{3DE079AC-643A-4DBA-87D2-98EBA405256F}' />
    </worksheet>
    <worksheet name='Cities - Sold Above List'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold Above List Price - Cluster Analysis, High Population Cities Quarterly Average 2012-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{8c078291-e75d-405b-9a68-e18159002c81}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[sold_above_list]' derivation='Avg' name='[avg:sold_above_list:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[period_begin]' derivation='Quarter' name='[qr:period_begin:ok]' pivot='key' type='ordinal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='dimension' type='ordinal' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' palette='blue_10_0' type='palette'>
                  <map to='#2a5783'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#2a5783'>
                    <bucket>11</bucket>
                  </map>
                  <map to='#376491'>
                    <bucket>10</bucket>
                  </map>
                  <map to='#42709e'>
                    <bucket>9</bucket>
                  </map>
                  <map to='#43719f'>
                    <bucket>7</bucket>
                  </map>
                  <map to='#4c7dab'>
                    <bucket>8</bucket>
                  </map>
                  <map to='#6a9bc3'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#79aacf'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#89b8da'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#92c0df'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#b9ddf1'>
                    <bucket>4</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' />
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[qr:period_begin:ok]' value='29' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[qr:period_begin:ok]' value='false' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' id='refline3' value='4' />
            <format attr='stroke-color' id='refline3' value='#9007144b' />
            <format attr='stroke-size' id='refline1' value='4' />
            <format attr='stroke-color' id='refline1' value='#9007144b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:AdhocCluster:2:ok]' />
              <size column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' />
              <lod column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' />
            </encodings>
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline0' label-type='none' paired-distribution-id='refline1' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' paired-distribution-id='refline0' probability='95' scope='per-table' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' z-order='2' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' z-order='3' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' paired-distribution-id='refline2' probability='95' scope='per-table' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.3480663299560547' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]</rows>
        <cols>([federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok] / [federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[qr:period_begin:ok])</cols>
      </table>
      <simple-id uuid='{E992C4A0-EF0F-4D55-9AA9-E3B3CA246164}' />
    </worksheet>
    <worksheet name='Cities - Sold Above List Close'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold Above List Price Ratio, High Population Cities 2017-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column-instance column='[sold_above_list]' derivation='Avg' name='[avg:sold_above_list:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='dimension' type='ordinal' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' />
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' direction='DESC' measure-to-sort-by='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]</column>
            <column>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' value='#e6e6e6' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' value='#e6e6e6' />
            <format attr='color' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline2' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>([federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok] / [federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities])</rows>
        <cols>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[avg:sold_above_list:qk]</cols>
      </table>
      <simple-id uuid='{59401D2A-C136-4A3C-A141-A86B0086FAEF}' />
    </worksheet>
    <worksheet name='DOM Construction &amp; Existing'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Days on the Market, New Construction and Existing</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='redfin_construction_dom (boston.redfin_construction_dom) (postgres)' name='federated.1l3udmg117jwxt1b3osnh04wnvas' />
          </datasources>
          <datasource-dependencies datasource='federated.1l3udmg117jwxt1b3osnh04wnvas'>
            <column caption='Existing' datatype='real' datatype-customized='true' name='[existing]' role='dimension' type='ordinal' />
            <column caption='New Construction' datatype='real' datatype-customized='true' name='[new_construction]' role='dimension' type='ordinal' />
            <column-instance column='[timeframe]' derivation='None' name='[none:timeframe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[existing]' derivation='Sum' name='[sum:existing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_construction]' derivation='Sum' name='[sum:new_construction:qk]' pivot='key' type='quantitative' />
            <column caption='Timeframe' datatype='date' datatype-customized='true' name='[timeframe]' role='dimension' type='ordinal' />
            <column-instance column='[timeframe]' derivation='Year' name='[yr:timeframe:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1l3udmg117jwxt1b3osnh04wnvas].[sum:new_construction:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1l3udmg117jwxt1b3osnh04wnvas].[none:timeframe:qk]' field-type='quantitative' major-origin='#2017-07-31#' major-spacing='1.0' major-units='years' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.1l3udmg117jwxt1b3osnh04wnvas].[none:timeframe:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#d4d4d4' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#555555' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l3udmg117jwxt1b3osnh04wnvas].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l3udmg117jwxt1b3osnh04wnvas].[sum:existing:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l3udmg117jwxt1b3osnh04wnvas].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l3udmg117jwxt1b3osnh04wnvas].[sum:new_construction:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l3udmg117jwxt1b3osnh04wnvas].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1l3udmg117jwxt1b3osnh04wnvas].[sum:existing:qk] + [federated.1l3udmg117jwxt1b3osnh04wnvas].[sum:new_construction:qk])</rows>
        <cols>([federated.1l3udmg117jwxt1b3osnh04wnvas].[yr:timeframe:ok] * [federated.1l3udmg117jwxt1b3osnh04wnvas].[none:timeframe:qk])</cols>
      </table>
      <simple-id uuid='{F721F016-5367-49E7-803C-02E2A4FD9281}' />
    </worksheet>
    <worksheet name='Hires and Construction'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name>, Seasonally Adjusted, 2000-2023]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employment_construction_nohousing (boston.employment_construction_nohousing) (postgres)' name='federated.1c6nvfh1k5shdl1gwk8k00lvk3k4' />
          </datasources>
          <datasource-dependencies datasource='federated.1c6nvfh1k5shdl1gwk8k00lvk3k4'>
            <column-instance column='[mass_hires_annual_sum]' derivation='Avg' name='[avg:mass_hires_annual_sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[avg:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative' />
            <column caption='Mass Hires Annual Sum' datatype='real' name='[mass_hires_annual_sum]' role='measure' type='quantitative' />
            <column caption='New Private Housing Structures Auth By Building Permits' datatype='real' name='[new_private_housing_structures_auth_by_building_permits]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mass_hires_annual_sum]' derivation='Sum' name='[sum:mass_hires_annual_sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Sum' name='[sum:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[sum:mass_hires_annual_sum:qk]&quot;</bucket>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[sum:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]' included-values='in-range'>
            <min>2001</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' value='340' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:mass_hires_annual_sum:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.966850757598877' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:mass_hires_annual_sum:qk] + [federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk])</rows>
        <cols>[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]</cols>
      </table>
      <simple-id uuid='{837B5819-6F36-4623-B38A-F79DCEF921EE}' />
    </worksheet>
    <worksheet name='IRH, 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='income_restricted_18 (boston.income_restricted_18) (postgres)' name='federated.0wwugh11qqo7ko19b8gr9021ddg8' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwugh11qqo7ko19b8gr9021ddg8'>
            <column caption='Income Restricted Ownership' datatype='integer' name='[income_restricted_ownership]' role='measure' type='quantitative' />
            <column caption='Income Restricted Rental' datatype='integer' name='[income_restricted_rental]' role='measure' type='quantitative' />
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[income_restricted_ownership]' derivation='Sum' name='[sum:income_restricted_ownership:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income_restricted_rental]' derivation='Sum' name='[sum:income_restricted_rental:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_ownership:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_rental:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_rental:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_ownership:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[none:neighborhood:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Roxbury&quot;</bucket>
              <bucket>&quot;South End&quot;</bucket>
              <bucket>&quot;Jamaica Plain&quot;</bucket>
              <bucket>&quot;South Boston&quot;</bucket>
              <bucket>&quot;Mattapan&quot;</bucket>
              <bucket>&quot;Dorchester&quot;</bucket>
              <bucket>&quot;Central&quot;</bucket>
              <bucket>&quot;East Boston&quot;</bucket>
              <bucket>&quot;Charlestown&quot;</bucket>
              <bucket>&quot;Allston/Brighton&quot;</bucket>
              <bucket>&quot;Back Bay/Beacon Hill&quot;</bucket>
              <bucket>&quot;Roslindale&quot;</bucket>
              <bucket>&quot;Hyde Park&quot;</bucket>
              <bucket>&quot;Fenway/Kenmore&quot;</bucket>
              <bucket>&quot;West Roxbury&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[none:neighborhood:nk]' value='51' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]' value='-90' />
            <format attr='text-orientation' field='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[none:neighborhood:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wwugh11qqo7ko19b8gr9021ddg8].[Multiple Values]</rows>
        <cols total='true'>([federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names] / [federated.0wwugh11qqo7ko19b8gr9021ddg8].[none:neighborhood:nk])</cols>
      </table>
      <simple-id uuid='{D2E40040-FD04-4EE0-A562-DC1C49D6CB24}' />
    </worksheet>
    <worksheet name='IRH, 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Income Restricted Rental &amp; Ownership, 2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='income_restricted_22 (boston.income_restricted_22) (postgres)' name='federated.1pveoyc116gjhu152l1r30wh75id' />
          </datasources>
          <datasource-dependencies datasource='federated.1pveoyc116gjhu152l1r30wh75id'>
            <column caption='Income Restricted Ownership' datatype='integer' name='[income_restricted_ownership]' role='measure' type='quantitative' />
            <column caption='Income Restricted Rental' datatype='integer' name='[income_restricted_rental]' role='measure' type='quantitative' />
            <column-instance column='[income_restricted_ownership]' derivation='Sum' name='[sum:income_restricted_ownership:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income_restricted_rental]' derivation='Sum' name='[sum:income_restricted_rental:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pveoyc116gjhu152l1r30wh75id].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:income_restricted_rental:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:income_restricted_ownership:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pveoyc116gjhu152l1r30wh75id].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:income_restricted_rental:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pveoyc116gjhu152l1r30wh75id].[sum:income_restricted_ownership:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1pveoyc116gjhu152l1r30wh75id].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pveoyc116gjhu152l1r30wh75id].[Multiple Values]' field-type='quantitative' max='57251.25' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1pveoyc116gjhu152l1r30wh75id].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pveoyc116gjhu152l1r30wh75id].[:Measure Names]' />
              <text column='[federated.1pveoyc116gjhu152l1r30wh75id].[sum:income_restricted_ownership:qk]' />
              <text column='[federated.1pveoyc116gjhu152l1r30wh75id].[sum:income_restricted_rental:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='table' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pveoyc116gjhu152l1r30wh75id].[Multiple Values]</rows>
        <cols total='true'>[federated.1pveoyc116gjhu152l1r30wh75id].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C74DC31B-008D-4AD6-AE02-5AC4C35FA6A6}' />
    </worksheet>
    <worksheet name='IRH, 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Income Restricted Rental &amp; Ownership, 2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='income_restricted_18 (boston.income_restricted_18) (postgres)' name='federated.0wwugh11qqo7ko19b8gr9021ddg8' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwugh11qqo7ko19b8gr9021ddg8'>
            <column caption='Income Restricted Ownership' datatype='integer' name='[income_restricted_ownership]' role='measure' type='quantitative' />
            <column caption='Income Restricted Rental' datatype='integer' name='[income_restricted_rental]' role='measure' type='quantitative' />
            <column-instance column='[income_restricted_ownership]' derivation='Sum' name='[sum:income_restricted_ownership:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income_restricted_rental]' derivation='Sum' name='[sum:income_restricted_rental:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_rental:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_ownership:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_rental:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_ownership:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]' />
              <text column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_ownership:qk]' />
              <text column='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:income_restricted_rental:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wwugh11qqo7ko19b8gr9021ddg8].[Multiple Values]</rows>
        <cols total='true'>[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{4D51458B-65D7-4C98-BBC5-7DABE5049149}' />
    </worksheet>
    <worksheet name='Inventory vs. Homes Sold'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='8'>Inventory vs. Homes Sold, 01/01 2012-2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='join_pop_housing (boston.join_pop_housing) (postgres)' name='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d' />
          </datasources>
          <datasource-dependencies datasource='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d'>
            <column-instance column='[period_begin]' derivation='Attribute' name='[attr:period_begin:ok]' pivot='key' type='ordinal' />
            <column caption='Homes Sold' datatype='real' name='[homes_sold]' role='measure' type='quantitative' />
            <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
            <column caption='Period Begin' datatype='date' name='[period_begin]' role='dimension' type='ordinal' />
            <column-instance column='[homes_sold]' derivation='Sum' name='[sum:homes_sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:homes_sold:qk]' field-type='quantitative' max='3594.4560885608853' min='2000.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[attr:period_begin:ok]' />
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[yr:period_begin:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#0b4270' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:inventory:qk]</rows>
        <cols>[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:homes_sold:qk]</cols>
      </table>
      <simple-id uuid='{21F4FFDA-6C2A-4E82-81CA-4FEB343B672A}' />
    </worksheet>
    <worksheet name='Med Sale Construction &amp; Existing'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Sale Price, New Construction and Existing</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='redfin_construction_medsale (boston.redfin_construction_medsale) (postgres)' name='federated.0kzp9sz11ftqab13o6fs41hx3obo' />
          </datasources>
          <datasource-dependencies datasource='federated.0kzp9sz11ftqab13o6fs41hx3obo'>
            <column caption='Existing' datatype='real' datatype-customized='true' name='[existing]' role='dimension' type='ordinal' />
            <column caption='New Construction' datatype='real' datatype-customized='true' name='[new_construction]' role='dimension' type='ordinal' />
            <column-instance column='[timeframe]' derivation='None' name='[none:timeframe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[existing]' derivation='Sum' name='[sum:existing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_construction]' derivation='Sum' name='[sum:new_construction:qk]' pivot='key' type='quantitative' />
            <column caption='Timeframe' datatype='date' datatype-customized='true' name='[timeframe]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kzp9sz11ftqab13o6fs41hx3obo].[sum:new_construction:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kzp9sz11ftqab13o6fs41hx3obo].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzp9sz11ftqab13o6fs41hx3obo].[sum:existing:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kzp9sz11ftqab13o6fs41hx3obo].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kzp9sz11ftqab13o6fs41hx3obo].[sum:new_construction:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kzp9sz11ftqab13o6fs41hx3obo].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kzp9sz11ftqab13o6fs41hx3obo].[sum:existing:qk] + [federated.0kzp9sz11ftqab13o6fs41hx3obo].[sum:new_construction:qk])</rows>
        <cols>[federated.0kzp9sz11ftqab13o6fs41hx3obo].[none:timeframe:qk]</cols>
      </table>
      <simple-id uuid='{D43960B8-CB9E-419F-9394-A255F42DBDDD}' />
    </worksheet>
    <worksheet name='Openings and Construction'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name>, Seasonally Adjusted, 2000-2023]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employment_construction_nohousing (boston.employment_construction_nohousing) (postgres)' name='federated.1c6nvfh1k5shdl1gwk8k00lvk3k4' />
          </datasources>
          <datasource-dependencies datasource='federated.1c6nvfh1k5shdl1gwk8k00lvk3k4'>
            <column-instance column='[mass_openings_annual_sum]' derivation='Avg' name='[avg:mass_openings_annual_sum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[avg:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative' />
            <column caption='Mass Openings Annual Sum' datatype='real' name='[mass_openings_annual_sum]' role='measure' type='quantitative' />
            <column caption='New Private Housing Structures Auth By Building Permits' datatype='real' name='[new_private_housing_structures_auth_by_building_permits]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year_:ok]' />
              <groupfilter function='member' level='[none:year_:ok]' member='2000' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:mass_openings_annual_sum:qk]' scope='rows' value='Openings Annual Sum, Massachusetts' />
            <encoding attr='space' class='0' field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' value='340' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:mass_openings_annual_sum:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.8176796436309814' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:mass_openings_annual_sum:qk] + [federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk])</rows>
        <cols>[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]</cols>
      </table>
      <simple-id uuid='{973706D8-CF41-4500-86B6-C1492E09E863}' />
    </worksheet>
    <worksheet name='Population and Construction (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Rough Number of Households (Not Seasonally Adjusted) and Construction, Seasonally Adjusted, 2000-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employment_construction_nohousing (boston.employment_construction_nohousing) (postgres)' name='federated.1c6nvfh1k5shdl1gwk8k00lvk3k4' />
          </datasources>
          <datasource-dependencies datasource='federated.1c6nvfh1k5shdl1gwk8k00lvk3k4'>
            <column-instance column='[new_private_housing_structures_auth_by_building_permits]' derivation='Avg' name='[avg:new_private_housing_structures_auth_by_building_permits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rough_household_growth]' derivation='Avg' name='[avg:rough_household_growth:qk]' pivot='key' type='quantitative' />
            <column caption='New Private Housing Structures Auth By Building Permits' datatype='real' name='[new_private_housing_structures_auth_by_building_permits]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[rough_household_growth]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk]&quot;</bucket>
              <bucket>&quot;[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:rough_household_growth:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:rough_household_growth:qk]' scope='rows' value='Rough Number of Households' />
            <encoding attr='space' class='0' field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' value='360' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.1712706089019775' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:rough_household_growth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.99950277805328369' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:rough_household_growth:qk] + [federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[avg:new_private_housing_structures_auth_by_building_permits:qk])</rows>
        <cols>[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[none:year_:qk]</cols>
      </table>
      <simple-id uuid='{894181B2-30EB-44BA-AAC9-F0F68DBF362D}' />
    </worksheet>
    <worksheet name='bos_cam_newton_pop'>
      <table>
        <view>
          <datasources>
            <datasource caption='population (boston.population) (postgres)' name='federated.1lg9qvz0z3th3z1a5lf261cc85ov' />
          </datasources>
          <datasource-dependencies datasource='federated.1lg9qvz0z3th3z1a5lf261cc85ov'>
            <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_]' derivation='Year' name='[yr:date_:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lg9qvz0z3th3z1a5lf261cc85ov].[sum:population:qk]' field-type='quantitative' max='5184.8108423248877' min='4000.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1lg9qvz0z3th3z1a5lf261cc85ov].[sum:population:qk]' scope='rows' value='Population (Thousands) (Not Seasonally Adjusted), Boston-Cambridge-Newton' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1lg9qvz0z3th3z1a5lf261cc85ov].[yr:date_:ok]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#7f0d2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lg9qvz0z3th3z1a5lf261cc85ov].[sum:population:qk]</rows>
        <cols>[federated.1lg9qvz0z3th3z1a5lf261cc85ov].[yr:date_:ok]</cols>
      </table>
      <simple-id uuid='{12D1BD84-E6D1-4E05-A73E-E441227A05D2}' />
    </worksheet>
    <worksheet name='bos_vacancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Boston, Occupied and Vacant Housing Percentages</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancy (boston.vacancy) (postgres)' name='federated.02ccs1q01w6aw018luhv60oik3bq' />
          </datasources>
          <datasource-dependencies datasource='federated.02ccs1q01w6aw018luhv60oik3bq'>
            <column caption='Boston 2016 21 Percent' datatype='real' name='[boston_2016_21_percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
            <column-instance column='[label_grouping]' derivation='None' name='[none:label_grouping:nk]' pivot='key' type='nominal' />
            <column-instance column='[boston_2016_21_percent]' derivation='Sum' name='[sum:boston_2016_21_percent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Homeowner vacancy rate&quot;' />
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Rental vacancy rate&quot;' />
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;    Total housing units&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;    Total housing units&quot;</bucket>
              <bucket>&quot;        Occupied housing units&quot;</bucket>
              <bucket>&quot;        Vacant housing units&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='168' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk]' value='272' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:boston_2016_21_percent:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:boston_2016_21_percent:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#ecd4d4</color>
                <color>#e8b9b9</color>
                <color>#e39f9f</color>
                <color>#df8585</color>
                <color>#da6d6d</color>
                <color>#d65555</color>
                <color>#d13e3e</color>
                <color>#cd2828</color>
                <color>#c81414</color>
                <color>#c40000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:boston_2016_21_percent:qk]' />
              <text column='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:boston_2016_21_percent:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{91FEA0A7-54BF-40B2-9246-4FEB48E6A812}' />
    </worksheet>
    <worksheet name='boston owner vs renter occ'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Boston % Owner-Occupied and Renter-Occupied, 5-Year Estimate 2016-2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='no_each (boston.no_each) (postgres)' name='federated.0b2seqf0y9yx4516oxqpk1bt9n6s' />
          </datasources>
          <datasource-dependencies datasource='federated.0b2seqf0y9yx4516oxqpk1bt9n6s'>
            <column caption='Boston 2016 21 Percent' datatype='real' name='[boston_2016_21_percent]' role='measure' type='quantitative' />
            <column datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
            <column-instance column='[label_grouping]' derivation='None' name='[none:label_grouping:nk]' pivot='key' type='nominal' />
            <column-instance column='[boston_2016_21_percent]' derivation='Sum' name='[sum:boston_2016_21_percent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b2seqf0y9yx4516oxqpk1bt9n6s].[none:label_grouping:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;    Occupied housing units&quot;' />
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;    Total housing units&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0b2seqf0y9yx4516oxqpk1bt9n6s].[none:label_grouping:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;        Renter-occupied&quot;</bucket>
              <bucket>&quot;        Owner-occupied&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='172' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0b2seqf0y9yx4516oxqpk1bt9n6s].[none:label_grouping:nk]' value='268' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0b2seqf0y9yx4516oxqpk1bt9n6s].[sum:boston_2016_21_percent:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0b2seqf0y9yx4516oxqpk1bt9n6s].[sum:boston_2016_21_percent:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0b2seqf0y9yx4516oxqpk1bt9n6s].[sum:boston_2016_21_percent:qk]' />
              <text column='[federated.0b2seqf0y9yx4516oxqpk1bt9n6s].[sum:boston_2016_21_percent:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b2seqf0y9yx4516oxqpk1bt9n6s].[none:label_grouping:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5E884BBA-E9B3-41E6-AF40-A0E516FF9AF7}' />
    </worksheet>
    <worksheet name='days_on_mkt'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Days on the Market, Metro Regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <mapsources>
            <mapsource name='' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column caption='Median Dom' datatype='real' name='[median_dom]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[median_dom]' derivation='Sum' name='[sum:median_dom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' direction='ASC'>
            <dictionary>
              <bucket>(&quot;Boston\, MA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Austin\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Charlotte\, NC metropolitan area&quot;)</bucket>
              <bucket>(&quot;Chicago\, IL metropolitan area&quot;)</bucket>
              <bucket>(&quot;Columbus\, OH metropolitan area&quot;)</bucket>
              <bucket>(&quot;Dallas\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Denver\, CO metropolitan area&quot;)</bucket>
              <bucket>(&quot;El Paso\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Fort Worth\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Houston\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Indianapolis\, IN metropolitan area&quot;)</bucket>
              <bucket>(&quot;Jacksonville\, FL metropolitan area&quot;)</bucket>
              <bucket>(&quot;Las Vegas\, NV metropolitan area&quot;)</bucket>
              <bucket>(&quot;Los Angeles\, CA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Nashville\, TN metropolitan area&quot;)</bucket>
              <bucket>(&quot;New York\, NY metropolitan area&quot;)</bucket>
              <bucket>(&quot;Oklahoma City\, OK metropolitan area&quot;)</bucket>
              <bucket>(&quot;Philadelphia\, PA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Phoenix\, AZ metropolitan area&quot;)</bucket>
              <bucket>(&quot;San Antonio\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;San Diego\, CA metropolitan area&quot;)</bucket>
              <bucket>(&quot;San Francisco\, CA metropolitan area&quot;)</bucket>
              <bucket>(&quot;San Jose\, CA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Seattle\, WA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Washington\, DC metropolitan area&quot;)</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' value='80' />
            <format attr='title' class='0' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' scope='rows' value='Median Days on the Market' />
            <format attr='tick-color' scope='cols' value='#666666' />
            <format attr='stroke-color' scope='cols' value='#666666' />
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='tick-color' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='116' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#666666' />
            <format attr='band-color' scope='cols' value='#555555' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#666666' />
            <format attr='band-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#6666664b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' value='160' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' />
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' paired-distribution-id='refline2' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' z-order='2' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline4' label-type='none' paired-distribution-id='refline5' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' z-order='3' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='automatic' paired-distribution-id='refline4' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{C64D2864-EBEA-4E61-8D11-8BB10FC78CF5}' />
    </worksheet>
    <worksheet name='dom vs list price, pop'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Days on Market vs. Population (Boston-Cambridge-Newton), Median List Price, Metro Boston</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='join_pop_housing (boston.join_pop_housing) (postgres)' name='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d' />
          </datasources>
          <datasource-dependencies datasource='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d'>
            <column-instance column='[region]' derivation='Attribute' name='[attr:region:nk]' pivot='key' type='nominal' />
            <column caption='Median Dom' datatype='real' name='[median_dom]' role='measure' type='quantitative' />
            <column caption='Median List Price' datatype='real' name='[median_list_price]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[median_dom]' derivation='Sum' name='[sum:median_dom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_list_price]' derivation='Sum' name='[sum:median_list_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]' field-type='quantitative' max='5280.9306991053027' min='4300.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]' field-type='quantitative' max='676147.5' min='250000.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]' scope='cols' value='Population (Thousands) (Not Seasonally Adjusted), Boston-Cambridge-Newton' />
            <format attr='title' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_dom:qk]' scope='rows' value='Median Days on the Market' />
            <format attr='tick-color' scope='rows' value='#898989' />
            <format attr='tick-color' scope='cols' value='#898989' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_dom:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:year_:qk]' />
              <tooltip column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[attr:region:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#7f0d2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:year_:qk]' />
              <tooltip column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[attr:region:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-color' value='#7f0d2b' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#e6e6e667' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:year_:qk]' />
              <tooltip column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[attr:region:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4612706899642944' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#7f0d2b' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#e6e6e667' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_dom:qk]</rows>
        <cols>([federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk] + [federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk])</cols>
      </table>
      <simple-id uuid='{86F2389E-50F7-4B40-B85B-54F7702B0592}' />
    </worksheet>
    <worksheet name='emp_openings_ma/all'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>New Employment Openings (Average Rate) by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_openings (boston.avg_openings) (postgres)' name='federated.0jmnc9m1dhtstc18jx0o910k8d9v' />
          </datasources>
          <datasource-dependencies datasource='federated.0jmnc9m1dhtstc18jx0o910k8d9v'>
            <column caption='CA Average' datatype='real' name='[cal_average]' role='measure' type='quantitative' />
            <column caption='IL Average' datatype='real' name='[il_average]' role='measure' type='quantitative' />
            <column caption='MA Average' datatype='real' name='[ma_average]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:ok]' pivot='key' type='ordinal' />
            <column caption='NY Average' datatype='real' name='[ny_average]' role='measure' type='quantitative' />
            <column-instance column='[cal_average]' derivation='Sum' name='[sum:cal_average:qk]' pivot='key' type='quantitative' />
            <column-instance column='[il_average]' derivation='Sum' name='[sum:il_average:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ma_average]' derivation='Sum' name='[sum:ma_average:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ny_average]' derivation='Sum' name='[sum:ny_average:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tx_average]' derivation='Sum' name='[sum:tx_average:qk]' pivot='key' type='quantitative' />
            <column-instance column='[us_average]' derivation='Sum' name='[sum:us_average:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wa_average]' derivation='Sum' name='[sum:wa_average:qk]' pivot='key' type='quantitative' />
            <column caption='TX Average' datatype='real' name='[tx_average]' role='measure' type='quantitative' />
            <column caption='US Average' datatype='real' name='[us_average]' role='measure' type='quantitative' />
            <column caption='WA Average' datatype='real' name='[wa_average]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:ma_average:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:us_average:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:cal_average:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:il_average:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:ny_average:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:tx_average:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:wa_average:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:ma_average:qk]&quot;</bucket>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:us_average:qk]&quot;</bucket>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:tx_average:qk]&quot;</bucket>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:il_average:qk]&quot;</bucket>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:cal_average:qk]&quot;</bucket>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:wa_average:qk]&quot;</bucket>
              <bucket>&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:ny_average:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[none:year_:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year_:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:year_:ok]' member='2013' />
                <groupfilter function='member' level='[none:year_:ok]' member='2014' />
                <groupfilter function='member' level='[none:year_:ok]' member='2015' />
                <groupfilter function='member' level='[none:year_:ok]' member='2016' />
                <groupfilter function='member' level='[none:year_:ok]' member='2017' />
                <groupfilter function='member' level='[none:year_:ok]' member='2018' />
                <groupfilter function='member' level='[none:year_:ok]' member='2019' />
                <groupfilter function='member' level='[none:year_:ok]' member='2020' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]' value='false' />
            <format attr='font-size' field='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[none:year_:ok]' value='11' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]' />
              <text column='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.5382320880889893' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='pane' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[Multiple Values]</rows>
        <cols>([federated.0jmnc9m1dhtstc18jx0o910k8d9v].[none:year_:ok] / [federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{DCC4573D-330E-4AF7-AB82-C956B41B54F9}' />
    </worksheet>
    <worksheet name='emp_openings_ma/us'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>New Employment Openings (Average Rate), Massachusetts and US</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_openings (boston.avg_openings) (postgres)' name='federated.0jmnc9m1dhtstc18jx0o910k8d9v' />
          </datasources>
          <datasource-dependencies datasource='federated.0jmnc9m1dhtstc18jx0o910k8d9v'>
            <column caption='MA Average' datatype='real' name='[ma_average]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ma_average]' derivation='Sum' name='[sum:ma_average:qk]' pivot='key' type='quantitative' />
            <column-instance column='[us_average]' derivation='Sum' name='[sum:us_average:qk]' pivot='key' type='quantitative' />
            <column caption='US Average' datatype='real' name='[us_average]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:ma_average:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[sum:us_average:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[none:year_:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year_:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:year_:ok]' member='2013' />
                <groupfilter function='member' level='[none:year_:ok]' member='2014' />
                <groupfilter function='member' level='[none:year_:ok]' member='2015' />
                <groupfilter function='member' level='[none:year_:ok]' member='2016' />
                <groupfilter function='member' level='[none:year_:ok]' member='2017' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]' value='false' />
            <format attr='font-size' field='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[none:year_:ok]' value='11' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]' />
              <text column='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[Multiple Values]</rows>
        <cols>([federated.0jmnc9m1dhtstc18jx0o910k8d9v].[none:year_:ok] / [federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{BE7FCF62-C9B4-4949-A269-82D8F3B02576}' />
    </worksheet>
    <worksheet name='gr'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gross Rent, Boston and US 5-Year Estimate 2016-2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gross_rent (boston.gross_rent) (postgres)' name='federated.0fod11d0cmxddv15cv2uw0dbqdgs' />
          </datasources>
          <datasource-dependencies datasource='federated.0fod11d0cmxddv15cv2uw0dbqdgs'>
            <column caption='Boston 2016 21 Percent' datatype='real' name='[boston_2016_21_percent]' role='measure' type='quantitative' />
            <column caption='Label Grouping' datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
            <column-instance column='[label_grouping]' derivation='None' name='[none:label_grouping:nk]' pivot='key' type='nominal' />
            <column-instance column='[boston_2016_21_percent]' derivation='Sum' name='[sum:boston_2016_21_percent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[us_2016_21_percent]' derivation='Sum' name='[sum:us_2016_21_percent:qk]' pivot='key' type='quantitative' />
            <column caption='Us 2016 21 Percent' datatype='real' name='[us_2016_21_percent]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:boston_2016_21_percent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:us_2016_21_percent:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[none:label_grouping:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;    GR - Occupied units paying rent&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[none:label_grouping:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;        GR - Less than $500&quot;</bucket>
              <bucket>&quot;        GR - $500 to $999&quot;</bucket>
              <bucket>&quot;        GR - $1,000 to $1,499&quot;</bucket>
              <bucket>&quot;        GR - $1,500 to $1,999&quot;</bucket>
              <bucket>&quot;        GR - $2,000 to $2,499&quot;</bucket>
              <bucket>&quot;        GR - $2,500 to $2,999&quot;</bucket>
              <bucket>&quot;        GR - $3,000 or more&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:boston_2016_21_percent:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:us_2016_21_percent:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[none:label_grouping:nk]</column>
            <column>[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[:Measure Names]</column>
            <column>[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:boston_2016_21_percent:qk]</column>
            <column>[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[sum:us_2016_21_percent:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[:Measure Names]' value='84' />
            <format attr='width' field='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[none:label_grouping:nk]' value='85' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[none:label_grouping:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[Multiple Values]</rows>
        <cols>([federated.0fod11d0cmxddv15cv2uw0dbqdgs].[:Measure Names] / [federated.0fod11d0cmxddv15cv2uw0dbqdgs].[none:label_grouping:nk])</cols>
      </table>
      <simple-id uuid='{E00FE3A9-0512-45DF-969C-420DB26D6BE2}' />
    </worksheet>
    <worksheet name='grapi'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gross Rent as a Percentage of Household Income, Boston 2016-2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grapi (boston.grapi) (postgres)' name='federated.0k4ktit04nh92813cecnd0tsn37o' />
          </datasources>
          <datasource-dependencies datasource='federated.0k4ktit04nh92813cecnd0tsn37o'>
            <column caption='Boston 2016 21 Percent' datatype='real' name='[boston_2016_21_percent]' role='measure' type='quantitative' />
            <column caption='Label Grouping' datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
            <column-instance column='[label_grouping]' derivation='None' name='[none:label_grouping:nk]' pivot='key' type='nominal' />
            <column-instance column='[boston_2016_21_percent]' derivation='Sum' name='[sum:boston_2016_21_percent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k4ktit04nh92813cecnd0tsn37o].[none:label_grouping:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;    GRAPI - Occupied units paying rent (excluding units where GRAPI cannot be computed)&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0k4ktit04nh92813cecnd0tsn37o].[none:label_grouping:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;        GRAPI - Less than 15.0 percent&quot;</bucket>
              <bucket>&quot;        GRAPI - 15.0 to 19.9 percent&quot;</bucket>
              <bucket>&quot;        GRAPI - 20.0 to 24.9 percent&quot;</bucket>
              <bucket>&quot;        GRAPI - 25.0 to 29.9 percent&quot;</bucket>
              <bucket>&quot;        GRAPI - 30.0 to 34.9 percent&quot;</bucket>
              <bucket>&quot;        GRAPI - 35.0 percent or more&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0k4ktit04nh92813cecnd0tsn37o].[sum:boston_2016_21_percent:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0k4ktit04nh92813cecnd0tsn37o].[sum:boston_2016_21_percent:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0k4ktit04nh92813cecnd0tsn37o].[none:label_grouping:nk]' value='92' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0k4ktit04nh92813cecnd0tsn37o].[none:label_grouping:nk]' value='328' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k4ktit04nh92813cecnd0tsn37o].[none:label_grouping:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0k4ktit04nh92813cecnd0tsn37o].[none:label_grouping:nk]</rows>
        <cols>[federated.0k4ktit04nh92813cecnd0tsn37o].[sum:boston_2016_21_percent:qk]</cols>
      </table>
      <simple-id uuid='{79E7FF53-56F3-4662-9246-278EB46DB1EB}' />
    </worksheet>
    <worksheet name='growth rates'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Growth Rates, Median Sale Price and Annual Boston CPI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sale_cpi_join (boston.sale_cpi_join) (postgres)' name='federated.1tz0z5k0yisc5w15tms1a14xjwo1' />
          </datasources>
          <datasource-dependencies datasource='federated.1tz0z5k0yisc5w15tms1a14xjwo1'>
            <column caption='cpi_growth' datatype='real' name='[Calculation1 (copy)_1326873080117075970]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([annual]) - LOOKUP(SUM([annual]), -1)) / LOOKUP(SUM([annual]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Median_sale_price growth' datatype='real' name='[Calculation_1326873080115212289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([avg_price]) - LOOKUP(SUM([avg_price]), -1)) / LOOKUP(SUM([avg_price]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Annual CPI Avg - Boston' datatype='real' name='[annual]' role='measure' type='quantitative' />
            <column caption='Median Sale Price, Avg by Year - All Residential, Boston' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1 (copy)_1326873080117075970]' derivation='User' name='[usr:Calculation1 (copy)_1326873080117075970:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1326873080115212289]' derivation='User' name='[usr:Calculation_1326873080115212289:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]'>
            <groupfilter from='2013' function='range' level='[none:year_:ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]</column>
            <column>[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk]' value='84' />
            <format attr='width' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk]' value='84' />
            <encoding attr='space' class='0' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:qk]' field-type='quantitative' max='2023' min='2013' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]' value='86' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#d4d4d4' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk] + [federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk])</rows>
        <cols>[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{EEC47C01-8C0D-4ABE-8E33-BD1B7BA5148E}' />
    </worksheet>
    <worksheet name='growth rates (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Growth Rates, Median Sale Price and Annual Boston CPI (Housing Only)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sale_cpi_join (boston.sale_cpi_join) (postgres)' name='federated.1tz0z5k0yisc5w15tms1a14xjwo1' />
          </datasources>
          <datasource-dependencies datasource='federated.1tz0z5k0yisc5w15tms1a14xjwo1'>
            <column caption='cpi_growth' datatype='real' name='[Calculation1 (copy)_1326873080117075970]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([annual]) - LOOKUP(SUM([annual]), -1)) / LOOKUP(SUM([annual]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Median_sale_price growth' datatype='real' name='[Calculation_1326873080115212289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([avg_price]) - LOOKUP(SUM([avg_price]), -1)) / LOOKUP(SUM([avg_price]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Annual CPI Avg - Boston' datatype='real' name='[annual]' role='measure' type='quantitative' />
            <column caption='Median Sale Price, Avg by Year - All Residential, Boston' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
            <column caption='cpi_growth_housing' datatype='real' name='[cpi_growth (copy)_1326873080153210883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([housing_annual]) - LOOKUP(SUM([housing_annual]), -1)) / LOOKUP(SUM([housing_annual]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[housing_annual]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1 (copy)_1326873080117075970]' derivation='User' name='[usr:Calculation1 (copy)_1326873080117075970:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1326873080115212289]' derivation='User' name='[usr:Calculation_1326873080115212289:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[cpi_growth (copy)_1326873080153210883]' derivation='User' name='[usr:cpi_growth (copy)_1326873080153210883:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]'>
            <groupfilter from='2013' function='range' level='[none:year_:ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]</column>
            <column>[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk]' value='64' />
            <format attr='width' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation1 (copy)_1326873080117075970:qk]' value='148' />
            <encoding attr='space' class='0' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:qk]' field-type='quantitative' max='2023' min='2013' range-type='fixed' scope='cols' type='space' />
            <format attr='width' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:cpi_growth (copy)_1326873080153210883:qk]' value='64' />
            <encoding attr='space' class='0' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]' value='86' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#d4d4d4' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:cpi_growth (copy)_1326873080153210883:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:cpi_growth (copy)_1326873080153210883:qk] + [federated.1tz0z5k0yisc5w15tms1a14xjwo1].[usr:Calculation_1326873080115212289:qk])</rows>
        <cols>[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{1ECD24A7-1773-457E-B97D-D46FEFC7FB45}' />
    </worksheet>
    <worksheet name='homeowner vs renter vacancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vacancy Rates, Homeowner and Rental, 5-Year Estimates 2016-2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancy (boston.vacancy) (postgres)' name='federated.02ccs1q01w6aw018luhv60oik3bq' />
          </datasources>
          <datasource-dependencies datasource='federated.02ccs1q01w6aw018luhv60oik3bq'>
            <column caption='Boston 2016 21 Estimate' datatype='real' name='[boston_2016_21_estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
            <column-instance column='[label_grouping]' derivation='None' name='[none:label_grouping:nk]' pivot='key' type='nominal' />
            <column-instance column='[boston_2016_21_estimate]' derivation='Sum' name='[sum:boston_2016_21_estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[us_2016_21_estimate]' derivation='Sum' name='[sum:us_2016_21_estimate:qk]' pivot='key' type='quantitative' />
            <column caption='Us 2016 21 Estimate' datatype='real' name='[us_2016_21_estimate]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02ccs1q01w6aw018luhv60oik3bq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:boston_2016_21_estimate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:us_2016_21_estimate:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:label_grouping:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Homeowner vacancy rate&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Rental vacancy rate&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk]</column>
            <column>[federated.02ccs1q01w6aw018luhv60oik3bq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.02ccs1q01w6aw018luhv60oik3bq].[:Measure Names]' value='154' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02ccs1q01w6aw018luhv60oik3bq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02ccs1q01w6aw018luhv60oik3bq].[Multiple Values]</rows>
        <cols>([federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk] / [federated.02ccs1q01w6aw018luhv60oik3bq].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A0CC440E-0CE7-48EC-ACEB-B356474BBF7F}' />
    </worksheet>
    <worksheet name='income and sale price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Annual Pay (Suffolk County, MA) and Median Sale Price, Annual Average (Across Months)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='earnings_sale_join (boston.earnings_sale_join) (postgres)' name='federated.1ro1uyf1vcnn9o1fy3o900aal5hw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ro1uyf1vcnn9o1fy3o900aal5hw'>
            <column caption='Average Annual Income' datatype='real' name='[annual]' role='measure' type='quantitative' />
            <column caption='Median Sale Price - Boston, Averaged by Year' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[annual]' derivation='Sum' name='[sum:annual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_price]' derivation='Sum' name='[sum:avg_price:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year_]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:avg_price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:annual:qk]' value='76' />
            <format attr='width' field='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:avg_price:qk]' value='76' />
            <format attr='title' class='0' field='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[none:year_:qk]' scope='cols' value='Year' />
            <format attr='title' class='0' field='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:avg_price:qk]' scope='rows' value='Median Sale Price, metro Boston, Averaged by Year' />
            <format attr='title' class='0' field='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:annual:qk]' scope='rows' value='Average Annual Income (Suffolk County, MA)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='stroke-color' scope='rows' value='#e6e6e6' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:annual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[:Measure Names]' />
              <text column='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:annual:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:avg_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[:Measure Names]' />
              <text column='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:avg_price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:annual:qk] + [federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[sum:avg_price:qk])</rows>
        <cols>[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[none:year_:qk]</cols>
      </table>
      <simple-id uuid='{3F01D307-A8A6-4517-8945-E5C6890B2AC1}' />
    </worksheet>
    <worksheet name='inventory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Inventory, Metropolitan Regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' filter-group='10'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' direction='ASC'>
            <dictionary>
              <bucket>(&quot;Boston\, MA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Austin\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Charlotte\, NC metropolitan area&quot;)</bucket>
              <bucket>(&quot;Chicago\, IL metropolitan area&quot;)</bucket>
              <bucket>(&quot;Columbus\, OH metropolitan area&quot;)</bucket>
              <bucket>(&quot;Dallas\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Denver\, CO metropolitan area&quot;)</bucket>
              <bucket>(&quot;El Paso\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Fort Worth\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Houston\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;Indianapolis\, IN metropolitan area&quot;)</bucket>
              <bucket>(&quot;Jacksonville\, FL metropolitan area&quot;)</bucket>
              <bucket>(&quot;Las Vegas\, NV metropolitan area&quot;)</bucket>
              <bucket>(&quot;Los Angeles\, CA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Nashville\, TN metropolitan area&quot;)</bucket>
              <bucket>(&quot;New York\, NY metropolitan area&quot;)</bucket>
              <bucket>(&quot;Oklahoma City\, OK metropolitan area&quot;)</bucket>
              <bucket>(&quot;Philadelphia\, PA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Phoenix\, AZ metropolitan area&quot;)</bucket>
              <bucket>(&quot;San Antonio\, TX metropolitan area&quot;)</bucket>
              <bucket>(&quot;San Diego\, CA metropolitan area&quot;)</bucket>
              <bucket>(&quot;San Francisco\, CA metropolitan area&quot;)</bucket>
              <bucket>(&quot;San Jose\, CA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Seattle\, WA metropolitan area&quot;)</bucket>
              <bucket>(&quot;Washington\, DC metropolitan area&quot;)</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' value='#898989' />
            <format attr='tick-color' value='#898989' />
            <format attr='stroke-color' scope='rows' value='#e6e6e6' />
            <format attr='tick-color' scope='rows' value='#e6e6e6' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='115' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline3' value='#2a5b884b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#898989' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' />
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline4' label-type='none' paired-distribution-id='refline5' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='automatic' paired-distribution-id='refline4' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' z-order='2' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline6' label-type='none' paired-distribution-id='refline7' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' z-order='3' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' enable-instant-analytics='true' formula='median' id='refline7' label-type='automatic' paired-distribution-id='refline6' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{3E5FAFF0-B483-454B-A9E6-89D4F9BC5ADC}' />
    </worksheet>
    <worksheet name='inventory vs population, listprice'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Inventory vs. Population (Boston-Cambridge-Newton) and List Price, Boston Metropolitan Region 2012-2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='join_pop_housing (boston.join_pop_housing) (postgres)' name='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d' />
          </datasources>
          <datasource-dependencies datasource='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d'>
            <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
            <column caption='Median List Price' datatype='real' name='[median_list_price]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_list_price]' derivation='Sum' name='[sum:median_list_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]' field-type='quantitative' max='5209.9866800508253' min='4500.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]' field-type='quantitative' max='676163.7102922491' min='250000.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]' scope='cols' value='Population (Thousands) (Not Seasonally Adjusted),  Boston-Cambridge-Newton' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:inventory:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:year_:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#900714' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:year_:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5492265224456787' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#900714' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#e6e6e667' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:year_:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5492265224456787' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#900714' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#e6e6e667' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:inventory:qk]</rows>
        <cols>([federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk] + [federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk])</cols>
      </table>
      <simple-id uuid='{8D750A2F-EB60-4BA0-B186-52A52CE51FAA}' />
    </worksheet>
    <worksheet name='mass_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Percent Change in Population, 2021-2022, for Massachusetts cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mass_popchange (boston.mass_popchange) (postgres)' name='federated.1hzc58j0prpowb1ez06dc1kj2fvx' />
          </datasources>
          <datasource-dependencies datasource='federated.1hzc58j0prpowb1ez06dc1kj2fvx'>
            <column caption='Calculation1' datatype='string' name='[Calculation_1328280452873105410]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [city] = &quot;Boston&quot; THEN &quot;&lt;b&gt;&quot; + [city] + &quot;&lt;/b&gt;&quot; ELSE [city] END' />
            </column>
            <column caption='Change' datatype='real' name='[change]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Calculation_1328280452873105410]' derivation='None' name='[none:Calculation_1328280452873105410:nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Percent Change' datatype='real' name='[percent_change]' role='measure' type='quantitative' />
            <column-instance column='[change]' derivation='Sum' name='[sum:change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_change]' derivation='Sum' name='[sum:percent_change:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[none:city:nk]' direction='ASC' using='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[sum:percent_change:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[sum:percent_change:qk]' field-type='quantitative' max='5.5' min='-2.0' range-type='fixed' scope='cols' type='space' />
            <format attr='stroke-color' scope='rows' value='#333333' />
            <format attr='tick-color' scope='rows' value='#333333' />
            <format attr='stroke-color' scope='cols' value='#555555' />
            <format attr='tick-color' scope='cols' value='#333333' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[none:city:nk]' value='31' />
            <format attr='height' field='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[none:city:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-color' data-class='total' value='#666666' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[none:city:nk]' value='true' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-color' data-class='total' value='#666666' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#b4b4b4' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='stroke-color' scope='rows' value='#1b1b1b4b' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#5555554b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[none:city:nk]' />
              <lod column='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[sum:change:qk]' />
              <lod column='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[none:Calculation_1328280452873105410:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-range-field' value='[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[none:city:nk]' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[none:city:nk]</rows>
        <cols>[federated.1hzc58j0prpowb1ez06dc1kj2fvx].[sum:percent_change:qk]</cols>
      </table>
      <simple-id uuid='{86B48060-53EE-4585-88D5-4BC90E8944D8}' />
    </worksheet>
    <worksheet name='med_list_price'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Median List Price, 2021-2023, Annual Average (Across Months)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[median_list_price]' derivation='Avg' name='[avg:median_list_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column caption='Median List Price' datatype='real' name='[median_list_price]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' filter-group='6'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2017' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2018' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2019' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2020' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' direction='DESC' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_list_price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:region:nk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline3' value='#2a5b884b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' value='High Population Set' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] / [federated.1nol2rz0mh7ps41bweycg0387zpf].[none:region:nk])</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_list_price:qk]</cols>
      </table>
      <simple-id uuid='{A7D3E37C-FB3D-4486-B1C5-2621DC9D6AB8}' />
    </worksheet>
    <worksheet name='med_sale_price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Sale Price - Cluster Analysis, Metro Regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column auto-hidden='true' caption='Clusters (2)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:3]' parent-model='[AnalyticModel:{0a95e730-a73c-4b4c-af3a-5536d5904aa3}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:3]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[median_sale_price]' derivation='Sum' name='[sum:median_sale_price:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:3:ok]' palette='blue_10_0' type='palette'>
                  <map to='#2a5783'>
                    <bucket>7</bucket>
                  </map>
                  <map to='#2a5783'>
                    <bucket>9</bucket>
                  </map>
                  <map to='#2a5783'>
                    <bucket>22</bucket>
                  </map>
                  <map to='#300561'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#305d89'>
                    <bucket>21</bucket>
                  </map>
                  <map to='#305d8a'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#366390'>
                    <bucket>20</bucket>
                  </map>
                  <map to='#396794'>
                    <bucket>8</bucket>
                  </map>
                  <map to='#3b6996'>
                    <bucket>19</bucket>
                  </map>
                  <map to='#406e9c'>
                    <bucket>18</bucket>
                  </map>
                  <map to='#4574a2'>
                    <bucket>17</bucket>
                  </map>
                  <map to='#4878a6'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#4a7ba9'>
                    <bucket>16</bucket>
                  </map>
                  <map to='#5081ae'>
                    <bucket>15</bucket>
                  </map>
                  <map to='#5687b3'>
                    <bucket>14</bucket>
                  </map>
                  <map to='#5b8cb8'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#5d8eb9'>
                    <bucket>13</bucket>
                  </map>
                  <map to='#6394be'>
                    <bucket>12</bucket>
                  </map>
                  <map to='#6a9bc3'>
                    <bucket>11</bucket>
                  </map>
                  <map to='#71a2c8'>
                    <bucket>10</bucket>
                  </map>
                  <map to='#80b0d5'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#a5cfe9'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#b9ddf1'>
                    <bucket>5</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' filter-group='6'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]'>
            <groupfilter function='level-members' level='[none:AdhocCluster:3:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]' direction='ASC'>
            <dictionary>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>7</bucket>
              <bucket>8</bucket>
              <bucket>9</bucket>
              <bucket>10</bucket>
              <bucket>11</bucket>
              <bucket>12</bucket>
              <bucket>13</bucket>
              <bucket>14</bucket>
              <bucket>15</bucket>
              <bucket>16</bucket>
              <bucket>17</bucket>
              <bucket>18</bucket>
              <bucket>19</bucket>
              <bucket>20</bucket>
              <bucket>21</bucket>
              <bucket>22</bucket>
              <bucket>23</bucket>
              <bucket>24</bucket>
              <bucket>25</bucket>
              <bucket>26</bucket>
              <bucket>27</bucket>
              <bucket>28</bucket>
              <bucket>29</bucket>
              <bucket>30</bucket>
              <bucket>31</bucket>
              <bucket>32</bucket>
              <bucket>33</bucket>
              <bucket>34</bucket>
              <bucket>35</bucket>
              <bucket>36</bucket>
              <bucket>37</bucket>
              <bucket>38</bucket>
              <bucket>39</bucket>
              <bucket>40</bucket>
              <bucket>41</bucket>
              <bucket>42</bucket>
              <bucket>43</bucket>
              <bucket>44</bucket>
              <bucket>45</bucket>
              <bucket>46</bucket>
              <bucket>47</bucket>
              <bucket>48</bucket>
              <bucket>49</bucket>
              <bucket>50</bucket>
              <bucket>-1</bucket>
              <bucket>0</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='115' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline3' value='#2a5b884b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]' value='Clusters - Median Sale Price' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' value='High Population Set' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
              <lod column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' />
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline0' label-type='none' paired-distribution-id='refline1' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' paired-distribution-id='refline0' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' z-order='2' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline2' label-type='none' paired-distribution-id='refline3' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' z-order='3' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' paired-distribution-id='refline2' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' z-order='4' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline4' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' z-order='5' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' enable-instant-analytics='true' formula='median' id='refline5' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' z-order='6' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{3AF8EB81-C4E2-4CFF-8391-13C0458BF0D1}' />
    </worksheet>
    <worksheet name='med_sale_price (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Sale Price, 2021-2023, Annual Average (Across Months)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[median_sale_price]' derivation='Avg' name='[avg:median_sale_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' filter-group='6'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2017' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2018' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2019' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2020' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' direction='DESC' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_sale_price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline3' value='#2a5b884b' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' value='High Population Set' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_sale_price:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_sale_price:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_sale_price:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_sale_price:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] / [federated.1nol2rz0mh7ps41bweycg0387zpf].[none:region:nk])</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_sale_price:qk]</cols>
      </table>
      <simple-id uuid='{C10CE972-E732-4454-A942-9222DAB6633E}' />
    </worksheet>
    <worksheet name='mig_top10'>
      <table>
        <view>
          <datasources>
            <datasource caption='migration_boston (boston.migration_boston) (postgres)' name='federated.1wuxdmv1eajlf01ey74fs00bzs9g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wuxdmv1eajlf01ey74fs00bzs9g'>
            <column caption='Calculation1' datatype='boolean' name='[Calculation_1328280451439955968]' role='measure' type='nominal'>
              <calculation class='tableau' formula='index()&lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
            <column caption='Dest Percent Leavers' datatype='real' name='[dest_percent_leavers]' role='measure' type='quantitative' />
            <column caption='Destination Display' datatype='string' name='[destination_display]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Albany, NY&quot;' value='&quot;Albany&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[destination_display]' derivation='None' name='[none:destination_display:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_percent_leavers]' derivation='Sum' name='[sum:dest_percent_leavers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1328280451439955968]' derivation='User' name='[usr:Calculation_1328280451439955968:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date_]' derivation='Year' name='[yr:date_:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[usr:Calculation_1328280451439955968:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1328280451439955968:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[yr:date_:ok]'>
            <groupfilter function='member' level='[yr:date_:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:destination_display:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:dest_percent_leavers:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[yr:date_:ok]</column>
            <column>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[usr:Calculation_1328280451439955968:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:dest_percent_leavers:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:destination_display:nk]' value='25' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:dest_percent_leavers:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#900714' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:destination_display:nk]</rows>
        <cols>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:dest_percent_leavers:qk]</cols>
      </table>
      <simple-id uuid='{AC93FDD8-6534-4F41-85E6-4EA5AC8B9BF4}' />
    </worksheet>
    <worksheet name='migration_map'>
      <table>
        <view>
          <datasources>
            <datasource caption='migration_boston (boston.migration_boston) (postgres)' name='federated.1wuxdmv1eajlf01ey74fs00bzs9g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wuxdmv1eajlf01ey74fs00bzs9g'>
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Boise City&quot;' value='&quot;Boise City&quot;' />
                <semantic-value key='&quot;Urban Honolulu&quot;' value='&quot;Honolulu&quot;' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date_]' role='dimension' type='ordinal' />
            <column caption='Dest Percent Leavers' datatype='real' name='[dest_percent_leavers]' role='measure' type='quantitative' />
            <column caption='Destination State' datatype='string' name='[destination_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[destination_state]' derivation='None' name='[none:destination_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[dest_percent_leavers]' derivation='Sum' name='[sum:dest_percent_leavers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_]' derivation='Year' name='[yr:date_:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[yr:date_:ok]'>
            <groupfilter function='member' level='[yr:date_:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[yr:date_:ok]</column>
            <column>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[Latitude (generated)]</column>
            <column>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[Longitude (generated)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[Longitude (generated)]' field-type='quantitative' max='-7005684.7729868433' min='-11199589.707102899' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[Latitude (generated)]' field-type='quantitative' max='5761885.9470955608' min='2899673.0474560894' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:dest_percent_leavers:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5ced1</color>
                <color>#d9aeb4</color>
                <color>#cd9199</color>
                <color>#c1757f</color>
                <color>#b55c68</color>
                <color>#a94653</color>
                <color>#9d3140</color>
                <color>#911f2f</color>
                <color>#851020</color>
                <color>#790313</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:city:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:dest_percent_leavers:qk]' />
              <size column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:dest_percent_leavers:qk]' />
              <lod column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:city:nk]' />
              <lod column='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:destination_state:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontsize='11'>City:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:city:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='11'>Destination State:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[none:destination_state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='11'>Dest Percent Leavers:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[sum:dest_percent_leavers:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3513259887695312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[Latitude (generated)]</rows>
        <cols>[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{206A07D0-C75A-4D7F-BA73-F9B1919B32BC}' />
    </worksheet>
    <worksheet name='mos'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Months of Supply, Metropolitan Regions
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[months_of_supply]' derivation='Sum' name='[sum:months_of_supply:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' filter-group='10'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' value='#555555' />
            <format attr='tick-color' value='#555555' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='115' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline3' value='#2a5b884b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' />
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline10' label-type='none' paired-distribution-id='refline11' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' z-order='3' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' enable-instant-analytics='true' formula='median' id='refline11' label-type='automatic' paired-distribution-id='refline10' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' z-order='4' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline8' label-type='none' paired-distribution-id='refline9' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' enable-instant-analytics='true' formula='average' id='refline9' label-type='automatic' paired-distribution-id='refline8' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.087458610534668' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{E86E4984-F8C8-42D1-88C0-46890EBDACFE}' />
    </worksheet>
    <worksheet name='mos (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Months of Supply, Metropolitan Regions</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[period_begin]' derivation='Quarter' name='[qr:period_begin:ok]' pivot='key' type='ordinal' />
            <column-instance column='[months_of_supply]' derivation='Sum' name='[sum:months_of_supply:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>false</bucket>
              <bucket>true</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter from='2012' function='range' level='[yr:period_begin:ok]' to='2021' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' value='190' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#555555' />
            <format attr='tick-color' value='#555555' />
            <format attr='stroke-color' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' value='26' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' value='false' />
            <format attr='text-orientation' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' value='-90' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[qr:period_begin:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline3' value='#2a5b884b' />
            <format attr='stroke-color' id='refline1' value='#ffffff4b' />
            <format attr='stroke-size' id='refline1' value='5' />
            <format attr='background-color' id='refline1' value='#fffffff4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#555555' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' value='Months of Supply Color Legend' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline0' label-type='none' paired-distribution-id='refline1' probability='95' scope='per-pane' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' paired-distribution-id='refline0' probability='95' scope='per-pane' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run>High Population Set:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]>]]></run>
                <run>Æ&#10;</run>
                <run>Quarter of Period Begin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[qr:period_begin:ok]>]]></run>
                <run>Æ&#10;</run>
                <run>Year of Period Begin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]>]]></run>
                <run>Æ&#10;</run>
                <run>Months Of Supply:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:months_of_supply:qk]</rows>
        <cols>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] / ([federated.1nol2rz0mh7ps41bweycg0387zpf].[qr:period_begin:ok] / [federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]))</cols>
      </table>
      <simple-id uuid='{CCEAEE66-6106-41F0-90A4-2809C0212D2B}' />
    </worksheet>
    <worksheet name='mos (5)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Days on the Market, Metro Regions 2022, Annual Average
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[median_dom]' derivation='Avg' name='[avg:median_dom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column caption='Median Dom' datatype='real' name='[median_dom]' role='measure' type='quantitative' />
            <column caption='New Listings' datatype='real' name='[new_listings]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[median_dom]' derivation='Sum' name='[sum:median_dom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_listings]' derivation='Sum' name='[sum:new_listings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:new_listings:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2017' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2018' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2019' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2020' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2021' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2023' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' member-value='2022' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:new_listings:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' value='#555555' />
            <format attr='tick-color' value='#555555' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='194' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_dom:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline3' value='#2a5b884b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_dom:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline2' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_dom:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_dom:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_dom:qk]' z-order='2' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]</rows>
        <cols>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] * [federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:median_dom:qk])</cols>
      </table>
      <simple-id uuid='{4AF2DDB1-394A-46F0-856E-D55C428A97FC}' />
    </worksheet>
    <worksheet name='mos (7)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Sold Above List Price, 2022, Annual Average (Across Months)</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[sold_above_list]' derivation='Avg' name='[avg:sold_above_list:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column caption='New Listings' datatype='real' name='[new_listings]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='measure' type='quantitative' />
            <column-instance column='[new_listings]' derivation='Sum' name='[sum:new_listings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:new_listings:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2017' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2018' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2019' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2020' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2021' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2023' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' member-value='2022' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:new_listings:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' value='#555555' />
            <format attr='tick-color' value='#555555' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='194' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline3' value='#2a5b884b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Parent Metro Region:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run>Year of Period Begin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]>]]></run>
                <run>Æ&#10;</run>
                <run>Avg. Sold Above List:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]</rows>
        <cols>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] * [federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk])</cols>
      </table>
      <simple-id uuid='{E63043D6-6AD0-40A6-ACBB-317F007043C2}' />
    </worksheet>
    <worksheet name='mos vs population, listprice'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Months of Supply vs. Population (Boston-Cambridge-Newton) and List Price, Boston Metropolitan Region 2012-2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='join_pop_housing (boston.join_pop_housing) (postgres)' name='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d' />
          </datasources>
          <datasource-dependencies datasource='federated.1ro5k2y1tdzq811d8ru4m1vs7g7d'>
            <column-instance column='[property_type]' derivation='Attribute' name='[attr:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='Attribute' name='[attr:region:nk]' pivot='key' type='nominal' />
            <column caption='Median List Price' datatype='real' name='[median_list_price]' role='measure' type='quantitative' />
            <column caption='Months Of Supply' datatype='real' name='[months_of_supply]' role='measure' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[median_list_price]' derivation='Sum' name='[sum:median_list_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[months_of_supply]' derivation='Sum' name='[sum:months_of_supply:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:property_type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:property_type:nk]' />
              <groupfilter function='member' level='[none:property_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:property_type:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]' field-type='quantitative' max='5209.9866800508253' min='4500.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]' field-type='quantitative' max='676163.7102922491' min='250000.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]' scope='cols' value='Population (Thousands) (Not Seasonally Adjusted),  Boston-Cambridge-Newton' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:months_of_supply:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:year_:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#900714' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[attr:property_type:nk]' />
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:year_:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5272375345230103' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#900714' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#e6e6e667' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[attr:region:nk]' />
              <text column='[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[none:year_:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5272375345230103' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#900714' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#e6e6e667' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:months_of_supply:qk]</rows>
        <cols>([federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:population:qk] + [federated.1ro5k2y1tdzq811d8ru4m1vs7g7d].[sum:median_list_price:qk])</cols>
      </table>
      <simple-id uuid='{A08CB2CB-66EE-42F7-A5D9-CF3671901BEB}' />
    </worksheet>
    <worksheet name='new_listings'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sum of New Listings by Year, Boston 2012-2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column caption='New Listings' datatype='real' name='[new_listings]' role='dimension' type='ordinal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column-instance column='[new_listings]' derivation='Sum' name='[sum:new_listings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year-Trunc' name='[tyr:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='member' level='[yr:period_begin:ok]' member='2023' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[tyr:period_begin:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:new_listings:qk]' field-type='quantitative' max='1234703.7537487708' min='400000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#b4b4b4' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' value='true' />
            <format attr='display' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[tyr:period_begin:qk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:new_listings:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:new_listings:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline6' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:new_listings:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:new_listings:qk]' enable-instant-analytics='true' formula='median' id='refline7' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:new_listings:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9944751262664795' />
                <format attr='mark-color' value='#900714' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:new_listings:qk]</rows>
        <cols>([federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok] * [federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[tyr:period_begin:qk])</cols>
      </table>
      <simple-id uuid='{6CCD793F-D02C-44C1-9BC9-6C78C66D82C4}' />
    </worksheet>
    <worksheet name='new_listings (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sum of New Listings by Year, Boston 2015, 2018-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
          </datasources>
          <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
            <column caption='New Listings' datatype='real' name='[new_listings]' role='dimension' type='ordinal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column-instance column='[period_begin]' derivation='Quarter' name='[qr:period_begin:ok]' pivot='key' type='ordinal' />
            <column-instance column='[new_listings]' derivation='Sum' name='[sum:new_listings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Quarter-Trunc' name='[tqr:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2017' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[tqr:period_begin:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[qr:period_begin:ok]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#b4b4b4' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok]' value='true' />
            <format attr='display' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[tqr:period_begin:qk]' value='false' />
            <format attr='display' field='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[qr:period_begin:ok]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[qr:period_begin:ok]' />
              <text column='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:new_listings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9944751262664795' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#900714' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[sum:new_listings:qk]</rows>
        <cols>([federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[yr:period_begin:ok] * [federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[tqr:period_begin:qk])</cols>
      </table>
      <simple-id uuid='{618F94A9-619B-405A-A5EC-1215C39A2AA1}' />
    </worksheet>
    <worksheet name='permits'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Construction Permits for every 10,000 People with 90-Day Durations, Boston Metro Region - Cluster Analysis, 2011-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='redfin_permits (boston.redfin_permits) (postgres)' name='federated.0gpq7nu00xltvb1dmmz7j0fw3gdu' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpq7nu00xltvb1dmmz7j0fw3gdu'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{8b22ff94-b6d1-4670-a692-5ac46d0171cd}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Month Of Period End' datatype='date' datatype-customized='true' name='[month_of_period_end]' role='dimension' type='ordinal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month_of_period_end]' derivation='None' name='[none:month_of_period_end:qk]' pivot='key' type='quantitative' />
            <column caption='Permits Per 10000 Ppl' datatype='real' datatype-customized='true' name='[permits_per_10000_ppl]' role='dimension' type='ordinal' />
            <column-instance column='[month_of_period_end]' derivation='Quarter' name='[qr:month_of_period_end:ok]' pivot='key' type='ordinal' />
            <column-instance column='[permits_per_10000_ppl]' derivation='Sum' name='[sum:permits_per_10000_ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month_of_period_end]' derivation='Year' name='[yr:month_of_period_end:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#3d6a98'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#8074a8'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#ae123a'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>7</bucket>
                  </map>
                  <map to='#c46487'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#ddb5d5'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#f498b6'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' scope='rows' value='Sum of Permits Per 10,000 People' />
            <format attr='display' class='0' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:month_of_period_end:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[qr:month_of_period_end:ok]' value='27' />
            <format attr='width' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:month_of_period_end:qk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[qr:month_of_period_end:ok]' value='false' />
            <format attr='display' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:month_of_period_end:qk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:AdhocCluster:1:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' z-order='1' />
            <reference-line axis-column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]</rows>
        <cols>([federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[yr:month_of_period_end:ok] * [federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:month_of_period_end:qk])</cols>
      </table>
      <simple-id uuid='{93BA27EB-D398-493F-85D8-CC8ECA2801FA}' />
    </worksheet>
    <worksheet name='permits (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Construction Permits for every 10,000 People with 90-Day Durations, Boston Metro Region - Cluster Analysis, 2011-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='redfin_permits (boston.redfin_permits) (postgres)' name='federated.0gpq7nu00xltvb1dmmz7j0fw3gdu' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpq7nu00xltvb1dmmz7j0fw3gdu'>
            <column caption='Month Of Period End' datatype='date' datatype-customized='true' name='[month_of_period_end]' role='dimension' type='ordinal' />
            <column caption='Permits Per 10000 Ppl' datatype='real' datatype-customized='true' name='[permits_per_10000_ppl]' role='dimension' type='ordinal' />
            <column-instance column='[month_of_period_end]' derivation='Quarter' name='[qr:month_of_period_end:ok]' pivot='key' type='ordinal' />
            <column-instance column='[permits_per_10000_ppl]' derivation='Sum' name='[sum:permits_per_10000_ppl:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month_of_period_end]' derivation='Year-Trunc' name='[tyr:month_of_period_end:qk]' pivot='key' type='quantitative' />
            <column-instance column='[month_of_period_end]' derivation='Year' name='[yr:month_of_period_end:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[yr:month_of_period_end:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:month_of_period_end:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:month_of_period_end:ok]' member='2011' />
                <groupfilter function='member' level='[yr:month_of_period_end:ok]' member='2023' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]</column>
            <column>[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[yr:month_of_period_end:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' scope='rows' value='Sum of Permits Per 10,000 People' />
            <format attr='display' class='0' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[tyr:month_of_period_end:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[qr:month_of_period_end:ok]' value='27' />
            <format attr='width' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[tyr:month_of_period_end:qk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[qr:month_of_period_end:ok]' value='false' />
            <format attr='display' field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[tyr:month_of_period_end:qk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' z-order='1' />
            <reference-line axis-column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[sum:permits_per_10000_ppl:qk]</rows>
        <cols>[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[tyr:month_of_period_end:qk]</cols>
      </table>
      <simple-id uuid='{6981ECDA-58D9-4E0F-98DE-0CA46C63E7C8}' />
    </worksheet>
    <worksheet name='permits_yoy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Year over Year Change in New Construction Permits for every 10,000 people with 90-Day Durations, Boston Metro Region - Cluster Analysis 2012-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='redfin_permits_yoy (boston.redfin_permits_yoy) (postgres)' name='federated.152wax70nwka6c1368l9h1wutbu1' />
          </datasources>
          <datasource-dependencies datasource='federated.152wax70nwka6c1368l9h1wutbu1'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{cc0aa320-a094-4549-a386-8055dfd1cd37}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='New Construction' datatype='real' datatype-customized='true' name='[new_construction]' role='dimension' type='ordinal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timeframe]' derivation='None' name='[none:timeframe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_construction]' derivation='Sum' name='[sum:new_construction:qk]' pivot='key' type='quantitative' />
            <column caption='Timeframe' datatype='date' datatype-customized='true' name='[timeframe]' role='dimension' type='ordinal' />
            <column-instance column='[timeframe]' derivation='Year' name='[yr:timeframe:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' palette='red_10_0' type='palette'>
                  <map to='#6394be'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#8074a8'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#ae123a'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#b882a6'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#f498b6'>
                    <bucket>1</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' included-values='non-null' />
          <slices>
            <column>[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.152wax70nwka6c1368l9h1wutbu1].[none:timeframe:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.152wax70nwka6c1368l9h1wutbu1].[yr:timeframe:ok]' value='99' />
            <format attr='width' field='[federated.152wax70nwka6c1368l9h1wutbu1].[none:timeframe:qk]' value='99' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.152wax70nwka6c1368l9h1wutbu1].[yr:timeframe:ok]' value='true' />
            <format attr='display' field='[federated.152wax70nwka6c1368l9h1wutbu1].[none:timeframe:qk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.152wax70nwka6c1368l9h1wutbu1].[none:AdhocCluster:1:ok]' />
            </encodings>
            <reference-line axis-column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' z-order='1' />
            <reference-line axis-column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]</rows>
        <cols>([federated.152wax70nwka6c1368l9h1wutbu1].[yr:timeframe:ok] * [federated.152wax70nwka6c1368l9h1wutbu1].[none:timeframe:qk])</cols>
      </table>
      <simple-id uuid='{961CA7E6-4024-40E0-A832-233A94BC33E1}' />
    </worksheet>
    <worksheet name='permits_yoy (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Year over Year Change in New Construction Permits for every 10,000 people with 90-Day Durations, Boston Metro Region - Cluster Analysis 2012-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='redfin_permits_yoy (boston.redfin_permits_yoy) (postgres)' name='federated.152wax70nwka6c1368l9h1wutbu1' />
          </datasources>
          <datasource-dependencies datasource='federated.152wax70nwka6c1368l9h1wutbu1'>
            <column-instance column='[timeframe]' derivation='Month' name='[mn:timeframe:ok]' pivot='key' type='ordinal' />
            <column caption='New Construction' datatype='real' datatype-customized='true' name='[new_construction]' role='dimension' type='ordinal' />
            <column-instance column='[timeframe]' derivation='Quarter' name='[qr:timeframe:ok]' pivot='key' type='ordinal' />
            <column-instance column='[new_construction]' derivation='Sum' name='[sum:new_construction:qk]' pivot='key' type='quantitative' />
            <column caption='Timeframe' datatype='date' datatype-customized='true' name='[timeframe]' role='dimension' type='ordinal' />
            <column-instance column='[timeframe]' derivation='Year-Trunc' name='[tyr:timeframe:qk]' pivot='key' type='quantitative' />
            <column-instance column='[timeframe]' derivation='Year' name='[yr:timeframe:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.152wax70nwka6c1368l9h1wutbu1].[yr:timeframe:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:timeframe:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:timeframe:ok]' member='2011' />
                <groupfilter function='member' level='[yr:timeframe:ok]' member='2012' />
                <groupfilter function='member' level='[yr:timeframe:ok]' member='2023' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]</column>
            <column>[federated.152wax70nwka6c1368l9h1wutbu1].[yr:timeframe:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.152wax70nwka6c1368l9h1wutbu1].[yr:timeframe:ok]' value='99' />
            <format attr='width' field='[federated.152wax70nwka6c1368l9h1wutbu1].[qr:timeframe:ok]' value='99' />
            <format attr='width' field='[federated.152wax70nwka6c1368l9h1wutbu1].[mn:timeframe:ok]' value='99' />
            <format attr='width' field='[federated.152wax70nwka6c1368l9h1wutbu1].[tyr:timeframe:qk]' value='99' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.152wax70nwka6c1368l9h1wutbu1].[yr:timeframe:ok]' value='false' />
            <format attr='display' field='[federated.152wax70nwka6c1368l9h1wutbu1].[qr:timeframe:ok]' value='false' />
            <format attr='display' field='[federated.152wax70nwka6c1368l9h1wutbu1].[mn:timeframe:ok]' value='false' />
            <format attr='display' field='[federated.152wax70nwka6c1368l9h1wutbu1].[tyr:timeframe:qk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' z-order='1' />
            <reference-line axis-column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.152wax70nwka6c1368l9h1wutbu1].[sum:new_construction:qk]</rows>
        <cols>[federated.152wax70nwka6c1368l9h1wutbu1].[tyr:timeframe:qk]</cols>
      </table>
      <simple-id uuid='{0BD4EFEA-FD63-486D-91E3-FC4A9D925B11}' />
    </worksheet>
    <worksheet name='relocation - inventory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Inventory, Relocation Set, 2012-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[period_begin]' derivation='Attribute' name='[attr:period_begin:ok]' pivot='key' type='ordinal' />
            <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
            <column-instance column='[Relocation Set (copy 2)]' derivation='InOut' name='[io:Relocation Set (copy 2):nk]' pivot='key' type='nominal' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' filter-group='9'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Aberdeen, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Aberdeen, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Abilene, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ada, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Adrian, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Akron, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alamogordo, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albany, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albany, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albany, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albemarle, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albert Lea, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albertville, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alexander City, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alexandria, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alexandria, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alice, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Allentown, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alma, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alpena, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Altoona, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Altus, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Amarillo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Americus, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ames, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Amsterdam, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Anaheim, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Anchorage, AK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Andrews, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Angola, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ann Arbor, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Anniston, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Appleton, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Arcadia, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ardmore, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Arkadelphia, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Asheville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ashland, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ashtabula, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Astoria, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atchison, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Athens, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Athens, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Athens, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atlanta, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atlantic City, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atmore, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Auburn, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Auburn, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Auburn, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Augusta, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Augusta, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bainbridge, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bakersfield, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Baltimore, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bangor, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Baraboo, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bardstown, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Barnstable Town, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Barre, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bartlesville, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Batavia, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Batesville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Baton Rouge, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Battle Creek, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bay City, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bay City, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beatrice, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beaumont, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beaver Dam, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bedford, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beeville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bellefontaine, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bellingham, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bemidji, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bend, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bennettsville, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bennington, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Berlin, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Big Rapids, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Big Spring, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Big Stone Gap, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Billings, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Binghamton, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Birmingham, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Blackfoot, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Blacksburg, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bloomington, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bloomington, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bloomsburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bluefield, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bluffton, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Blytheville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bogalusa, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boise City, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bonham, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boone, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Borger, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boulder, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bowling Green, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bozeman, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bradford, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brainerd, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Branson, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Breckenridge, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bremerton, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brenham, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brevard, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bridgeport, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brookhaven, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brookings, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brookings, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brownsville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brownsville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brownwood, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brunswick, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bucyrus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Buffalo, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burley, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burlington, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burlington, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burlington, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Butte, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cadillac, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Calhoun, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;California, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cambridge, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cambridge, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Camden, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Camden, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Campbellsville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cañon City, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Canton, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Coral, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Coral, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Girardeau, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carbondale, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carlsbad, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carroll, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carson City, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cedar City, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cedar Rapids, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cedartown, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Celina, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Central City, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Centralia, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Centralia, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chambersburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Champaign, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charleston, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charleston, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlottesville, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chico, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chillicothe, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cincinnati, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clarksdale, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clarksville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clearlake, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cleveland, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cleveland, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cleveland, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clewiston, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clinton, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clovis, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coeur d&apos;Alene, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coffeyville, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coldwater, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;College Station, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Colorado Springs, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbia, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Concord, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Connersville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cookeville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coos Bay, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cordele, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corinth, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cornelia, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corning, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corsicana, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cortland, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corvallis, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coshocton, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Craig, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crawfordsville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crescent City, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crestview, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crossville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cullman, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cullowhee, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cumberland, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dalton, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Danville, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Danville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Danville, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Daphne, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Davenport, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dayton, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dayton, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Decatur, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Decatur, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Decatur, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Defiance, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Del Rio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Deltona, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Deming, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;DeRidder, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Des Moines, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Detroit, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dixon, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dodge City, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dothan, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Douglas, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dover, DE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dublin, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;DuBois, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dubuque, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dumas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Duncan, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Durango, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Durant, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Durham, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dyersburg, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eagle Pass, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;East Stroudsburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Easton, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eau Claire, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Edwards, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Effingham, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Campo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Centro, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Dorado, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elgin, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elizabeth City, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elizabethtown, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elk City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elkhart, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elko, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ellensburg, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elmira, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Emporia, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Enid, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Enterprise, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Erie, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Escanaba, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Española, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eufaula, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eugene, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eureka, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Evansville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fairbanks, AK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fairfield, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fairmont, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fallon, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Faribault, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Farmington, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Farmington, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fayetteville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fayetteville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fergus Falls, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fernley, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Findlay, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fitzgerald, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Flagstaff, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Flint, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Florence, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Florence, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fond du Lac, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Forest City, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Forrest City, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Collins, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Dodge, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Lauderdale, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Leonard Wood, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Madison, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Morgan, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Payne, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Polk South, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Smith, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Wayne, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Frankfort, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Frankfort, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Frederick, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fredericksburg, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Freeport, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fremont, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fremont, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fresno, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gadsden, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gaffney, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gainesville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gainesville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gainesville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Galesburg, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gallup, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Garden City, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gardnerville Ranchos, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gary, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Georgetown, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gettysburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Glasgow, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Glens Falls, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Glenwood Springs, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gloversville, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Goldsboro, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Granbury, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Island, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Junction, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Rapids, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Rapids, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grants Pass, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grants, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Great Bend, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Great Falls, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greeley, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Green Bay, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greeneville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greensboro, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greensburg, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenwood, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenwood, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grenada, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gulfport, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Guymon, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hagerstown, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hailey, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hammond, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hanford, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hannibal, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Harrisburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Harrison, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Harrisonburg, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hastings, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hays, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Heber, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Helena, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Helena, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Henderson, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hereford, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hermiston, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hickory, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hillsdale, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hilo, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hilton Head Island, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hinesville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hobbs, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Holland, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Homosassa Springs, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Honolulu, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hood River, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hope, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hot Springs, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houghton, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houma, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hudson, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntington, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntington, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntsville, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntsville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huron, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hutchinson, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hutchinson, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Idaho Falls, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indiana, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianola, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Iowa City, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Iron Mountain, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ithaca, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, WY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jamestown, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Janesville, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jasper, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jasper, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jefferson City, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jefferson, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jennings, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jesup, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Johnson City, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Johnstown, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jonesboro, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Joplin, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kahului, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kalamazoo, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kalispell, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kankakee, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kansas City, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kapaa, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kearney, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Keene, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kendallville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kennett, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kennewick, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kerrville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Key West, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kill Devil Hills, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Killeen, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kingsport, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kingston, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kingsville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kinston, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kirksville, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Klamath Falls, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Knoxville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kokomo, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;La Crosse, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;La Grande, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Laconia, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lafayette, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lafayette, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;LaGrange, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake Charles, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake City, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake County, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake Havasu City, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lakeland, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lamesa, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lancaster, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lansing, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Laredo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Cruces, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Laurinburg, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lawrence, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lawrenceburg, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lawton, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lebanon, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lebanon, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lebanon, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Levelland, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewisburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewisburg, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewiston, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewiston, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewistown, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lexington, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lexington, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Liberal, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lima, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lincoln, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lincoln, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Little Rock, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lock Haven, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Logan, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Logansport, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;London, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Longview, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Longview, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Alamos, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Louisville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lubbock, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ludington, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lufkin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lumberton, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lynchburg, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Macomb, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Macon, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madera, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madison, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madison, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madisonville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Magnolia, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Malone, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Malvern, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Manchester, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Manhattan, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Manitowoc, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mansfield, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marietta, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marinette, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marion, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marion, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marion, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marquette, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marshall, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marshall, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marshalltown, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Martin, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Martinsville, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Maryville, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mason City, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mayfield, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Maysville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McAlester, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McAllen, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McComb, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McMinnville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McPherson, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Meadville, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Medford, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Memphis, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Menomonie, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Merced, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Meridian, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mexico, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Michigan City, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Middlesborough, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Midland, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Midland, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Milledgeville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Milwaukee, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Minden, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mineral Wells, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Minneapolis, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Missoula, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mitchell, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moberly, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mobile, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Modesto, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Monroe, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Monroe, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Montgomery County, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Montgomery, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Montrose, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Morehead City, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Morgan City, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Morristown, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moscow, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moses Lake, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moultrie, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Airy, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Pleasant, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Pleasant, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Sterling, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Vernon, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Vernon, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Vernon, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mountain Home, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mountain Home, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muncie, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Murray, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muscatine, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muskegon, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muskogee, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Myrtle Beach, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nacogdoches, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Napa, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Naples, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nassau County, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Natchez, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Natchitoches, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Bern, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Brunswick, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Castle, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Castle, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Haven, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Orleans, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Philadelphia, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Ulm, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newark, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newberry, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newport, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newport, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Niles, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nogales, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Norfolk, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Platte, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Port, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Vernon, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Wilkesboro, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Norwalk, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Norwich, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oak Harbor, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oakland, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ocala, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ocean City, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Odessa, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ogden, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ogdensburg, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oil City, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Okeechobee, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Olean, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Olympia, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Omaha, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oneonta, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ontario, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Opelousas, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orangeburg, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orlando, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orlando, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oshkosh, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oskaloosa, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Othello, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ottawa, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ottawa, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ottumwa, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Owatonna, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Owensboro, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oxford, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oxnard, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ozark, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paducah, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pahrump, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Palatka, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Palestine, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Palm Bay, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pampa, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Panama City, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paragould, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paris, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paris, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Parsons, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Payson, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pearsall, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pecos, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pella, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pensacola, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Peoria, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Peru, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Picayune, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pierre, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pine Bluff, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pinehurst, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pittsburg, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pittsburgh, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pittsfield, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Plainview, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Platteville, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Plattsburgh, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Plymouth, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pocatello, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Point Pleasant, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ponca City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pontiac, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Poplar Bluff, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Port Angeles, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Port Lavaca, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Port St. Lucie, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portales, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portsmouth, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pottsville, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Poughkeepsie, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Prescott Valley, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Price, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Prineville, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Providence, RI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Provo, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pueblo, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pullman, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Punta Gorda, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Quincy, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Racine, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Raleigh, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rapid City, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Raymondville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Reading, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Red Bluff, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Red Wing, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Redding, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Reno, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rexburg, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Richmond, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Richmond, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Richmond, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rio Grande City, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Riverside, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roanoke Rapids, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roanoke, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rochelle, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rochester, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rochester, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockford, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockingham County, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockingham, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockport, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rocky Mount, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rolla, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rome, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roseburg, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roswell, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ruidoso, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Russellville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ruston, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rutland, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sacramento, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Safford, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Saginaw, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salem, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salem, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salina, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salinas, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salt Lake City, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Angelo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Luis Obispo, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Rafael, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sandpoint, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sandusky, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sanford, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Cruz, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Fe, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Maria, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Rosa, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sault Ste. Marie, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Savannah, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sayre, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scottsbluff, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scottsboro, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scottsburg, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scranton, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Searcy, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sebastian, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sebring, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sedalia, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Selinsgrove, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Selma, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seneca Falls, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seneca, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sevierville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seymour, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shawano, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shawnee, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sheboygan, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shelby, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shelbyville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shelton, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sherman, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Show Low, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shreveport, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sidney, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sierra Vista, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sikeston, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Silver City, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sioux City, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sioux Falls, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Snyder, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Somerset, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Somerset, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sonora, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;South Bend, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spartanburg, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spearfish, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spencer, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spirit Lake, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spokane, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Cloud, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. George, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Joseph, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Louis, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Marys, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Marys, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Starkville, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;State College, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Statesboro, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Staunton, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Steamboat Springs, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stephenville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sterling, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sterling, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stevens Point, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stillwater, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stockton, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Storm Lake, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sturgis, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sulphur Springs, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Summerville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sumter, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sunbury, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Susanville, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sweetwater, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Syracuse, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tacoma, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tahlequah, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Talladega, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tallahassee, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tampa, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tampa, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Taos, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Taylorville, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Terre Haute, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Texarkana, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;The Dalles, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;The Villages, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Thomaston, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Thomasville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tiffin, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tifton, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Toccoa, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Toledo, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Topeka, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Torrington, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Traverse City, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Trenton, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Troy, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Truckee, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tucson, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tullahoma, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tulsa, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tupelo, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tuscaloosa, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Twin Falls, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tyler, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ukiah, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Union City, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Union, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Urbana, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Utica, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Uvalde, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Valdosta, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vallejo, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Van Wert, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vermillion, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vernal, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vernon, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vicksburg, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Victoria, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vidalia, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vincennes, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vineland, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vineyard Haven, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Virginia Beach, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Visalia, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wabash, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Waco, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wahpeton, ND metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Walla Walla, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wapakoneta, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warner Robins, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warren, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warren, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warrensburg, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warsaw, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington Court House, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Waterloo, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Watertown, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Watertown, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Watertown, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wauchula, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wausau, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Waycross, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Weatherford, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Weirton, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wenatchee, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;West Palm Beach, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;West Plains, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;West Point, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wheeling, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Whitewater, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wichita Falls, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wichita, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Williamsport, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Willmar, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilmington, DE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilmington, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilmington, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilson, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winchester, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winfield, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winnemucca, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winona, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winston-Salem, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wisconsin Rapids, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Woodward, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wooster, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Worcester, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Worthington, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yakima, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yankton, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;York, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Youngstown, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yuba City, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yuma, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Zanesville, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Zapata, TX metropolitan area&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='stroke-color' scope='cols' value='#555555' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' />
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' />
              <tooltip column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[attr:period_begin:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{B3A6130E-7230-4E9A-BEB0-7DFA1DE5086E}' />
    </worksheet>
    <worksheet name='relocation - inventory, comp (4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Inventory, Comparison, 2019-2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column caption='Inventory' datatype='real' name='[inventory]' role='measure' type='quantitative' />
            <column-instance column='[Relocation Set (copy 2)]' derivation='InOut' name='[io:Relocation Set (copy 2):nk]' pivot='key' type='nominal' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[inventory]' derivation='Sum' name='[sum:inventory:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' filter-group='7'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2023' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] / [federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3])</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:inventory:qk]</cols>
      </table>
      <simple-id uuid='{11BA8912-956C-4572-8707-4A72FB32DDF0}' />
    </worksheet>
    <worksheet name='relocation - med dom, comp (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Days on the Market, Comparison, 2019-2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[Relocation Set (copy 2)]' derivation='InOut' name='[io:Relocation Set (copy 2):nk]' pivot='key' type='nominal' />
            <column caption='Median Dom' datatype='real' name='[median_dom]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[median_dom]' derivation='Sum' name='[sum:median_dom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' filter-group='7'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2023' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' scope='cols' value='Median Days on the Market' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] / [federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3])</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]</cols>
      </table>
      <simple-id uuid='{A4720B55-510A-4EFC-AFC3-9F923EB51551}' />
    </worksheet>
    <worksheet name='relocation - med sale'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Sale Price, Relocation Set, 2012-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[period_begin]' derivation='Attribute' name='[attr:period_begin:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Relocation Set (copy 2)]' derivation='InOut' name='[io:Relocation Set (copy 2):nk]' pivot='key' type='nominal' />
            <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[median_sale_price]' derivation='Sum' name='[sum:median_sale_price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' filter-group='9'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Aberdeen, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Aberdeen, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Abilene, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ada, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Adrian, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Akron, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alamogordo, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albany, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albany, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albany, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albemarle, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albert Lea, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albertville, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alexander City, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alexandria, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alexandria, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alice, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Allentown, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alma, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alpena, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Altoona, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Altus, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Amarillo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Americus, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ames, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Amsterdam, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Anaheim, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Anchorage, AK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Andrews, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Angola, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ann Arbor, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Anniston, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Appleton, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Arcadia, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ardmore, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Arkadelphia, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Asheville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ashland, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ashtabula, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Astoria, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atchison, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Athens, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Athens, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Athens, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atlanta, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atlantic City, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atmore, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Auburn, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Auburn, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Auburn, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Augusta, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Augusta, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bainbridge, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bakersfield, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Baltimore, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bangor, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Baraboo, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bardstown, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Barnstable Town, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Barre, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bartlesville, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Batavia, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Batesville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Baton Rouge, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Battle Creek, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bay City, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bay City, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beatrice, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beaumont, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beaver Dam, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bedford, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beeville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bellefontaine, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bellingham, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bemidji, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bend, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bennettsville, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bennington, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Berlin, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Big Rapids, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Big Spring, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Big Stone Gap, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Billings, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Binghamton, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Birmingham, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Blackfoot, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Blacksburg, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bloomington, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bloomington, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bloomsburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bluefield, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bluffton, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Blytheville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bogalusa, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boise City, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bonham, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boone, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Borger, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boulder, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bowling Green, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bozeman, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bradford, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brainerd, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Branson, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Breckenridge, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bremerton, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brenham, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brevard, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bridgeport, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brookhaven, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brookings, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brookings, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brownsville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brownsville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brownwood, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brunswick, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bucyrus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Buffalo, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burley, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burlington, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burlington, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burlington, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Butte, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cadillac, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Calhoun, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;California, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cambridge, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cambridge, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Camden, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Camden, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Campbellsville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cañon City, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Canton, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Coral, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Coral, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Girardeau, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carbondale, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carlsbad, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carroll, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carson City, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cedar City, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cedar Rapids, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cedartown, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Celina, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Central City, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Centralia, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Centralia, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chambersburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Champaign, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charleston, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charleston, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlottesville, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chico, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chillicothe, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cincinnati, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clarksdale, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clarksville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clearlake, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cleveland, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cleveland, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cleveland, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clewiston, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clinton, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clovis, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coeur d&apos;Alene, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coffeyville, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coldwater, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;College Station, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Colorado Springs, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbia, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Concord, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Connersville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cookeville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coos Bay, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cordele, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corinth, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cornelia, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corning, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corsicana, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cortland, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corvallis, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coshocton, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Craig, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crawfordsville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crescent City, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crestview, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crossville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cullman, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cullowhee, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cumberland, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dalton, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Danville, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Danville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Danville, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Daphne, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Davenport, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dayton, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dayton, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Decatur, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Decatur, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Decatur, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Defiance, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Del Rio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Deltona, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Deming, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;DeRidder, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Des Moines, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Detroit, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dixon, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dodge City, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dothan, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Douglas, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dover, DE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dublin, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;DuBois, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dubuque, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dumas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Duncan, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Durango, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Durant, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Durham, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dyersburg, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eagle Pass, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;East Stroudsburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Easton, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eau Claire, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Edwards, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Effingham, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Campo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Centro, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Dorado, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elgin, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elizabeth City, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elizabethtown, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elk City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elkhart, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elko, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ellensburg, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elmira, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Emporia, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Enid, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Enterprise, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Erie, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Escanaba, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Española, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eufaula, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eugene, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eureka, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Evansville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fairbanks, AK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fairfield, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fairmont, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fallon, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Faribault, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Farmington, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Farmington, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fayetteville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fayetteville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fergus Falls, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fernley, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Findlay, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fitzgerald, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Flagstaff, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Flint, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Florence, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Florence, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fond du Lac, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Forest City, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Forrest City, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Collins, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Dodge, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Lauderdale, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Leonard Wood, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Madison, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Morgan, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Payne, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Polk South, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Smith, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Wayne, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Frankfort, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Frankfort, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Frederick, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fredericksburg, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Freeport, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fremont, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fremont, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fresno, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gadsden, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gaffney, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gainesville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gainesville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gainesville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Galesburg, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gallup, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Garden City, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gardnerville Ranchos, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gary, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Georgetown, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gettysburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Glasgow, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Glens Falls, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Glenwood Springs, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gloversville, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Goldsboro, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Granbury, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Island, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Junction, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Rapids, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Rapids, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grants Pass, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grants, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Great Bend, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Great Falls, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greeley, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Green Bay, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greeneville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greensboro, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greensburg, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenwood, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenwood, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grenada, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gulfport, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Guymon, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hagerstown, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hailey, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hammond, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hanford, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hannibal, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Harrisburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Harrison, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Harrisonburg, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hastings, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hays, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Heber, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Helena, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Helena, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Henderson, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hereford, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hermiston, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hickory, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hillsdale, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hilo, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hilton Head Island, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hinesville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hobbs, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Holland, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Homosassa Springs, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Honolulu, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hood River, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hope, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hot Springs, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houghton, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houma, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hudson, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntington, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntington, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntsville, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntsville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huron, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hutchinson, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hutchinson, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Idaho Falls, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indiana, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianola, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Iowa City, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Iron Mountain, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ithaca, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, WY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jamestown, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Janesville, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jasper, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jasper, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jefferson City, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jefferson, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jennings, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jesup, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Johnson City, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Johnstown, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jonesboro, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Joplin, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kahului, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kalamazoo, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kalispell, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kankakee, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kansas City, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kapaa, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kearney, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Keene, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kendallville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kennett, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kennewick, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kerrville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Key West, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kill Devil Hills, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Killeen, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kingsport, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kingston, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kingsville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kinston, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kirksville, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Klamath Falls, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Knoxville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kokomo, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;La Crosse, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;La Grande, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Laconia, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lafayette, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lafayette, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;LaGrange, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake Charles, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake City, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake County, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake Havasu City, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lakeland, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lamesa, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lancaster, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lansing, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Laredo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Cruces, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Laurinburg, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lawrence, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lawrenceburg, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lawton, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lebanon, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lebanon, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lebanon, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Levelland, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewisburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewisburg, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewiston, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewiston, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewistown, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lexington, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lexington, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Liberal, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lima, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lincoln, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lincoln, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Little Rock, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lock Haven, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Logan, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Logansport, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;London, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Longview, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Longview, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Alamos, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Louisville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lubbock, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ludington, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lufkin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lumberton, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lynchburg, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Macomb, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Macon, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madera, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madison, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madison, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madisonville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Magnolia, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Malone, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Malvern, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Manchester, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Manhattan, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Manitowoc, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mansfield, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marietta, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marinette, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marion, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marion, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marion, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marquette, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marshall, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marshall, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marshalltown, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Martin, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Martinsville, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Maryville, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mason City, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mayfield, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Maysville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McAlester, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McAllen, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McComb, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McMinnville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McPherson, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Meadville, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Medford, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Memphis, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Menomonie, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Merced, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Meridian, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mexico, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Michigan City, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Middlesborough, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Midland, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Midland, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Milledgeville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Milwaukee, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Minden, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mineral Wells, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Minneapolis, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Missoula, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mitchell, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moberly, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mobile, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Modesto, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Monroe, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Monroe, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Montgomery County, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Montgomery, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Montrose, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Morehead City, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Morgan City, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Morristown, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moscow, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moses Lake, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moultrie, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Airy, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Pleasant, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Pleasant, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Sterling, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Vernon, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Vernon, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Vernon, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mountain Home, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mountain Home, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muncie, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Murray, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muscatine, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muskegon, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muskogee, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Myrtle Beach, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nacogdoches, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Napa, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Naples, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nassau County, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Natchez, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Natchitoches, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Bern, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Brunswick, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Castle, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Castle, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Haven, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Orleans, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Philadelphia, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Ulm, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newark, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newberry, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newport, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newport, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Niles, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nogales, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Norfolk, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Platte, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Port, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Vernon, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Wilkesboro, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Norwalk, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Norwich, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oak Harbor, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oakland, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ocala, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ocean City, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Odessa, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ogden, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ogdensburg, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oil City, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Okeechobee, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Olean, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Olympia, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Omaha, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oneonta, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ontario, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Opelousas, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orangeburg, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orlando, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orlando, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oshkosh, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oskaloosa, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Othello, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ottawa, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ottawa, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ottumwa, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Owatonna, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Owensboro, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oxford, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oxnard, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ozark, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paducah, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pahrump, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Palatka, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Palestine, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Palm Bay, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pampa, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Panama City, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paragould, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paris, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paris, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Parsons, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Payson, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pearsall, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pecos, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pella, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pensacola, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Peoria, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Peru, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Picayune, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pierre, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pine Bluff, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pinehurst, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pittsburg, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pittsburgh, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pittsfield, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Plainview, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Platteville, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Plattsburgh, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Plymouth, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pocatello, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Point Pleasant, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ponca City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pontiac, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Poplar Bluff, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Port Angeles, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Port Lavaca, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Port St. Lucie, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portales, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portsmouth, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pottsville, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Poughkeepsie, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Prescott Valley, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Price, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Prineville, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Providence, RI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Provo, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pueblo, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pullman, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Punta Gorda, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Quincy, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Racine, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Raleigh, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rapid City, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Raymondville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Reading, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Red Bluff, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Red Wing, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Redding, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Reno, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rexburg, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Richmond, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Richmond, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Richmond, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rio Grande City, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Riverside, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roanoke Rapids, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roanoke, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rochelle, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rochester, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rochester, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockford, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockingham County, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockingham, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockport, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rocky Mount, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rolla, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rome, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roseburg, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roswell, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ruidoso, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Russellville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ruston, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rutland, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sacramento, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Safford, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Saginaw, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salem, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salem, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salina, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salinas, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salt Lake City, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Angelo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Luis Obispo, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Rafael, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sandpoint, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sandusky, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sanford, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Cruz, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Fe, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Maria, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Rosa, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sault Ste. Marie, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Savannah, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sayre, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scottsbluff, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scottsboro, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scottsburg, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scranton, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Searcy, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sebastian, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sebring, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sedalia, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Selinsgrove, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Selma, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seneca Falls, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seneca, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sevierville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seymour, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shawano, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shawnee, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sheboygan, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shelby, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shelbyville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shelton, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sherman, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Show Low, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shreveport, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sidney, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sierra Vista, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sikeston, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Silver City, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sioux City, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sioux Falls, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Snyder, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Somerset, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Somerset, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sonora, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;South Bend, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spartanburg, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spearfish, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spencer, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spirit Lake, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spokane, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Cloud, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. George, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Joseph, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Louis, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Marys, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Marys, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Starkville, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;State College, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Statesboro, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Staunton, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Steamboat Springs, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stephenville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sterling, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sterling, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stevens Point, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stillwater, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stockton, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Storm Lake, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sturgis, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sulphur Springs, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Summerville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sumter, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sunbury, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Susanville, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sweetwater, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Syracuse, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tacoma, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tahlequah, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Talladega, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tallahassee, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tampa, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tampa, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Taos, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Taylorville, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Terre Haute, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Texarkana, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;The Dalles, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;The Villages, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Thomaston, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Thomasville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tiffin, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tifton, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Toccoa, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Toledo, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Topeka, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Torrington, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Traverse City, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Trenton, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Troy, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Truckee, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tucson, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tullahoma, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tulsa, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tupelo, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tuscaloosa, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Twin Falls, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tyler, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ukiah, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Union City, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Union, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Urbana, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Utica, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Uvalde, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Valdosta, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vallejo, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Van Wert, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vermillion, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vernal, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vernon, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vicksburg, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Victoria, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vidalia, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vincennes, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vineland, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vineyard Haven, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Virginia Beach, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Visalia, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wabash, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Waco, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wahpeton, ND metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Walla Walla, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wapakoneta, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warner Robins, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warren, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warren, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warrensburg, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warsaw, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington Court House, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Waterloo, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Watertown, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Watertown, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Watertown, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wauchula, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wausau, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Waycross, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Weatherford, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Weirton, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wenatchee, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;West Palm Beach, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;West Plains, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;West Point, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wheeling, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Whitewater, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wichita Falls, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wichita, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Williamsport, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Willmar, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilmington, DE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilmington, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilmington, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilson, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winchester, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winfield, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winnemucca, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winona, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winston-Salem, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wisconsin Rapids, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Woodward, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wooster, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Worcester, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Worthington, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yakima, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yankton, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;York, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Youngstown, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yuba City, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yuma, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Zanesville, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Zapata, TX metropolitan area&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' scope='rows' value='Median Sale Price' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='stroke-color' scope='cols' value='#555555' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' />
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' />
              <tooltip column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[attr:period_begin:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{49CD11B8-4B67-4D0C-9B0F-3C4DF013F289}' />
    </worksheet>
    <worksheet name='relocation - med sale, comp (5)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Sale Price, Comparison, 2019-2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[Relocation Set (copy 2)]' derivation='InOut' name='[io:Relocation Set (copy 2):nk]' pivot='key' type='nominal' />
            <column caption='Median Sale Price' datatype='real' name='[median_sale_price]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[median_sale_price]' derivation='Sum' name='[sum:median_sale_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' filter-group='7'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2023' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] / [federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3])</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_sale_price:qk]</cols>
      </table>
      <simple-id uuid='{D1FDEB7D-65DE-4BF2-8116-E6EC9B51083A}' />
    </worksheet>
    <worksheet name='relocation - median dom'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Days on the Market, Relocation Set, 2012-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[period_begin]' derivation='Attribute' name='[attr:period_begin:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Relocation Set (copy 2)]' derivation='InOut' name='[io:Relocation Set (copy 2):nk]' pivot='key' type='nominal' />
            <column caption='Median Dom' datatype='real' name='[median_dom]' role='measure' type='quantitative' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[median_dom]' derivation='Sum' name='[sum:median_dom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' filter-group='9'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' scope='rows' value='Median Days on the Market' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='stroke-color' scope='cols' value='#555555' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' />
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' />
              <tooltip column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[attr:period_begin:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:median_dom:qk]</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{ECBAA284-52BE-4247-8CFF-F9ECDB9421B5}' />
    </worksheet>
    <worksheet name='relocation - sold above'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold Above List Price Ratio, Relocation Set, 2012-2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[period_begin]' derivation='Attribute' name='[attr:period_begin:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Relocation Set (copy 2)]' derivation='InOut' name='[io:Relocation Set (copy 2):nk]' pivot='key' type='nominal' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[period_begin]' derivation='None' name='[none:period_begin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='measure' type='quantitative' />
            <column-instance column='[sold_above_list]' derivation='Sum' name='[sum:sold_above_list:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' filter-group='9'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Aberdeen, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Aberdeen, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Abilene, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ada, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Adrian, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Akron, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alamogordo, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albany, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albany, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albany, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albemarle, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albert Lea, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Albertville, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alexander City, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alexandria, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alexandria, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alice, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Allentown, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alma, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Alpena, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Altoona, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Altus, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Amarillo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Americus, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ames, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Amsterdam, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Anaheim, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Anchorage, AK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Andrews, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Angola, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ann Arbor, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Anniston, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Appleton, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Arcadia, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ardmore, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Arkadelphia, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Asheville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ashland, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ashtabula, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Astoria, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atchison, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Athens, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Athens, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Athens, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atlanta, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atlantic City, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Atmore, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Auburn, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Auburn, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Auburn, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Augusta, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Augusta, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Austin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bainbridge, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bakersfield, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Baltimore, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bangor, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Baraboo, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bardstown, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Barnstable Town, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Barre, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bartlesville, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Batavia, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Batesville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Baton Rouge, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Battle Creek, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bay City, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bay City, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beatrice, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beaumont, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beaver Dam, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bedford, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Beeville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bellefontaine, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bellingham, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bemidji, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bend, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bennettsville, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bennington, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Berlin, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Big Rapids, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Big Spring, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Big Stone Gap, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Billings, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Binghamton, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Birmingham, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Blackfoot, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Blacksburg, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bloomington, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bloomington, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bloomsburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bluefield, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bluffton, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Blytheville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bogalusa, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boise City, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bonham, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boone, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Borger, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boston, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Boulder, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bowling Green, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bozeman, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bradford, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brainerd, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Branson, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Breckenridge, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bremerton, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brenham, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brevard, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bridgeport, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brookhaven, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brookings, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brookings, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brownsville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brownsville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brownwood, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Brunswick, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Bucyrus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Buffalo, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burley, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burlington, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burlington, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Burlington, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Butte, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cadillac, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Calhoun, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;California, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cambridge, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cambridge, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Camden, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Camden, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Campbellsville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cañon City, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Canton, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Coral, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Coral, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cape Girardeau, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carbondale, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carlsbad, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carroll, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Carson City, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cedar City, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cedar Rapids, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cedartown, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Celina, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Central City, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Centralia, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Centralia, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chambersburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Champaign, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charleston, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charleston, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlotte, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Charlottesville, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chicago, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chico, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Chillicothe, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cincinnati, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clarksdale, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clarksville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clearlake, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cleveland, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cleveland, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cleveland, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clewiston, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clinton, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Clovis, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coeur d&apos;Alene, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coffeyville, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coldwater, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;College Station, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Colorado Springs, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbia, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Columbus, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Concord, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Connersville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cookeville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coos Bay, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cordele, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corinth, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cornelia, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corning, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corsicana, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cortland, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Corvallis, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Coshocton, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Craig, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crawfordsville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crescent City, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crestview, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Crossville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cullman, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cullowhee, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Cumberland, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dallas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dalton, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Danville, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Danville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Danville, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Daphne, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Davenport, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dayton, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dayton, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Decatur, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Decatur, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Decatur, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Defiance, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Del Rio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Deltona, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Deming, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Denver, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;DeRidder, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Des Moines, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Detroit, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dixon, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dodge City, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dothan, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Douglas, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dover, DE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dublin, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;DuBois, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dubuque, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dumas, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Duncan, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Durango, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Durant, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Durham, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Dyersburg, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eagle Pass, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;East Stroudsburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Easton, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eau Claire, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Edwards, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Effingham, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Campo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Centro, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Dorado, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;El Paso, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elgin, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elizabeth City, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elizabethtown, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elk City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elkhart, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elko, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ellensburg, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Elmira, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Emporia, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Enid, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Enterprise, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Erie, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Escanaba, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Española, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eufaula, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eugene, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Eureka, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Evansville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fairbanks, AK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fairfield, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fairmont, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fallon, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Faribault, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Farmington, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Farmington, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fayetteville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fayetteville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fergus Falls, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fernley, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Findlay, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fitzgerald, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Flagstaff, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Flint, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Florence, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Florence, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fond du Lac, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Forest City, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Forrest City, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Collins, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Dodge, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Lauderdale, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Leonard Wood, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Madison, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Morgan, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Payne, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Polk South, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Smith, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Wayne, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fort Worth, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Frankfort, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Frankfort, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Frederick, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fredericksburg, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Freeport, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fremont, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fremont, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Fresno, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gadsden, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gaffney, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gainesville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gainesville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gainesville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Galesburg, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gallup, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Garden City, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gardnerville Ranchos, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gary, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Georgetown, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gettysburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Glasgow, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Glens Falls, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Glenwood Springs, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gloversville, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Goldsboro, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Granbury, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Island, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Junction, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Rapids, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grand Rapids, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grants Pass, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grants, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Great Bend, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Great Falls, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greeley, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Green Bay, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greeneville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greensboro, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greensburg, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenville, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenwood, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Greenwood, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Grenada, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Gulfport, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Guymon, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hagerstown, MD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hailey, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hammond, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hanford, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hannibal, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Harrisburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Harrison, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Harrisonburg, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hartford, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hastings, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hays, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Heber, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Helena, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Helena, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Henderson, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hereford, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hermiston, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hickory, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hillsdale, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hilo, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hilton Head Island, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hinesville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hobbs, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Holland, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Homosassa Springs, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Honolulu, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hood River, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hope, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hot Springs, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houghton, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houma, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Houston, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hudson, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntington, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntington, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntsville, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huntsville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Huron, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hutchinson, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Hutchinson, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Idaho Falls, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indiana, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianapolis, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Indianola, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Iowa City, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Iron Mountain, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ithaca, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jackson, WY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jacksonville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jamestown, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Janesville, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jasper, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jasper, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jefferson City, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jefferson, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jennings, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jesup, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Johnson City, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Johnstown, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Jonesboro, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Joplin, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kahului, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kalamazoo, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kalispell, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kankakee, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kansas City, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kapaa, HI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kearney, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Keene, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kendallville, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kennett, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kennewick, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kerrville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Key West, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kill Devil Hills, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Killeen, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kingsport, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kingston, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kingsville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kinston, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kirksville, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Klamath Falls, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Knoxville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Kokomo, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;La Crosse, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;La Grande, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Laconia, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lafayette, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lafayette, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;LaGrange, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake Charles, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake City, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake County, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lake Havasu City, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lakeland, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lamesa, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lancaster, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lansing, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Laredo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Cruces, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Las Vegas, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Laurinburg, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lawrence, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lawrenceburg, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lawton, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lebanon, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lebanon, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lebanon, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Levelland, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewisburg, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewisburg, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewiston, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewiston, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lewistown, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lexington, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lexington, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Liberal, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lima, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lincoln, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lincoln, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Little Rock, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lock Haven, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Logan, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Logansport, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;London, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Longview, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Longview, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Alamos, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Los Angeles, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Louisville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lubbock, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ludington, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lufkin, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lumberton, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Lynchburg, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Macomb, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Macon, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madera, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madison, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madison, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Madisonville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Magnolia, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Malone, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Malvern, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Manchester, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Manhattan, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Manitowoc, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mansfield, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marietta, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marinette, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marion, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marion, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marion, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marquette, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marshall, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marshall, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Marshalltown, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Martin, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Martinsville, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Maryville, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mason City, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mayfield, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Maysville, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McAlester, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McAllen, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McComb, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McMinnville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;McPherson, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Meadville, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Medford, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Memphis, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Menomonie, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Merced, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Meridian, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mexico, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Miami, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Michigan City, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Middlesborough, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Midland, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Midland, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Milledgeville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Milwaukee, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Minden, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mineral Wells, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Minneapolis, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Missoula, MT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mitchell, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moberly, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mobile, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Modesto, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Monroe, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Monroe, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Montgomery County, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Montgomery, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Montrose, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Morehead City, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Morgan City, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Morristown, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moscow, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moses Lake, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Moultrie, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Airy, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Pleasant, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Pleasant, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Sterling, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Vernon, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Vernon, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mount Vernon, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mountain Home, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Mountain Home, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muncie, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Murray, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muscatine, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muskegon, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Muskogee, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Myrtle Beach, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nacogdoches, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Napa, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Naples, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nashville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nassau County, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Natchez, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Natchitoches, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Bern, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Brunswick, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Castle, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Castle, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Haven, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Orleans, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Philadelphia, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New Ulm, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;New York, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newark, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newberry, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newport, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Newport, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Niles, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Nogales, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Norfolk, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Platte, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Port, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Vernon, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;North Wilkesboro, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Norwalk, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Norwich, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oak Harbor, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oakland, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ocala, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ocean City, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Odessa, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ogden, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ogdensburg, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oil City, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Okeechobee, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oklahoma City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Olean, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Olympia, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Omaha, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oneonta, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ontario, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Opelousas, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orangeburg, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orlando, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Orlando, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oshkosh, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oskaloosa, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Othello, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ottawa, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ottawa, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ottumwa, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Owatonna, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Owensboro, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oxford, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Oxnard, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ozark, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paducah, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pahrump, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Palatka, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Palestine, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Palm Bay, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pampa, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Panama City, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paragould, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paris, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Paris, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Parsons, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Payson, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pearsall, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pecos, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pella, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pensacola, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Peoria, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Peru, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Philadelphia, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Phoenix, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Picayune, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pierre, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pine Bluff, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pinehurst, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pittsburg, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pittsburgh, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pittsfield, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Plainview, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Platteville, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Plattsburgh, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Plymouth, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pocatello, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Point Pleasant, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ponca City, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pontiac, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Poplar Bluff, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Port Angeles, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Port Lavaca, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Port St. Lucie, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portales, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, ME metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portland, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Portsmouth, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pottsville, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Poughkeepsie, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Prescott Valley, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Price, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Prineville, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Providence, RI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Provo, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pueblo, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Pullman, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Punta Gorda, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Quincy, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Racine, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Raleigh, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rapid City, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Raymondville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Reading, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Red Bluff, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Red Wing, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Redding, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Reno, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rexburg, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Richmond, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Richmond, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Richmond, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rio Grande City, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Riverside, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roanoke Rapids, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roanoke, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rochelle, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rochester, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rochester, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockford, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockingham County, NH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockingham, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rockport, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rocky Mount, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rolla, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rome, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roseburg, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Roswell, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ruidoso, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Russellville, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ruston, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Rutland, VT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sacramento, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Safford, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Saginaw, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salem, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salem, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salina, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salinas, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Salt Lake City, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Angelo, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Antonio, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Diego, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Francisco, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Jose, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Luis Obispo, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;San Rafael, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sandpoint, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sandusky, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sanford, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Cruz, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Fe, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Maria, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Santa Rosa, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sault Ste. Marie, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Savannah, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sayre, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scottsbluff, NE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scottsboro, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scottsburg, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Scranton, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Searcy, AR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seattle, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sebastian, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sebring, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sedalia, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Selinsgrove, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Selma, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seneca Falls, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seneca, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sevierville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Seymour, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shawano, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shawnee, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sheboygan, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shelby, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shelbyville, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shelton, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sherman, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Show Low, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Shreveport, LA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sidney, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sierra Vista, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sikeston, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Silver City, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sioux City, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sioux Falls, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Snyder, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Somerset, KY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Somerset, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sonora, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;South Bend, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spartanburg, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spearfish, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spencer, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spirit Lake, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Spokane, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Springfield, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Cloud, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. George, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Joseph, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Louis, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Marys, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;St. Marys, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Starkville, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;State College, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Statesboro, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Staunton, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Steamboat Springs, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stephenville, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sterling, CO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sterling, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stevens Point, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stillwater, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Stockton, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Storm Lake, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sturgis, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sulphur Springs, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Summerville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sumter, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sunbury, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Susanville, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Sweetwater, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Syracuse, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tacoma, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tahlequah, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Talladega, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tallahassee, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tampa, FL&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tampa, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Taos, NM metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Taylorville, IL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Terre Haute, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Texarkana, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;The Dalles, OR metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;The Villages, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Thomaston, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Thomasville, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tiffin, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tifton, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Toccoa, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Toledo, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Topeka, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Torrington, CT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Traverse City, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Trenton, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Troy, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Truckee, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tucson, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tullahoma, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tulsa, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tupelo, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tuscaloosa, AL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Twin Falls, ID metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Tyler, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Ukiah, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Union City, TN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Union, SC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Urbana, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Utica, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Uvalde, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Valdosta, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vallejo, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Van Wert, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vermillion, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vernal, UT metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vernon, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vicksburg, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Victoria, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vidalia, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vincennes, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vineland, NJ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Vineyard Haven, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Virginia Beach, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Visalia, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wabash, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Waco, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wahpeton, ND metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Walla Walla, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wapakoneta, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warner Robins, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warren, MI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warren, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warrensburg, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Warsaw, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington Court House, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, DC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, IN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Washington, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Waterloo, IA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Watertown, NY metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Watertown, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Watertown, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wauchula, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wausau, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Waycross, GA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Weatherford, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Weirton, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wenatchee, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;West Palm Beach, FL metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;West Plains, MO metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;West Point, MS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wheeling, WV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Whitewater, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wichita Falls, TX metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wichita, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Williamsport, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Willmar, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilmington, DE metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilmington, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilmington, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wilson, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winchester, VA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winfield, KS metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winnemucca, NV metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winona, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Winston-Salem, NC metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wisconsin Rapids, WI metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Woodward, OK metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Wooster, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Worcester, MA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Worthington, MN metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yakima, WA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yankton, SD metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;York, PA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Youngstown, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yuba City, CA metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Yuma, AZ metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Zanesville, OH metropolitan area&quot;' />
              <groupfilter function='member' level='[none:parent_metro_region:nk]' member='&quot;Zapata, TX metropolitan area&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' value='#555555' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:sold_above_list:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='stroke-color' scope='cols' value='#555555' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' />
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' />
              <tooltip column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[attr:period_begin:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:sold_above_list:qk]</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:period_begin:qk]</cols>
      </table>
      <simple-id uuid='{17E4FAB8-362F-411D-B36C-0C75FFBB65BC}' />
    </worksheet>
    <worksheet name='relocation - sold above, comp (4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold Above List Price Ratio, Comparison, 2019-2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column-instance column='[Relocation Set (copy 2)]' derivation='InOut' name='[io:Relocation Set (copy 2):nk]' pivot='key' type='nominal' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='measure' type='quantitative' />
            <column-instance column='[sold_above_list]' derivation='Sum' name='[sum:sold_above_list:qk]' pivot='key' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' filter-group='7'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:period_begin:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2012' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2013' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2014' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2015' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2016' />
                <groupfilter function='member' level='[yr:period_begin:ok]' member='2023' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:sold_above_list:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] / [federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3])</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[sum:sold_above_list:qk]</cols>
      </table>
      <simple-id uuid='{3DCC22C8-FFEB-47E3-8E8B-68C93C03DFE0}' />
    </worksheet>
    <worksheet name='sale price vs cpi'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Boston Median Sale Prices, Averaged by Year, and Annual Boston CPI, Averaged by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sale_cpi_join (boston.sale_cpi_join) (postgres)' name='federated.1tz0z5k0yisc5w15tms1a14xjwo1' />
          </datasources>
          <datasource-dependencies datasource='federated.1tz0z5k0yisc5w15tms1a14xjwo1'>
            <column caption='Annual CPI Avg - Boston' datatype='real' name='[annual]' role='measure' type='quantitative' />
            <column caption='Median Sale Price, Avg by Year - All Residential, Boston' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
            <column-instance column='[annual]' derivation='Sum' forecast-column-base='[sum:annual:qk]' forecast-column-type='forecast-value' name='[fVal:sum:annual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_price]' derivation='Sum' forecast-column-base='[sum:avg_price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:avg_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[annual]' derivation='Sum' name='[sum:annual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_price]' derivation='Sum' name='[sum:avg_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:qk]' field-type='quantitative' max='2024' min='2012' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#d4d4d4' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]&#10;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' value='340' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:annual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' />
              <tooltip column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk]' />
              <tooltip column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:annual:qk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
        </panes>
        <rows>([federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:annual:qk] + [federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk])</rows>
        <cols>[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{CEBBD95A-090A-427F-9862-98C72AD5BE13}' />
    </worksheet>
    <worksheet name='sale price vs cpi housing'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Sale Price, Averaged by Year, and Annual Boston CPI (Housing Only), Averaged by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sale_cpi_join (boston.sale_cpi_join) (postgres)' name='federated.1tz0z5k0yisc5w15tms1a14xjwo1' />
          </datasources>
          <datasource-dependencies datasource='federated.1tz0z5k0yisc5w15tms1a14xjwo1'>
            <column caption='Median Sale Price, Avg by Year - All Residential, Boston' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
            <column-instance column='[avg_price]' derivation='Sum' forecast-column-base='[sum:avg_price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:avg_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[housing_annual]' derivation='Sum' forecast-column-base='[sum:housing_annual:qk]' forecast-column-type='forecast-value' name='[fVal:sum:housing_annual:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[housing_annual]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_price]' derivation='Sum' name='[sum:avg_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[housing_annual]' derivation='Sum' name='[sum:housing_annual:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year_]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:qk]' field-type='quantitative' max='2024' min='2012' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#d4d4d4' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' />
              <tooltip column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:housing_annual:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' />
              <tooltip column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:housing_annual:qk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:housing_annual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' />
              <color column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' />
              <tooltip column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk]' />
              <tooltip column='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:housing_annual:qk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
        </panes>
        <rows>([federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:housing_annual:qk] + [federated.1tz0z5k0yisc5w15tms1a14xjwo1].[fVal:sum:avg_price:qk])</rows>
        <cols>[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{11982D47-A0BE-4657-A789-FF73D379D155}' />
    </worksheet>
    <worksheet name='sold_above_list_cluster'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold Above List Price - Cluster Analysis (Average Ratio)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <mapsources>
            <mapsource name='' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column auto-hidden='true' caption='Clusters (14)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:15]' parent-model='[AnalyticModel:{c6e6c377-95c5-477c-ac38-b441e8a1889a}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[sold_above_list]' derivation='Avg' name='[avg:sold_above_list:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column-instance column='[period_begin]' derivation='Month' name='[mn:period_begin:ok]' pivot='key' type='ordinal' />
            <column-instance column='[AdhocCluster:15]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:15:ok]' pivot='key' type='ordinal' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='measure' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:15:ok]' palette='blue_10_0' type='palette'>
                  <map to='#2a5783'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#6798c1'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#b9ddf1'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>6</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' filter-group='6'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='cols' value='#666666' />
            <format attr='stroke-color' scope='cols' value='#666666' />
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='tick-color' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[mn:period_begin:ok]' value='116' />
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='116' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#666666' />
            <format attr='band-color' scope='cols' value='#555555' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#666666' />
            <format attr='band-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#6666664b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
              <lod column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' />
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:15:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline24' label-type='none' paired-distribution-id='refline25' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' enable-instant-analytics='true' formula='median' id='refline25' label-type='automatic' paired-distribution-id='refline24' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' z-order='2' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline26' label-type='none' paired-distribution-id='refline27' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' z-order='3' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' enable-instant-analytics='true' formula='average' id='refline27' label-type='automatic' paired-distribution-id='refline26' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]</rows>
        <cols>[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]</cols>
      </table>
      <simple-id uuid='{0BA0F333-B056-419A-B160-32E489E4E76D}' />
    </worksheet>
    <worksheet name='sold_above_list_cluster (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sold Above List Price - Cluster Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
          </datasources>
          <mapsources>
            <mapsource name='' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{c9054b67-6288-417f-8e18-d709a9fc72b9}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[sold_above_list]' derivation='Avg' name='[avg:sold_above_list:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Population Set (copy)]' derivation='InOut' name='[io:High Population Set (copy):nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Boston Metro Area' />
                <alias key='true' value='Other Metro Areas in High Population Set' />
              </aliases>
            </column-instance>
            <column-instance column='[period_begin]' derivation='Month' name='[mn:period_begin:ok]' pivot='key' type='ordinal' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[parent_metro_region]' derivation='None' name='[none:parent_metro_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Parent Metro Region' datatype='string' name='[parent_metro_region]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Period Begin' datatype='date' datatype-customized='true' name='[period_begin]' role='dimension' type='ordinal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
            <column-instance column='[period_begin]' derivation='Quarter' name='[qr:period_begin:ok]' pivot='key' type='ordinal' />
            <column caption='Sold Above List' datatype='real' name='[sold_above_list]' role='measure' type='quantitative' />
            <column-instance column='[period_begin]' derivation='Year' name='[yr:period_begin:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' palette='blue_10_0' type='palette'>
                  <map to='#2a5783'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#6798c1'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#b9ddf1'>
                    <bucket>1</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]'>
            <groupfilter function='level-members' level='[none:parent_metro_region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:2:ok]'>
            <groupfilter function='level-members' level='[none:AdhocCluster:2:ok]' />
          </filter>
          <filter class='categorical' column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]'>
            <groupfilter function='member' level='[none:property_type:nk]' member='&quot;All Residential&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:2:ok]</column>
            <column>[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='cols' value='#666666' />
            <format attr='stroke-color' scope='cols' value='#666666' />
            <format attr='stroke-color' scope='rows' value='#555555' />
            <format attr='tick-color' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[mn:period_begin:ok]' value='116' />
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='116' />
            <format attr='width' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[qr:period_begin:ok]' value='29' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#555555' />
            <format attr='background-color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#333333' />
            <format attr='band-color' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[qr:period_begin:ok]' value='false' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]' value='#e6e6e6' />
            <format attr='color' field='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#555555' />
            <format attr='band-color' scope='cols' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#333333' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#6666664b' />
            <format attr='stroke-size' id='refline27' value='4' />
            <format attr='stroke-color' id='refline27' value='#9007144b' />
            <format attr='stroke-size' id='refline25' value='4' />
            <format attr='stroke-color' id='refline25' value='#9007144b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#555555' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' />
              <lod column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' />
              <color column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:2:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline24' label-type='none' paired-distribution-id='refline25' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' enable-instant-analytics='true' formula='median' id='refline25' label-type='automatic' paired-distribution-id='refline24' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' z-order='2' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline26' label-type='none' paired-distribution-id='refline27' probability='95' scope='per-table' show-lines='both' symmetric='false' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' z-order='3' />
            <reference-line axis-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' enable-instant-analytics='true' formula='average' id='refline27' label-type='automatic' paired-distribution-id='refline26' probability='95' scope='per-table' value-column='[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]' z-order='4' />
            <customized-tooltip>
              <formatted-text>
                <run>Clusters (1):&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:2:ok]>]]></run>
                <run>Æ&#10;</run>
                <run>Parent Metro Region:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run>Quarter of Period Begin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[qr:period_begin:ok]>]]></run>
                <run>Æ&#10;</run>
                <run>Year of Period Begin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok]>]]></run>
                <run>Æ&#10;</run>
                <run>Avg. Sold Above List:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.4364640712738037' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nol2rz0mh7ps41bweycg0387zpf].[avg:sold_above_list:qk]</rows>
        <cols>([federated.1nol2rz0mh7ps41bweycg0387zpf].[yr:period_begin:ok] / [federated.1nol2rz0mh7ps41bweycg0387zpf].[qr:period_begin:ok])</cols>
      </table>
      <simple-id uuid='{F6C242CB-769C-4547-A4B6-655A057F8C63}' />
    </worksheet>
    <worksheet name='unemp_per_open'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Average Ratio of Unemployed Persons to Job Openings by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_unemp_per_open (boston.avg_unemp_per_open) (postgres)' name='federated.0kemtyy15odxjt1d90c6p0msk57q' />
          </datasources>
          <datasource-dependencies datasource='federated.0kemtyy15odxjt1d90c6p0msk57q'>
            <column caption='CA Avg' datatype='real' name='[cal_avg]' role='measure' type='quantitative' />
            <column caption='IL Avg' datatype='real' name='[il_avg]' role='measure' type='quantitative' />
            <column caption='MA Avg' datatype='real' name='[ma_avg]' role='measure' type='quantitative' />
            <column-instance column='[year_]' derivation='None' name='[none:year_:ok]' pivot='key' type='ordinal' />
            <column caption='NY Avg' datatype='real' name='[ny_avg]' role='measure' type='quantitative' />
            <column-instance column='[cal_avg]' derivation='Sum' name='[sum:cal_avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[il_avg]' derivation='Sum' name='[sum:il_avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ma_avg]' derivation='Sum' name='[sum:ma_avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ny_avg]' derivation='Sum' name='[sum:ny_avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tx_avg]' derivation='Sum' name='[sum:tx_avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[us_avg]' derivation='Sum' name='[sum:us_avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wa_avg]' derivation='Sum' name='[sum:wa_avg:qk]' pivot='key' type='quantitative' />
            <column caption='TX Avg' datatype='real' name='[tx_avg]' role='measure' type='quantitative' />
            <column caption='US Avg' datatype='real' name='[us_avg]' role='measure' type='quantitative' />
            <column caption='WA Avg' datatype='real' name='[wa_avg]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year_]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kemtyy15odxjt1d90c6p0msk57q].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:ma_avg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:us_avg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:cal_avg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:il_avg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:ny_avg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:tx_avg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:wa_avg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kemtyy15odxjt1d90c6p0msk57q].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:ma_avg:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:us_avg:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:tx_avg:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:il_avg:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:cal_avg:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:wa_avg:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kemtyy15odxjt1d90c6p0msk57q].[sum:ny_avg:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kemtyy15odxjt1d90c6p0msk57q].[none:year_:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:year_:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:year_:ok]' member='2013' />
                <groupfilter function='member' level='[none:year_:ok]' member='2014' />
                <groupfilter function='member' level='[none:year_:ok]' member='2015' />
                <groupfilter function='member' level='[none:year_:ok]' member='2016' />
                <groupfilter function='member' level='[none:year_:ok]' member='2017' />
                <groupfilter function='member' level='[none:year_:ok]' member='2018' />
                <groupfilter function='member' level='[none:year_:ok]' member='2019' />
                <groupfilter function='member' level='[none:year_:ok]' member='2020' />
                <groupfilter function='member' level='[none:year_:ok]' member='2021' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kemtyy15odxjt1d90c6p0msk57q].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0kemtyy15odxjt1d90c6p0msk57q].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0kemtyy15odxjt1d90c6p0msk57q].[:Measure Names]' value='false' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0kemtyy15odxjt1d90c6p0msk57q].[:Measure Names]' />
              <text column='[federated.0kemtyy15odxjt1d90c6p0msk57q].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kemtyy15odxjt1d90c6p0msk57q].[Multiple Values]</rows>
        <cols>([federated.0kemtyy15odxjt1d90c6p0msk57q].[none:year_:ok] / [federated.0kemtyy15odxjt1d90c6p0msk57q].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{2A718B9D-5BC6-4C2F-B0AE-95353812FA8A}' />
    </worksheet>
    <worksheet name='us_pop'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Percent Change in Population, 2021-2022, for US Cities (Population &gt;650,000 in 2020, representing Top 25 Highest Population Places)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us_popchange (boston.us_popchange) (postgres)' name='federated.08s5a8m1ty4l6u17m9d1o0qqq5xd' />
          </datasources>
          <datasource-dependencies datasource='federated.08s5a8m1ty4l6u17m9d1o0qqq5xd'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Percent Change' datatype='real' name='[percent_change]' role='measure' type='quantitative' />
            <column-instance column='[percent_change]' derivation='Sum' name='[sum:percent_change:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.08s5a8m1ty4l6u17m9d1o0qqq5xd].[none:city:nk]' direction='ASC' using='[federated.08s5a8m1ty4l6u17m9d1o0qqq5xd].[sum:percent_change:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.08s5a8m1ty4l6u17m9d1o0qqq5xd].[none:city:nk]' value='37' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.08s5a8m1ty4l6u17m9d1o0qqq5xd].[none:city:nk]' value='264' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08s5a8m1ty4l6u17m9d1o0qqq5xd].[none:city:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.08s5a8m1ty4l6u17m9d1o0qqq5xd].[none:city:nk]</rows>
        <cols>[federated.08s5a8m1ty4l6u17m9d1o0qqq5xd].[sum:percent_change:qk]</cols>
      </table>
      <simple-id uuid='{FB126366-EAF3-4F42-B788-FABA4718E667}' />
    </worksheet>
    <worksheet name='us_vacancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>US, Occupied and Vacant Housing Percentages</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancy (boston.vacancy) (postgres)' name='federated.02ccs1q01w6aw018luhv60oik3bq' />
          </datasources>
          <datasource-dependencies datasource='federated.02ccs1q01w6aw018luhv60oik3bq'>
            <column datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
            <column-instance column='[label_grouping]' derivation='None' name='[none:label_grouping:nk]' pivot='key' type='nominal' />
            <column-instance column='[us_2016_21_percent]' derivation='Sum' name='[sum:us_2016_21_percent:qk]' pivot='key' type='quantitative' />
            <column caption='Us 2016 21 Percent' datatype='real' name='[us_2016_21_percent]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Homeowner vacancy rate&quot;' />
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Rental vacancy rate&quot;' />
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;    Total housing units&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='115' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk]' value='272' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:us_2016_21_percent:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:us_2016_21_percent:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dbe3eb</color>
                <color>#c5d6e5</color>
                <color>#b1c9df</color>
                <color>#9ebcd9</color>
                <color>#8bb0d3</color>
                <color>#79a4cd</color>
                <color>#6899c7</color>
                <color>#588ec1</color>
                <color>#4884bb</color>
                <color>#3a7ab5</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:us_2016_21_percent:qk]' />
              <text column='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:us_2016_21_percent:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02ccs1q01w6aw018luhv60oik3bq].[none:label_grouping:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{34168CB5-8B55-4757-9644-687117831B04}' />
    </worksheet>
    <worksheet name='worker stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e6e6e6' fontsize='8'>Boston Worker Statistics, 5-Year Estimate 2016-2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bos_commuting (boston.bos_commuting) (postgres)' name='federated.1wefjtl1vj660u11kn0u20817tl8' />
          </datasources>
          <datasource-dependencies datasource='federated.1wefjtl1vj660u11kn0u20817tl8'>
            <column caption='Label Grouping' datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
            <column-instance column='[label_grouping]' derivation='None' name='[none:label_grouping:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_est]' derivation='Sum' name='[sum:total_est:qk]' pivot='key' type='quantitative' />
            <column caption='Total Est' datatype='real' name='[total_est]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wefjtl1vj660u11kn0u20817tl8].[none:label_grouping:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:label_grouping:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked in county of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked in minor civil division of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked in place of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked outside county of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked outside minor civil division of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked outside place of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Worked from home&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Worked in state of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Worked outside state of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wefjtl1vj660u11kn0u20817tl8].[none:label_grouping:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked in county of residence&quot;' />
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked in minor civil division of residence&quot;' />
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked outside county of residence&quot;' />
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked outside minor civil division of residence&quot;' />
                <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Worked outside state of residence&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1wefjtl1vj660u11kn0u20817tl8].[none:label_grouping:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;        Worked in state of residence&quot;</bucket>
              <bucket>&quot;            Worked in place of residence&quot;</bucket>
              <bucket>&quot;            Worked outside place of residence&quot;</bucket>
              <bucket>&quot;        Worked from home&quot;</bucket>
              <bucket>&quot;            Worked in county of residence&quot;</bucket>
              <bucket>&quot;            Worked in minor civil division of residence&quot;</bucket>
              <bucket>&quot;            Worked outside county of residence&quot;</bucket>
              <bucket>&quot;            Worked outside minor civil division of residence&quot;</bucket>
              <bucket>&quot;        Worked outside state of residence&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1wefjtl1vj660u11kn0u20817tl8].[none:label_grouping:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1wefjtl1vj660u11kn0u20817tl8].[none:label_grouping:nk]' value='308' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1wefjtl1vj660u11kn0u20817tl8].[sum:total_est:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1wefjtl1vj660u11kn0u20817tl8].[sum:total_est:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1wefjtl1vj660u11kn0u20817tl8].[sum:total_est:qk]' />
              <text column='[federated.1wefjtl1vj660u11kn0u20817tl8].[sum:total_est:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wefjtl1vj660u11kn0u20817tl8].[none:label_grouping:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{0529CC53-A82E-4DAA-A696-21C363121678}' />
    </worksheet>
    <worksheet name='worker stats 21'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e6e6e6' fontsize='8'>Boston Worker Statistics, 1-Year Estimate 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bos_commuting_21 (boston.bos_commuting_21) (postgres)' name='federated.0ujnqdc0ko1xqq14tq9jg0jt9j70' />
          </datasources>
          <datasource-dependencies datasource='federated.0ujnqdc0ko1xqq14tq9jg0jt9j70'>
            <column caption='Label Grouping' datatype='string' name='[label_grouping]' role='dimension' type='nominal' />
            <column-instance column='[label_grouping]' derivation='None' name='[none:label_grouping:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_est]' derivation='Sum' name='[sum:total_est:qk]' pivot='key' type='quantitative' />
            <column caption='Total Est' datatype='real' name='[total_est]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[none:label_grouping:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:label_grouping:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked in place of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;            Worked outside place of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Worked from home&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Worked in state of residence&quot;' />
                  <groupfilter function='member' level='[none:label_grouping:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[none:label_grouping:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:label_grouping:nk]' />
              <groupfilter function='member' level='[none:label_grouping:nk]' member='&quot;        Worked outside state of residence&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[none:label_grouping:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;        Worked in state of residence&quot;</bucket>
              <bucket>&quot;            Worked in place of residence&quot;</bucket>
              <bucket>&quot;            Worked outside place of residence&quot;</bucket>
              <bucket>&quot;        Worked from home&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[none:label_grouping:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[none:label_grouping:nk]' value='308' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[sum:total_est:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[sum:total_est:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[sum:total_est:qk]' />
              <text column='[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[sum:total_est:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[none:label_grouping:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{4714EDD2-9744-4985-9612-41CEAB91080E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Affordability - Summary'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='54406' id='3' type-v2='text' w='99032' x='484' y='26347'>
            <formatted-text>
              <run fontsize='14'>The &quot;Housing Affordability&quot; section of this project contained visualizations and analyses on aspects of Boston&apos;s housing market that highlight its housing crisis. In recent years, Boston has had some of the highest median sale prices and list prices across the top 25 largest US cities in 2020. Almost 40% of renters are paying 35% or more of their income for rent, and over 23% are paying at least $2,499 for gross rent.</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>In my analysis for median sale and list prices, Boston typically fell around cities like San Jose, CA; San Francisco, CA; Washington, DC; New York, NY; and Denver, CO. With more time and data availability, I&apos;d include comparative analysis exclusively for renters, since they make up a substantial part of Boston&apos;s housing market. In late 2022, CNBC predicted Boston to have the third highest rents in the US in 2023 based on percent changes in median rents from 2020 to 2022 (Winters). San Francisco, CA and New York, NY also make this list (Winters). With more time and data availability, I&apos;d also look at mortgage and interest rates, since these make up a significant portion of housing market affordability.</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>Each of these factors individually can only show potential problems in the affordability-side of Boston&apos;s housing market. However, the big picture of all of these factors together makes affordability problems in Boston&apos;s housing crisis more conclusive and more thoroughly evaluated. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>My analyses help explain some of the complex problems in the cost-side of Boston&apos;s housing market that are factors in the city&apos;s housing crisis.</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='25663' id='743' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone forceUpdate='true' h='25663' id='744' type-v2='text' w='99032' x='484' y='684'>
              <formatted-text>
                <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Affordability</run>
                <run fontalignment='2'>Æ&#10;</run>
                <run bold='true' fontalignment='2' fontsize='18'>Conclusion</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='18563' id='903' param='horz' type-v2='layout-flow' w='99032' x='484' y='80753'>
            <zone forceUpdate='true' h='18563' id='904' type-v2='text' w='99032' x='484' y='80753'>
              <formatted-text>
                <run fontcolor='#000000'>Sources below:</run>
                <run>Æ&#10;&#10;</run>
                <run auto-url='true' fontcolor='#000000' hyperlink='tabdoc:load-url url=&amp;quot;[1] W&amp;quot;'>[1] W</run>
                <run fontcolor='#000000'>inters, Mike. &quot;The 5 U.S. Cities Expected to Have the Highest Rent Prices in 2023.&quot; </run>
                <run auto-url='true' fontcolor='#000000' hyperlink='tabdoc:load-url url=&amp;quot;CNBC Make It&amp;quot;' italic='true'>CNBC Make It</run>
                <run auto-url='true' fontcolor='#000000' hyperlink='tabdoc:load-url url=&amp;quot;, 18 Dec. 2022, www.cnbc.com/2022/12/18/us-cities-expected-to-have-highest-rent-prices-in-2023.html. Accessed 27 Jul. 2023.&amp;quot;'>, 18 Dec. 2022, www.cnbc.com/2022/12/18/us-cities-expected-to-have-highest-rent-prices-in-2023.html. Accessed 27 Jul. 2023.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1102' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1101' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='25663' id='744' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Affordability</run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run bold='true' fontalignment='2' fontsize='18'>Conclusion</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='54406' id='3' type-v2='text' w='99032' x='484' y='26347'>
                  <formatted-text>
                    <run fontsize='14'>The &quot;Housing Affordability&quot; section of this project contained visualizations and analyses on aspects of Boston&apos;s housing market that highlight its housing crisis. In recent years, Boston has had some of the highest median sale prices and list prices across the top 25 largest US cities in 2020. Almost 40% of renters are paying 35% or more of their income for rent, and over 23% are paying at least $2,499 for gross rent.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='14'>In my analysis for median sale and list prices, Boston typically fell around cities like San Jose, CA; San Francisco, CA; Washington, DC; New York, NY; and Denver, CO. With more time and data availability, I&apos;d include comparative analysis exclusively for renters, since they make up a substantial part of Boston&apos;s housing market. In late 2022, CNBC predicted Boston to have the third highest rents in the US in 2023 based on percent changes in median rents from 2020 to 2022 (Winters). San Francisco, CA and New York, NY also make this list (Winters). With more time and data availability, I&apos;d also look at mortgage and interest rates, since these make up a significant portion of housing market affordability.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='14'>Each of these factors individually can only show potential problems in the affordability-side of Boston&apos;s housing market. However, the big picture of all of these factors together makes affordability problems in Boston&apos;s housing crisis more conclusive and more thoroughly evaluated. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='14'>My analyses help explain some of the complex problems in the cost-side of Boston&apos;s housing market that are factors in the city&apos;s housing crisis.</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18563' id='904' type-v2='text' w='99032' x='484' y='80753'>
                  <formatted-text>
                    <run fontcolor='#000000'>Sources below:</run>
                    <run>Æ&#10;&#10;</run>
                    <run auto-url='true' fontcolor='#000000' hyperlink='tabdoc:load-url url=&amp;quot;[1] W&amp;quot;'>[1] W</run>
                    <run fontcolor='#000000'>inters, Mike. &quot;The 5 U.S. Cities Expected to Have the Highest Rent Prices in 2023.&quot; </run>
                    <run auto-url='true' fontcolor='#000000' hyperlink='tabdoc:load-url url=&amp;quot;CNBC Make It&amp;quot;' italic='true'>CNBC Make It</run>
                    <run auto-url='true' fontcolor='#000000' hyperlink='tabdoc:load-url url=&amp;quot;, 18 Dec. 2022, www.cnbc.com/2022/12/18/us-cities-expected-to-have-highest-rent-prices-in-2023.html. Accessed 27 Jul. 2023.&amp;quot;'>, 18 Dec. 2022, www.cnbc.com/2022/12/18/us-cities-expected-to-have-highest-rent-prices-in-2023.html. Accessed 27 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1F8C286A-1122-47CF-A108-57363DC4CB95}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Affordability - Transition'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='29940' id='753' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone forceUpdate='true' h='29940' id='754' type-v2='text' w='99032' x='484' y='684'>
              <formatted-text>
                <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Affordability</run>
                <run fontalignment='2'>Æ&#10;</run>
                <run fontalignment='2' fontcolor='#0b4270' fontsize='16'>Alongside other factors, including housing supply, </run>
                <run fontalignment='2'>Æ&#10;</run>
                <run fontalignment='2' fontcolor='#0b4270' fontsize='16'>high costs can create a lack of affordable housing. </run>
                <run fontalignment='2'>Æ&#10;</run>
                <run fontalignment='2' fontcolor='#0b4270' fontsize='16'>High costs can also worsen effects of a supply</run>
                <run fontalignment='2'>Æ&#10;</run>
                <run fontalignment='2' fontcolor='#0b4270' fontsize='16'> problem by acting as an additional burden to buyers</run>
                <run fontalignment='2'>Æ&#10;</run>
                <run fontalignment='2' fontcolor='#0b4270' fontsize='16'> (and sellers) in the housing market.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='68692' id='893' param='horz' type-v2='layout-flow' w='99032' x='484' y='30624'>
            <zone h='68692' id='1073' param='horz' type-v2='layout-flow' w='46372' x='484' y='30624'>
              <zone forceUpdate='true' h='68692' id='3' type-v2='text' w='46372' x='484' y='30624'>
                <formatted-text>
                  <run fontsize='12'>In this section, </run>
                  <run bold='true' fontsize='12'>I examine rent, list, and sale prices in relation to other cities in the High Population Set (cities whose populations exceed 650,000) </run>
                  <run fontsize='12'>to better understand Boston&apos;s housing market as a densely populated city. I also compare these prices to income and Boston CPI to contextualize how housing prices have grown within Boston and the surrounding area. </run>
                  <run bold='true' fontsize='12'>High prices are an important factor in a lack of affordable housing, </run>
                  <run fontsize='12'>making these housing market traits important to analyze</run>
                  <run bold='true' fontsize='12'>. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>I had some trouble finding government data for interest rates/mortgage rates over time. This is an important factor of housing affordability, and with more time/data availability, I&apos;d look into this topic a lot more. I would also examine data specific to the city of Boston (as opposed to larger regions that include Boston). I would also like to dive deeper into the income and inflation comparisons. I would compare Boston&apos;s prices to more measures of inflation than just the CPI, and I would look at different groupings of income (25th percentile, 75th; hourly, annual; etc.) to get a better determination of affordability relative to income.</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>With more time and data availability, I would also like to compare prices by income relative to different neighborhoods of Boston, as I imagine some neighborhoods are more expensive/have different income levels than others. I would like to examine different income brackets as well, rather than simply the average, and I&apos;d like to look into income levels specific to Boston rather than Suffolk County. </run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone forceUpdate='true' h='68692' id='894' type-v2='text' w='52660' x='46856' y='30624'>
              <formatted-text>
                <run bold='true' fontsize='12'>My sources for this section are below:</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[2] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[3] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;tid=ACSDP5Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;tid=ACSDP5Y2021.DP04</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[4] U.S. Bureau of Labor Statistics. &quot;Quarterly Census of Employment and Wages.&quot; State and County Employment and Wages (Quarterly Census of Employment &amp; Wages - QCEW), Series ID: ENU2502550010, </run>
                <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cew/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cew/data.htm</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[5] U.S. Bureau of Labor Statistics.  &quot;CPI for All Urban Consumers (CPI-U).&quot; All Urban Consumers (Current Series) (Consumer Price Index - CPI,&quot; Series ID: CUURS11ASA0,CUUSS11ASA0, </run>
                <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cpi/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cpi/data.htm</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[6] U.S. Bureau of Labor Statistics.  &quot;CPI for All Urban Consumers (CPI-U).&quot; All Urban Consumers (Current Series) (Consumer Price Index - CPI,&quot; Series ID: CUURS11ASAH,CUUSS11ASAH, </run>
                <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cpi/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cpi/data.htm</run>
                <run>Æ&#10;&#10;&#10;</run>
                <run bold='true' fontsize='8'>Note: &quot;Boston-Cambridge-Newton&quot; refers to metropolitan region Boston-Cambridge-Newton, MA-NH.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1101' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1100' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='29940' id='754' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Affordability</run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run fontalignment='2' fontcolor='#0b4270' fontsize='16'>Alongside other factors, including housing supply, </run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run fontalignment='2' fontcolor='#0b4270' fontsize='16'>high costs can create a lack of affordable housing. </run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run fontalignment='2' fontcolor='#0b4270' fontsize='16'>High costs can also worsen effects of a supply</run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run fontalignment='2' fontcolor='#0b4270' fontsize='16'> problem by acting as an additional burden to buyers</run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run fontalignment='2' fontcolor='#0b4270' fontsize='16'> (and sellers) in the housing market.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='68692' id='3' type-v2='text' w='46372' x='484' y='30624'>
                  <formatted-text>
                    <run fontsize='12'>In this section, </run>
                    <run bold='true' fontsize='12'>I examine rent, list, and sale prices in relation to other cities in the High Population Set (cities whose populations exceed 650,000) </run>
                    <run fontsize='12'>to better understand Boston&apos;s housing market as a densely populated city. I also compare these prices to income and Boston CPI to contextualize how housing prices have grown within Boston and the surrounding area. </run>
                    <run bold='true' fontsize='12'>High prices are an important factor in a lack of affordable housing, </run>
                    <run fontsize='12'>making these housing market traits important to analyze</run>
                    <run bold='true' fontsize='12'>. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>I had some trouble finding government data for interest rates/mortgage rates over time. This is an important factor of housing affordability, and with more time/data availability, I&apos;d look into this topic a lot more. I would also examine data specific to the city of Boston (as opposed to larger regions that include Boston). I would also like to dive deeper into the income and inflation comparisons. I would compare Boston&apos;s prices to more measures of inflation than just the CPI, and I would look at different groupings of income (25th percentile, 75th; hourly, annual; etc.) to get a better determination of affordability relative to income.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>With more time and data availability, I would also like to compare prices by income relative to different neighborhoods of Boston, as I imagine some neighborhoods are more expensive/have different income levels than others. I would like to examine different income brackets as well, rather than simply the average, and I&apos;d like to look into income levels specific to Boston rather than Suffolk County. </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='68692' id='894' type-v2='text' w='52660' x='46856' y='30624'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>My sources for this section are below:</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[2] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[3] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;tid=ACSDP5Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;tid=ACSDP5Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[4] U.S. Bureau of Labor Statistics. &quot;Quarterly Census of Employment and Wages.&quot; State and County Employment and Wages (Quarterly Census of Employment &amp; Wages - QCEW), Series ID: ENU2502550010, </run>
                    <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cew/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cew/data.htm</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[5] U.S. Bureau of Labor Statistics.  &quot;CPI for All Urban Consumers (CPI-U).&quot; All Urban Consumers (Current Series) (Consumer Price Index - CPI,&quot; Series ID: CUURS11ASA0,CUUSS11ASA0, </run>
                    <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cpi/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cpi/data.htm</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[6] U.S. Bureau of Labor Statistics.  &quot;CPI for All Urban Consumers (CPI-U).&quot; All Urban Consumers (Current Series) (Consumer Price Index - CPI,&quot; Series ID: CUURS11ASAH,CUUSS11ASAH, </run>
                    <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cpi/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cpi/data.htm</run>
                    <run>Æ&#10;&#10;&#10;</run>
                    <run bold='true' fontsize='8'>Note: &quot;Boston-Cambridge-Newton&quot; refers to metropolitan region Boston-Cambridge-Newton, MA-NH.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BFAECE22-2EBC-4703-9FB3-32CECF21B49D}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='DOM vs. Med Sale, Construction'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='1035' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='213' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone forceUpdate='true' h='16425' id='19' type-v2='text' w='49516' x='50000' y='684'>
                <formatted-text>
                  <run fontcolor='#000000' fontsize='8'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                  <run fontcolor='#000000' fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='8'>Citation:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
                  <run fontcolor='#000000' fontsize='8' italic='true'>Redfin News Data Center</run>
                  <run fontcolor='#000000' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='8'>[7] Smilgius, Vivi. &quot;Report Ranks Boston 35th in the Nation for Building Housing.&quot; </run>
                  <run fontcolor='#000000' fontsize='8' italic='true'>Boston.Com</run>
                  <run fontcolor='#000000' fontsize='8'>, 24 Mar. 2023, www.boston.com/real-estate/renting/2023/03/24/metro-boston-ranked-35th-building-housing/. Accessed 27 Jul. 2023.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='82207' id='17' type-v2='text' w='49520' x='49996' y='17109'>
                <formatted-text>
                  <run fontsize='10'>The top left graph shows median days on the market for new construction in metro Boston and existing homes in metro Boston. The line demonstrating year-to-year median days on the market for existing homes tends to be lower on the graph than that for newly constructed homes. In fact, the gap between the two appears to widen with time. On April 1, 2013, newly constructed homes stayed on the market twice as long as existing homes. On April 1, 2020, </run>
                  <run bold='true' fontsize='10'>the newly constructed homes stayed on the market 3.5 times as long as already existing homes</run>
                  <run fontsize='10'>. This gap closed slightly in 2021 and 2022, which was possibly related to pandemic changes. The gap began to open up again with limited data from 2023. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='10'>The graph on the bottom left shows median sale price for newly constructed homes versus already existing homes. The line demonstrating</run>
                  <run bold='true' fontsize='10'> median sale price each year</run>
                  <run fontsize='10'> from 2012 to 2023 </run>
                  <run bold='true' fontsize='10'>appears to generally be higher for newly constructed homes than that for already existing homes</run>
                  <run fontsize='10'>.</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='10'>Median sale prices could be high for newly constructed homes in Boston because home prices are already high in Boston, and a new home would likely have higher value than an already existing one. However, it also opens up a question of the type of homes being built. If, hypothetically, more higher-cost homes are being built than the market might demand, median sale price and median days on the market could be higher for these homes. If this is true, it could also worsen the supply- and affordability-sides of the housing crisis, since the homes being built aren&apos;t matching the type of homes demanded. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='10'>Confirming this, Boston.com wrote in 2023 that Boston has a substantial market for &quot;luxury&quot; homes, but these homes constitute most of residential construction, which does not match the demand of the market as a whole (Smilgius).</run>
                  <run>Æ&#10;&#10;</run>
                  <run bold='true' fontsize='10'>Regardless of the causes behind higher prices for newly constructed homes, they might be making competition for existing, and more affordable, homes even stiffer</run>
                  <run fontsize='10'>. Since median days on the market are lower for existing homes, it could, alongside other factors in the housing crisis, mean that demand for these homes is higher. </run>
                  <run>Æ&#10;&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41103' id='1135' name='DOM Construction &amp; Existing' w='49512' x='484' y='17109'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41104' id='1137' name='Med Sale Construction &amp; Existing' w='49512' x='484' y='58212'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16425' id='1136' name='DOM Construction &amp; Existing' pane-specification-id='1' param='[federated.1l3udmg117jwxt1b3osnh04wnvas].[:Measure Names]' type-v2='color' w='19286' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16425' id='1138' name='Med Sale Construction &amp; Existing' pane-specification-id='1' param='[federated.0kzp9sz11ftqab13o6fs41hx3obo].[:Measure Names]' type-v2='color' w='30230' x='19770' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1546' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1545' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='16425' id='19' type-v2='text' w='49516' x='50000' y='684'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='8'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[7] Smilgius, Vivi. &quot;Report Ranks Boston 35th in the Nation for Building Housing.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Boston.Com</run>
                    <run fontcolor='#000000' fontsize='8'>, 24 Mar. 2023, www.boston.com/real-estate/renting/2023/03/24/metro-boston-ranked-35th-building-housing/. Accessed 27 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41103' id='1135' is-fixed='true' name='DOM Construction &amp; Existing' w='49512' x='484' y='17109'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16425' id='1136' name='DOM Construction &amp; Existing' pane-specification-id='1' param='[federated.1l3udmg117jwxt1b3osnh04wnvas].[:Measure Names]' type-v2='color' w='19286' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='82207' id='17' type-v2='text' w='49520' x='49996' y='17109'>
                  <formatted-text>
                    <run fontsize='10'>The top left graph shows median days on the market for new construction in metro Boston and existing homes in metro Boston. The line demonstrating year-to-year median days on the market for existing homes tends to be lower on the graph than that for newly constructed homes. In fact, the gap between the two appears to widen with time. On April 1, 2013, newly constructed homes stayed on the market twice as long as existing homes. On April 1, 2020, </run>
                    <run bold='true' fontsize='10'>the newly constructed homes stayed on the market 3.5 times as long as already existing homes</run>
                    <run fontsize='10'>. This gap closed slightly in 2021 and 2022, which was possibly related to pandemic changes. The gap began to open up again with limited data from 2023. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='10'>The graph on the bottom left shows median sale price for newly constructed homes versus already existing homes. The line demonstrating</run>
                    <run bold='true' fontsize='10'> median sale price each year</run>
                    <run fontsize='10'> from 2012 to 2023 </run>
                    <run bold='true' fontsize='10'>appears to generally be higher for newly constructed homes than that for already existing homes</run>
                    <run fontsize='10'>.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='10'>Median sale prices could be high for newly constructed homes in Boston because home prices are already high in Boston, and a new home would likely have higher value than an already existing one. However, it also opens up a question of the type of homes being built. If, hypothetically, more higher-cost homes are being built than the market might demand, median sale price and median days on the market could be higher for these homes. If this is true, it could also worsen the supply- and affordability-sides of the housing crisis, since the homes being built aren&apos;t matching the type of homes demanded. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='10'>Confirming this, Boston.com wrote in 2023 that Boston has a substantial market for &quot;luxury&quot; homes, but these homes constitute most of residential construction, which does not match the demand of the market as a whole (Smilgius).</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='10'>Regardless of the causes behind higher prices for newly constructed homes, they might be making competition for existing, and more affordable, homes even stiffer</run>
                    <run fontsize='10'>. Since median days on the market are lower for existing homes, it could, alongside other factors in the housing crisis, mean that demand for these homes is higher. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41104' id='1137' is-fixed='true' name='Med Sale Construction &amp; Existing' w='49512' x='484' y='58212'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16425' id='1138' name='Med Sale Construction &amp; Existing' pane-specification-id='1' param='[federated.0kzp9sz11ftqab13o6fs41hx3obo].[:Measure Names]' type-v2='color' w='30230' x='19770' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0AC898E2-1C4B-45B8-8E26-2E72DA567490}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Days on the Market'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
      </datasources>
      <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='1409' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='213' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='82207' id='374' is-fixed='true' type-v2='layout-basic' w='49511' x='484' y='17109'>
                <zone h='82207' id='8' param='vert' type-v2='layout-flow' w='49511' x='484' y='17109'>
                  <zone h='35586' id='1033' name='Cities - MOS (2)' w='49511' x='484' y='17109'>
                    <layout-cache minheight='220' minwidth='178' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='537' h='46621' id='1407' is-fixed='true' name='Cities - DOM Close (2)' w='49511' x='484' y='52695'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='16425' id='19' type-v2='text' w='61175' x='38341' y='684'>
                <formatted-text>
                  <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                  <run>Æ&#10;</run>
                  <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. Check or uncheck cities/property types to add/remove. </run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                  <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>Citation:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                  <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                  <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='82207' id='17' type-v2='text' w='49521' x='49995' y='17109'>
                <formatted-text>
                  <run>Æ&#10;</run>
                  <run bold='true' fontsize='12'>In the last ten years, Boston has seen a steep decline in the duration of days spent on the market </run>
                  <run fontsize='12'>for all residential homes</run>
                  <run bold='true' fontsize='12'>.</run>
                  <run fontsize='12'> In 2015, there was a steep decline in days on the market. This has risen some since 2020, but falls considerably short of levels in 2012-2014. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>Despite falling short of 2012-2014, Boston is doing comparatively well in this regard relative to other cities in the High Population Set. Boston has traveled from being in the top 3 shortest in 2017 to the set&apos;s median in 2022, rising from a median of 13.8 days to a median of 28.8 days. Limited data from 2023 is shown, and Boston falls above the 25th percentile. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>Year-to-year, Seattle, WA; Denver, CO; and Indianapolis, IN often see some of the shortest median time durations on the market. New York, NY; El Paso, TX; and Nashville, TN often see the longest median time durations, although Nashville saw shorter medians in 2021 and 2022. </run>
                  <run>Æ&#10;&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16425' id='1036' name='Cities - MOS (2)' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type-v2='filter' w='13667' x='13951' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16425' id='1037' name='Cities - MOS (2)' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type-v2='filter' w='13467' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16425' id='1038' name='Cities - MOS (2)' pane-specification-id='1' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' type-v2='color' w='10723' x='27618' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1545' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1544' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='16425' id='19' type-v2='text' w='61175' x='38341' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. Check or uncheck cities/property types to add/remove. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16425' id='1036' mode='checkdropdown' name='Cities - MOS (2)' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type-v2='filter' w='13667' x='13951' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16425' id='1037' mode='checkdropdown' name='Cities - MOS (2)' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type-v2='filter' w='13467' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35586' id='1033' is-fixed='true' name='Cities - MOS (2)' w='49511' x='484' y='17109'>
                  <layout-cache minheight='220' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16425' id='1038' name='Cities - MOS (2)' pane-specification-id='1' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' type-v2='color' w='10723' x='27618' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='82207' id='17' type-v2='text' w='49521' x='49995' y='17109'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run bold='true' fontsize='12'>In the last ten years, Boston has seen a steep decline in the duration of days spent on the market </run>
                    <run fontsize='12'>for all residential homes</run>
                    <run bold='true' fontsize='12'>.</run>
                    <run fontsize='12'> In 2015, there was a steep decline in days on the market. This has risen some since 2020, but falls considerably short of levels in 2012-2014. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Despite falling short of 2012-2014, Boston is doing comparatively well in this regard relative to other cities in the High Population Set. Boston has traveled from being in the top 3 shortest in 2017 to the set&apos;s median in 2022, rising from a median of 13.8 days to a median of 28.8 days. Limited data from 2023 is shown, and Boston falls above the 25th percentile. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Year-to-year, Seattle, WA; Denver, CO; and Indianapolis, IN often see some of the shortest median time durations on the market. New York, NY; El Paso, TX; and Nashville, TN often see the longest median time durations, although Nashville saw shorter medians in 2021 and 2022. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46621' id='1407' is-fixed='true' name='Cities - DOM Close (2)' w='49511' x='484' y='52695'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B84AB81C-8CD2-4639-9784-3084F86D6706}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Days on the Market (2)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='85030' id='373' param='horz' type-v2='layout-flow' w='99032' x='484' y='14286'>
            <zone h='85030' id='213' type-v2='layout-basic' w='99032' x='484' y='14286'>
              <zone h='85030' id='374' is-fixed='true' type-v2='layout-basic' w='49513' x='484' y='14286'>
                <zone h='85030' id='8' param='vert' type-v2='layout-flow' w='49513' x='484' y='14286'>
                  <zone fixed-size='173' h='15483' id='902' is-fixed='true' type-v2='empty' w='49513' x='484' y='14286'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='47477' id='211' name='dom vs list price, pop' w='49513' x='484' y='29769'>
                    <layout-cache minheight='297' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='250' h='22070' id='903' is-fixed='true' type-v2='empty' w='49513' x='484' y='77246'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='85030' id='17' type-v2='text' w='49519' x='49997' y='14286'>
                <formatted-text>
                  <run fontsize='12'>As population has increased, days on the market has decreased with a statistically significant logarithmic trend line. Additionally, as median list price has increased, median days on the market has decreased with a statistically significant exponential trend line. Both of these correlations serve to show the strong, negative relationship between median days on the market and increasing population and list price. </run>
                  <run>Æ&#10;&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='13602' id='19' type-v2='text' w='99032' x='484' y='684'>
            <formatted-text>
              <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
              <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000'>Citation:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
              <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
              <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1535' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1534' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='13602' id='19' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='85030' id='17' type-v2='text' w='49519' x='49997' y='14286'>
                  <formatted-text>
                    <run fontsize='12'>As population has increased, days on the market has decreased with a statistically significant logarithmic trend line. Additionally, as median list price has increased, median days on the market has decreased with a statistically significant exponential trend line. Both of these correlations serve to show the strong, negative relationship between median days on the market and increasing population and list price. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47477' id='211' is-fixed='true' name='dom vs list price, pop' w='49513' x='484' y='29769'>
                  <layout-cache minheight='297' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{09E466DF-76FF-4C1D-BE85-3481C7CCF524}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Days on the Market - Metro'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#0b4270' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      </datasources>
      <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='373' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='213' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='82207' id='374' is-fixed='true' type-v2='layout-basic' w='49513' x='484' y='17109'>
                <zone h='38494' id='8' param='vert' type-v2='layout-flow' w='49513' x='484' y='17109'>
                  <zone h='38494' id='212' name='days_on_mkt' w='49513' x='484' y='17109'>
                    <layout-cache minheight='220' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='43713' id='375' param='vert' type-v2='layout-flow' w='49513' x='484' y='55603'>
                  <zone fixed-size='471' h='40975' id='371' is-fixed='true' name='mos (5)' w='49513' x='484' y='55603'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='16425' id='19' type-v2='text' w='63422' x='36094' y='684'>
                <formatted-text>
                  <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                  <run>Æ&#10;</run>
                  <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. Check or uncheck cities/property types to add/remove. </run>
                  <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                  <run underline='true'>Downloadable Housing Market Data - Redfin</run>
                  <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                  <run italic='true'>Redfin News Data Center</run>
                  <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16425' id='216' name='days_on_mkt' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' w='11606' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16425' id='217' name='days_on_mkt' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='color' w='12397' x='23697' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='82207' id='17' type-v2='text' w='49519' x='49997' y='17109'>
                <formatted-text>
                  <run>Æ&#10;</run>
                  <run bold='true' fontsize='12'>In the last ten years, metro Boston has seen a steep decline in this duration.</run>
                  <run fontsize='12'> In 2015, there was a steep decline in days on the market. This has risen some since 2020, but falls considerably short of levels in 2012-2014. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>In 2012, metro Boston surpassed metro San Francisco, San Jose, and Seattle, as well as Chicago, Columbus, and Philadelphia. 10 years later, metro Boston is far closer to San Francisco, San Jose, and Seattle, and is surpassed by Chicago, Columbus, Philadelphia, and New York. In fact, </run>
                  <run bold='true' fontsize='12'>in 2022, metro Boston had one of the shortest durations for days on the market</run>
                  <run fontsize='12'> across cities with population exceeding 650,000. </run>
                  <run>Æ&#10;&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16425' id='220' name='days_on_mkt' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='filter' values='database' w='11607' x='12090' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1534' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1533' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='16425' id='19' type-v2='text' w='63422' x='36094' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. Check or uncheck cities/property types to add/remove. </run>
                    <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run italic='true'>Redfin News Data Center</run>
                    <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16425' id='216' mode='checkdropdown' name='days_on_mkt' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' w='11606' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16425' id='220' mode='checkdropdown' name='days_on_mkt' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='filter' values='database' w='11607' x='12090' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38494' id='212' is-fixed='true' name='days_on_mkt' w='49513' x='484' y='17109'>
                  <layout-cache minheight='220' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16425' id='217' name='days_on_mkt' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='color' w='12397' x='23697' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='82207' id='17' type-v2='text' w='49519' x='49997' y='17109'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run bold='true' fontsize='12'>In the last ten years, metro Boston has seen a steep decline in this duration.</run>
                    <run fontsize='12'> In 2015, there was a steep decline in days on the market. This has risen some since 2020, but falls considerably short of levels in 2012-2014. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>In 2012, metro Boston surpassed metro San Francisco, San Jose, and Seattle, as well as Chicago, Columbus, and Philadelphia. 10 years later, metro Boston is far closer to San Francisco, San Jose, and Seattle, and is surpassed by Chicago, Columbus, Philadelphia, and New York. In fact, </run>
                    <run bold='true' fontsize='12'>in 2022, metro Boston had one of the shortest durations for days on the market</run>
                    <run fontsize='12'> across cities with population exceeding 650,000. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40975' id='371' is-fixed='true' name='mos (5)' w='49513' x='484' y='55603'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{661D64F7-3D6C-455E-BF83-CF2B142274AC}' />
    </dashboard>
    <dashboard name='Final Story' type='storyboard'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='1' param='vert' removable='false' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='8640' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99032' x='484' y='684' />
            <zone h='89992' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99032' x='484' y='9324'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Population, 1' captured-sheet='pop, 2' id='2' />
                  <story-point caption='Population, 2' captured-sheet='population' id='3' />
                  <story-point caption='Relocation' captured-sheet='map/top10' id='4' />
                  <story-point caption='Introduction' captured-sheet='Introduction' id='5' />
                  <story-point caption='Introduction, 2' captured-sheet='Introduction (2)' id='6' />
                  <story-point caption='Introduction, 3' captured-sheet='Introduction (3)' id='7' />
                  <story-point caption='Supply - Intro' captured-sheet='Production - Transition' id='8' />
                  <story-point caption='Inventory, MOS' captured-sheet='Inventory, MOS -cities' id='9' />
                  <story-point caption='Inventory/MOS Correlations' captured-sheet='Invent vs. MOS Population Correlations' id='10' />
                  <story-point caption='Permits' captured-sheet='Permits' id='11' />
                  <story-point caption='New Listings' captured-sheet='New Listings Sum' id='12' />
                  <story-point caption='Supply - Conclusion' captured-sheet='Production - Summary' id='13' />
                  <story-point caption='Affordability - Intro' captured-sheet='Affordability - Transition' id='14' />
                  <story-point caption='Med Sale Price' captured-sheet='Median Sale Price' id='15' />
                  <story-point caption='Med List Price' captured-sheet='Sold Above List Price (3)' id='16' />
                  <story-point caption='Sold Above' captured-sheet='Sold Above List Price' id='17' />
                  <story-point caption='Rent, Boston vs. US' captured-sheet='Rent' id='18' />
                  <story-point caption='Rent and Income' captured-sheet='Price vs. Income' id='19' />
                  <story-point caption='Med Sale Price and CPI' captured-sheet='Price vs. CPI' id='20' />
                  <story-point caption='Affordability - Conclusion' captured-sheet='Affordability - Summary' id='21' />
                  <story-point caption='MC - Intro' captured-sheet='MC - Transition' id='22' />
                  <story-point caption='Vacancy Rates, Boston vs. US' captured-sheet='Vacancy' id='23' />
                  <story-point caption='IRH, 2018 vs. 2022' captured-sheet='IRH' id='24' />
                  <story-point caption='Days on Market' captured-sheet='Days on the Market' id='25' />
                  <story-point caption='DOM Correlations' captured-sheet='Days on the Market (2)' id='26' />
                  <story-point caption='New vs. Existing' captured-sheet='DOM vs. Med Sale, Construction' id='27' />
                  <story-point caption='Metro Quick Look - Intro' captured-sheet='Metro Regions - Transition' id='28' />
                  <story-point caption='Metro MOS' captured-sheet='MOS Metro' id='29' />
                  <story-point caption='Metro Inventory/MOS' captured-sheet='Inventory, MOS - metro' id='30' />
                  <story-point caption='Metro Med Sale' captured-sheet='Metro - Median Sale Price' id='31' />
                  <story-point caption='Metro Med List, Sold Above' captured-sheet='Sold Above List Price - Metro' id='32' />
                  <story-point caption='Metro DOM' captured-sheet='Days on the Market - Metro' id='33' />
                  <story-point caption='Relocation Set - Intro' captured-sheet='Relocation - Transition' id='34' />
                  <story-point caption='Relocation - Inventory, DOM' captured-sheet='Relocation - Comparison (3)' id='35' />
                  <story-point caption='Relocation - Med Sale, SAL' captured-sheet='Relocation - Comparison' id='36'>
                    <capturedDeltas>
                      <dashboard name='Relocation - Comparison'>
                        <zone id='32'>
                          <formatted-text>
                            <run fontsize='11'>Relative to metro areas that Boston-Worcester-Providence residents are relocating to, metro Boston&apos;s housing market has seen </run>
                            <run bold='true' fontsize='11'>high median sale prices, steep declines in days on the market, declines in inventory, and steep increases in sold above list price ratios. metro </run>
                            <run fontsize='11'>Boston sees similarities or extreme values relative to those in the Relocation Set. In the case of Inventory, metro Boston sees a relatively steep decline over time, whereas many cities in the Relocation Set remain consistent (if higher or lower) or see similar declines. </run>
                            <run>Æ&#10;</run>
                            <run fontsize='11'> It is useful to compare the metros overlapping in the High Population Set and the Relocation Set with metro Boston because it highlights how metro Boston&apos;s housing market is faring against cities with high populations where metro Boston residents are also choosing to relocate. </run>
                            <run bold='true' fontsize='11'>Relative to metro areas in both sets (Chicago, IL; Los Angeles, CA; New York, NY; Washington, DC), Boston sees similarities or extremities in most of the above traits. </run>
                            <run>Æ&#10;</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Relocation - Close Up' captured-sheet='Relocation - Comparison (2)' id='37' />
                  <story-point caption='Relocation - Close Up (2)' captured-sheet='Relocation - Comparison (4)' id='38' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{846F7BE9-6B21-415F-840B-B0A147DFF0A2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='IRH'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='72969' id='23' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='72969' id='14' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='72969' id='7' param='horz' type-v2='layout-flow' w='24758' x='74758' y='684'>
                <zone h='72969' id='5' type-v2='layout-basic' w='24758' x='74758' y='684'>
                  <zone h='72969' id='11' param='horz' type-v2='layout-flow' w='24758' x='74758' y='684'>
                    <zone h='72969' id='21' name='IRH, 2' w='24758' x='74758' y='684'>
                      <layout-cache cell-count-w='2' minheight='402' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='72969' id='9' name='2018 IRH' w='24756' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='72969' id='13' name='2022 IRH' w='24760' x='25240' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='72969' id='25' name='IRH, 3' w='24758' x='50000' y='684'>
                <layout-cache cell-count-w='2' non-cell-size-w='80' type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='12832' id='12' type-v2='text' w='99032' x='484' y='73653'>
            <formatted-text>
              <run bold='true' fontsize='14'>Income Restricted Inventory is low. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>Total Income Restricted Housing Inventory in Boston has</run>
              <run bold='true' fontsize='14'> decreased by almost 47%</run>
              <run fontsize='14'> from 2018 to 2022. The inventory&apos;s distribution of income restricted rentals and income restricted ownership has remained about the same since 2018. </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='12831' id='594' type-v2='text' w='99032' x='484' y='86485'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='8'>[6] City of Boston. &quot;Income-Restricted Housing Inventory.&quot; </run>
              <run fontcolor='#000000' fontsize='8' italic='true'>Analyze Boston</run>
              <run fontcolor='#000000' fontsize='8'>, Boston.gov, 6 Jul. 2023, data.boston.gov/dataset/income-restricted-housing. Accessed 19 Jul. 2023.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='740' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='739' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='72969' id='9' is-fixed='true' name='2018 IRH' w='24756' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72969' id='13' is-fixed='true' name='2022 IRH' w='24760' x='25240' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72969' id='25' is-fixed='true' name='IRH, 3' w='24758' x='50000' y='684'>
                  <layout-cache cell-count-w='2' non-cell-size-w='80' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72969' id='21' is-fixed='true' name='IRH, 2' w='24758' x='74758' y='684'>
                  <layout-cache cell-count-w='2' minheight='402' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='12832' id='12' type-v2='text' w='99032' x='484' y='73653'>
                  <formatted-text>
                    <run bold='true' fontsize='14'>Income Restricted Inventory is low. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='14'>Total Income Restricted Housing Inventory in Boston has</run>
                    <run bold='true' fontsize='14'> decreased by almost 47%</run>
                    <run fontsize='14'> from 2018 to 2022. The inventory&apos;s distribution of income restricted rentals and income restricted ownership has remained about the same since 2018. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='12831' id='594' type-v2='text' w='99032' x='484' y='86485'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='8'>[6] City of Boston. &quot;Income-Restricted Housing Inventory.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Analyze Boston</run>
                    <run fontcolor='#000000' fontsize='8'>, Boston.gov, 6 Jul. 2023, data.boston.gov/dataset/income-restricted-housing. Accessed 19 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DB6684A1-7B46-4EDA-832B-4B07DCAEFE10}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Introduction'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#7f0d2b' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='36041' id='570' name='worker stats' w='24486' x='484' y='34902'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='58539' id='577' type-v2='text' w='74546' x='24970' y='12404'>
            <formatted-text>
              <run>Æ&#10;</run>
              <run fontsize='12'>Brookings found population declines to be a common phenomenon experienced by many large cities (population &gt;250,000) post-2020 and even beginning in 2019, with Boston experiencing one of the highest percentage declines in 2020-2021 (Frey). And, as shown in my earlier analysis, Boston also saw relatively high declines in 2021-2022. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='12'>Declining population in Boston and the Boston metropolitan area has been influenced by the COVID-19 pandemic and the increase in remote work. In a 2023 article, </run>
              <run fontsize='12' italic='true'>Money.com</run>
              <run fontsize='12'> found that both remote and hybrid workers made up a higher percentage of recent movers in the US than in-person workers (Hardy). </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='12'>Supplementing this, the tables to the left show a nearly 20% difference in the percentage of Boston residents working remotely from a 5-Year Estimate, 2016-2021, and a 1-Year Estimate for just 2021. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='12'>Additionally, the percentage of Boston residents working in Boston is higher in the 1-Year Estimate than the 5-Year Estimate, which is possibly related to the recession and related job changes, the increase in remote work, and the decline in Boston&apos;s population. This change could possibly be the result of many other factors besides these, but is an interesting statistic regardless.</run>
              <run>Æ&#10;&#10;&#10;&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='14714' id='582' name='worker stats 21' w='24486' x='484' y='20188'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7784' id='623' param='horz' type-v2='layout-flow' w='24486' x='484' y='12404' />
          <zone h='28373' id='778' param='horz' type-v2='layout-flow' w='99032' x='484' y='70943'>
            <zone forceUpdate='true' h='28373' id='779' type-v2='text' w='99032' x='484' y='70943'>
              <formatted-text>
                <run>Sources (shows last day accessed): 

[1] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: S0801, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                <run auto-url='true' fontcolor='#0000ff' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=S0801:+COMMUTING+CHARACTERISTICS+BY+SEX&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSST5Y2021.S0801&amp;quot;' underline='true'>https://data.census.gov/table?q=S0801:+COMMUTING+CHARACTERISTICS+BY+SEX&amp;g=160XX00US2507000&amp;tid=ACSST5Y2021.S0801</run>
                <run>

[2] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: S0801, U.S. Census Bureau, 1-Year Estimate 2021, </run>
                <run auto-url='true' fontcolor='#0000ff' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=S0801:+COMMUTING+CHARACTERISTICS+BY+SEX&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSST1Y2021.S0801&amp;quot;' underline='true'>https://data.census.gov/table?q=S0801:+COMMUTING+CHARACTERISTICS+BY+SEX&amp;g=160XX00US2507000&amp;tid=ACSST1Y2021.S0801</run>
                <run>

[3] Frey, William H. &quot;Big Cities Saw Historic Population Losses While Suburban Growth Declined during the Pandemic.&quot; </run>
                <run italic='true'>Brookings</run>
                <run>, 11 Jul. 2022, www.brookings.edu/articles/big-cities-saw-historic-population-losses-while-suburban-growth-declined-during-the-pandemic/. Accessed 13 Jul. 2023.

[4] Hardy, Adam. &quot;Workers Are Moving to These 5 U.S. Cities More Than Anywhere Else.&quot; </run>
                <run italic='true'>Money.Com</run>
                <run>, 13 Feb. 2023, money.com/workers-moving-cities-remote-work/. Accessed 16 Jul. 2023.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='11720' id='1188' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone forceUpdate='true' h='11720' id='1189' type-v2='text' w='99032' x='484' y='684'>
              <formatted-text>
                <run fontalignment='1' fontsize='36'>Introduction</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1471' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1470' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='11720' id='1189' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='36'>Introduction</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='58539' id='577' type-v2='text' w='74546' x='24970' y='12404'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run fontsize='12'>Brookings found population declines to be a common phenomenon experienced by many large cities (population &gt;250,000) post-2020 and even beginning in 2019, with Boston experiencing one of the highest percentage declines in 2020-2021 (Frey). And, as shown in my earlier analysis, Boston also saw relatively high declines in 2021-2022. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Declining population in Boston and the Boston metropolitan area has been influenced by the COVID-19 pandemic and the increase in remote work. In a 2023 article, </run>
                    <run fontsize='12' italic='true'>Money.com</run>
                    <run fontsize='12'> found that both remote and hybrid workers made up a higher percentage of recent movers in the US than in-person workers (Hardy). </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Supplementing this, the tables to the left show a nearly 20% difference in the percentage of Boston residents working remotely from a 5-Year Estimate, 2016-2021, and a 1-Year Estimate for just 2021. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Additionally, the percentage of Boston residents working in Boston is higher in the 1-Year Estimate than the 5-Year Estimate, which is possibly related to the recession and related job changes, the increase in remote work, and the decline in Boston&apos;s population. This change could possibly be the result of many other factors besides these, but is an interesting statistic regardless.</run>
                    <run>Æ&#10;&#10;&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='164' h='14714' id='582' is-fixed='true' name='worker stats 21' w='24486' x='484' y='20188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36041' id='570' is-fixed='true' name='worker stats' w='24486' x='484' y='34902'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='28373' id='779' type-v2='text' w='99032' x='484' y='70943'>
                  <formatted-text>
                    <run>Sources (shows last day accessed): 

[1] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: S0801, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#0000ff' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=S0801:+COMMUTING+CHARACTERISTICS+BY+SEX&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSST5Y2021.S0801&amp;quot;' underline='true'>https://data.census.gov/table?q=S0801:+COMMUTING+CHARACTERISTICS+BY+SEX&amp;g=160XX00US2507000&amp;tid=ACSST5Y2021.S0801</run>
                    <run>

[2] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: S0801, U.S. Census Bureau, 1-Year Estimate 2021, </run>
                    <run auto-url='true' fontcolor='#0000ff' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=S0801:+COMMUTING+CHARACTERISTICS+BY+SEX&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSST1Y2021.S0801&amp;quot;' underline='true'>https://data.census.gov/table?q=S0801:+COMMUTING+CHARACTERISTICS+BY+SEX&amp;g=160XX00US2507000&amp;tid=ACSST1Y2021.S0801</run>
                    <run>

[3] Frey, William H. &quot;Big Cities Saw Historic Population Losses While Suburban Growth Declined during the Pandemic.&quot; </run>
                    <run italic='true'>Brookings</run>
                    <run>, 11 Jul. 2022, www.brookings.edu/articles/big-cities-saw-historic-population-losses-while-suburban-growth-declined-during-the-pandemic/. Accessed 13 Jul. 2023.

[4] Hardy, Adam. &quot;Workers Are Moving to These 5 U.S. Cities More Than Anywhere Else.&quot; </run>
                    <run italic='true'>Money.Com</run>
                    <run>, 13 Feb. 2023, money.com/workers-moving-cities-remote-work/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A02715DD-2CA1-47DE-BA9F-B7E92D563C7C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Introduction (2)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#7f0d2b' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='86656' id='6' param='horz' type-v2='layout-flow' w='57315' x='484' y='12660'>
            <zone forceUpdate='true' h='86656' id='7' type-v2='text' w='57315' x='484' y='12660'>
              <formatted-text>
                <run fontsize='12'>Boston is one of my favorite cities, and I was interested in learning more about why residents started leaving during COVID-19 and what city-specific factors might have spurred this on. </run>
                <run>Æ&#10;&#10;</run>
                <run fontsize='12'>In 2022, United Van Lines found </run>
                <run bold='true' fontsize='12'>Massachusetts to be the 7th top outbound state in the US, with &quot;cost&quot; as a top reason for why people are leaving</run>
                <run fontsize='12'>, along with &quot;retirement,&quot;  &quot;family,&quot; and &quot;lifestyle&quot; (&quot;Annual 2020 United Van Lines National Movers Study). </run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontsize='12'>Interestingly, Boston has also been experiencing a &quot;housing crisis&quot; </run>
                <run fontsize='12'>(Crump et al.)</run>
                <run bold='true' fontsize='12'>. </run>
                <run fontsize='12'>Many definitions exist for a &quot;housing crisis,&quot; but in Boston&apos;s case, it takes form in a lack of affordable housing. As written in </run>
                <run fontsize='12' italic='true'>BU Today</run>
                <run fontsize='12'> by Molly Callahan, estimates show production has not kept pace with demand for &quot;decades&quot;, and in 2022, Grace Zokovitch at </run>
                <run fontsize='12' italic='true'>Boston Herald</run>
                <run fontsize='12'> wrote that metro Boston had</run>
                <run bold='true' fontsize='12'> the 14th most severe state of housing underproduction</run>
                <run fontsize='12'> among US metro areas. Additionally, In 2022, Chris Tanaka at </run>
                <run fontsize='12' italic='true'>CBS News</run>
                <run fontsize='12'> wrote that</run>
                <run bold='true' fontsize='12'> the high cost of Massachusetts housing</run>
                <run fontsize='12'> is a significant reason the state is </run>
                <run bold='true' fontsize='12'>among the most expensive in the US</run>
                <run fontsize='12'>.</run>
                <run>Æ&#10;&#10;</run>
                <run fontsize='12'>Inadequate access to affordable housing is partially influenced by natural supply and demand market movement (Judem, Leydon), and even more so by zoning regulations and other policies (Crump et al.). </run>
                <run>Æ&#10;&#10;</run>
                <run fontsize='12'>In 2023, Janelle Nanos of </run>
                <run fontsize='12' italic='true'>The Boston Globe</run>
                <run fontsize='12'> wrote that </run>
                <run bold='true' fontsize='12'>&quot;stratospheric&quot; housing costs were &quot;unquestionably&quot; a reason why Boston residents are relocating</run>
                <run fontsize='12'> elsewhere, and remote work helped facilitate the movement. On top of this, in 2022, Clara McCourt at </run>
                <run fontsize='12' italic='true'>Boston.com</run>
                <run fontsize='12'> wrote about</run>
                <run bold='true' fontsize='12'> residents relocating to Portland, ME in high densities, in part because Portland was viewed (accurately or not) to have better housing options</run>
                <run fontsize='12'> than Boston. </run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='19' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='11976' id='1189' type-v2='text' w='99032' x='484' y='684'>
            <formatted-text>
              <run fontalignment='1' fontsize='36'>Introduction, continued.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='9' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='86656' id='779' type-v2='text' w='41717' x='57799' y='12660'>
            <formatted-text>
              <run fontcolor='#d0ecff'>Sources (shows last day accessed): </run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#d0ecff'>[1] &quot;Annual 2020 United Van Lines National Movers Study.&quot; </run>
              <run fontcolor='#d0ecff' italic='true'>United Van Lines</run>
              <run fontcolor='#d0ecff'>, </run>
              <run auto-url='true' fontcolor='#d0ecff' hyperlink='tabdoc:load-url url=&amp;quot;https://www.unitedvanlines.com/newsroom/movers-study-2022.&amp;quot;'>https://www.unitedvanlines.com/newsroom/movers-study-2022.</run>
              <run fontcolor='#d0ecff'> Accessed 13 Jul. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#d0ecff'>[2] Zokovitch, Grace. &quot;Massachusetts, Nation Have ‘Crippling’ Housing Deficit, Study Reports.&quot; </run>
              <run fontcolor='#d0ecff' italic='true'>Boston Herald</run>
              <run fontcolor='#d0ecff'>, 14 Jul. 2022, www.bostonherald.com/2022/07/14/massachusetts-nation-have-crippling-housing-deficit-study-reports/. Accessed 19 Jul. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#d0ecff'>[3] Callahan, Molly. &quot;Greater Boston Housing Earns “Failing Grade” in Annual Report Card.&quot; </run>
              <run fontcolor='#d0ecff' italic='true'>Boston University Today</run>
              <run fontcolor='#d0ecff'>, 26 Oct. 2022, www.bu.edu/articles/2022/greater-boston-housing-earns-failing-grade-in-annual-report/. Accessed 19 Jul. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#d0ecff'>[4] Tanaka, Chris WBZ-TV. &quot;What Will It Take to Make Massachusetts Housing More Affordable?&quot; </run>
              <run fontcolor='#d0ecff' italic='true'>CBS News</run>
              <run fontcolor='#d0ecff'>, 5 Dec. 2022, www.cbsnews.com/boston/news/why-does-massachusetts-struggle-with-affordable-housing-question-everything/#:~:text=The%20reasons%20for%20the%20cost,for%20income%2Drestricted%20housing%20opportunities. Accessed 19 Jul. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#d0ecff'>[5] Crump, Sarah, et al. &quot;Fixing Greater Boston’s Housing Crisis Starts with Legalizing Apartments near Transit.&quot; </run>
              <run fontcolor='#d0ecff' italic='true'>Brookings</run>
              <run fontcolor='#d0ecff'>, 14 Oct. 2020, www.brookings.edu/articles/fixing-greater-bostons-housing-crisis-starts-with-legalizing-apartments-near-transit/. Accessed 19 Jul. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#d0ecff'>[6] Judem, Emily, and Stephanie Leydon. &quot;Housing Is in Short Supply in Massachusetts. Here’S Why That Matters.&quot; </run>
              <run fontcolor='#d0ecff' italic='true'>WGBH</run>
              <run fontcolor='#d0ecff'>, 7 Jun. 2022, www.wgbh.org/news/local-news/2022/06/07/housing-is-in-short-supply-heres-why-that-matters. Accessed 19 Jul. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#d0ecff'>[7] Nanos, Janelle. &quot;‘People Are Leaving’: Massachusetts Has Lost 110,000 Residents since COVID Began. Is Life Better Out There?&quot; </run>
              <run fontcolor='#d0ecff' italic='true'>Boston.Com</run>
              <run fontcolor='#d0ecff'>, 21 Feb. 2023, www.boston.com/news/the-boston-globe/2023/02/21/people-are-leaving-massachusetts/. Accessed 19 Jul. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#d0ecff'>[8] McCourt, Clara. &quot;Droves of People Are Moving Out of Boston. Their Top Destination? Portland, Maine.&quot; </run>
              <run fontcolor='#d0ecff' italic='true'>Boston.Com</run>
              <run fontcolor='#d0ecff'>, 3 Nov. 2022, www.boston.com/real-estate/real-estate/2022/11/03/people-moving-out-of-boston-to-portland-maine-redfin/. Accessed 19 Jul. 2023.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1470' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1469' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='11976' id='1189' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='36'>Introduction, continued.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='86656' id='7' type-v2='text' w='57315' x='484' y='12660'>
                  <formatted-text>
                    <run fontsize='12'>Boston is one of my favorite cities, and I was interested in learning more about why residents started leaving during COVID-19 and what city-specific factors might have spurred this on. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>In 2022, United Van Lines found </run>
                    <run bold='true' fontsize='12'>Massachusetts to be the 7th top outbound state in the US, with &quot;cost&quot; as a top reason for why people are leaving</run>
                    <run fontsize='12'>, along with &quot;retirement,&quot;  &quot;family,&quot; and &quot;lifestyle&quot; (&quot;Annual 2020 United Van Lines National Movers Study). </run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='12'>Interestingly, Boston has also been experiencing a &quot;housing crisis&quot; </run>
                    <run fontsize='12'>(Crump et al.)</run>
                    <run bold='true' fontsize='12'>. </run>
                    <run fontsize='12'>Many definitions exist for a &quot;housing crisis,&quot; but in Boston&apos;s case, it takes form in a lack of affordable housing. As written in </run>
                    <run fontsize='12' italic='true'>BU Today</run>
                    <run fontsize='12'> by Molly Callahan, estimates show production has not kept pace with demand for &quot;decades&quot;, and in 2022, Grace Zokovitch at </run>
                    <run fontsize='12' italic='true'>Boston Herald</run>
                    <run fontsize='12'> wrote that metro Boston had</run>
                    <run bold='true' fontsize='12'> the 14th most severe state of housing underproduction</run>
                    <run fontsize='12'> among US metro areas. Additionally, In 2022, Chris Tanaka at </run>
                    <run fontsize='12' italic='true'>CBS News</run>
                    <run fontsize='12'> wrote that</run>
                    <run bold='true' fontsize='12'> the high cost of Massachusetts housing</run>
                    <run fontsize='12'> is a significant reason the state is </run>
                    <run bold='true' fontsize='12'>among the most expensive in the US</run>
                    <run fontsize='12'>.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Inadequate access to affordable housing is partially influenced by natural supply and demand market movement (Judem, Leydon), and even more so by zoning regulations and other policies (Crump et al.). </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>In 2023, Janelle Nanos of </run>
                    <run fontsize='12' italic='true'>The Boston Globe</run>
                    <run fontsize='12'> wrote that </run>
                    <run bold='true' fontsize='12'>&quot;stratospheric&quot; housing costs were &quot;unquestionably&quot; a reason why Boston residents are relocating</run>
                    <run fontsize='12'> elsewhere, and remote work helped facilitate the movement. On top of this, in 2022, Clara McCourt at </run>
                    <run fontsize='12' italic='true'>Boston.com</run>
                    <run fontsize='12'> wrote about</run>
                    <run bold='true' fontsize='12'> residents relocating to Portland, ME in high densities, in part because Portland was viewed (accurately or not) to have better housing options</run>
                    <run fontsize='12'> than Boston. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='86656' id='779' type-v2='text' w='41717' x='57799' y='12660'>
                  <formatted-text>
                    <run fontcolor='#d0ecff'>Sources (shows last day accessed): </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#d0ecff'>[1] &quot;Annual 2020 United Van Lines National Movers Study.&quot; </run>
                    <run fontcolor='#d0ecff' italic='true'>United Van Lines</run>
                    <run fontcolor='#d0ecff'>, </run>
                    <run auto-url='true' fontcolor='#d0ecff' hyperlink='tabdoc:load-url url=&amp;quot;https://www.unitedvanlines.com/newsroom/movers-study-2022.&amp;quot;'>https://www.unitedvanlines.com/newsroom/movers-study-2022.</run>
                    <run fontcolor='#d0ecff'> Accessed 13 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#d0ecff'>[2] Zokovitch, Grace. &quot;Massachusetts, Nation Have ‘Crippling’ Housing Deficit, Study Reports.&quot; </run>
                    <run fontcolor='#d0ecff' italic='true'>Boston Herald</run>
                    <run fontcolor='#d0ecff'>, 14 Jul. 2022, www.bostonherald.com/2022/07/14/massachusetts-nation-have-crippling-housing-deficit-study-reports/. Accessed 19 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#d0ecff'>[3] Callahan, Molly. &quot;Greater Boston Housing Earns “Failing Grade” in Annual Report Card.&quot; </run>
                    <run fontcolor='#d0ecff' italic='true'>Boston University Today</run>
                    <run fontcolor='#d0ecff'>, 26 Oct. 2022, www.bu.edu/articles/2022/greater-boston-housing-earns-failing-grade-in-annual-report/. Accessed 19 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#d0ecff'>[4] Tanaka, Chris WBZ-TV. &quot;What Will It Take to Make Massachusetts Housing More Affordable?&quot; </run>
                    <run fontcolor='#d0ecff' italic='true'>CBS News</run>
                    <run fontcolor='#d0ecff'>, 5 Dec. 2022, www.cbsnews.com/boston/news/why-does-massachusetts-struggle-with-affordable-housing-question-everything/#:~:text=The%20reasons%20for%20the%20cost,for%20income%2Drestricted%20housing%20opportunities. Accessed 19 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#d0ecff'>[5] Crump, Sarah, et al. &quot;Fixing Greater Boston’s Housing Crisis Starts with Legalizing Apartments near Transit.&quot; </run>
                    <run fontcolor='#d0ecff' italic='true'>Brookings</run>
                    <run fontcolor='#d0ecff'>, 14 Oct. 2020, www.brookings.edu/articles/fixing-greater-bostons-housing-crisis-starts-with-legalizing-apartments-near-transit/. Accessed 19 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#d0ecff'>[6] Judem, Emily, and Stephanie Leydon. &quot;Housing Is in Short Supply in Massachusetts. Here’S Why That Matters.&quot; </run>
                    <run fontcolor='#d0ecff' italic='true'>WGBH</run>
                    <run fontcolor='#d0ecff'>, 7 Jun. 2022, www.wgbh.org/news/local-news/2022/06/07/housing-is-in-short-supply-heres-why-that-matters. Accessed 19 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#d0ecff'>[7] Nanos, Janelle. &quot;‘People Are Leaving’: Massachusetts Has Lost 110,000 Residents since COVID Began. Is Life Better Out There?&quot; </run>
                    <run fontcolor='#d0ecff' italic='true'>Boston.Com</run>
                    <run fontcolor='#d0ecff'>, 21 Feb. 2023, www.boston.com/news/the-boston-globe/2023/02/21/people-are-leaving-massachusetts/. Accessed 19 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#d0ecff'>[8] McCourt, Clara. &quot;Droves of People Are Moving Out of Boston. Their Top Destination? Portland, Maine.&quot; </run>
                    <run fontcolor='#d0ecff' italic='true'>Boston.Com</run>
                    <run fontcolor='#d0ecff'>, 3 Nov. 2022, www.boston.com/real-estate/real-estate/2022/11/03/people-moving-out-of-boston-to-portland-maine-redfin/. Accessed 19 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5FC84A8A-D248-4785-86D7-34685F20489B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Introduction (3)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#7f0d2b' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='85116' id='6' param='horz' type-v2='layout-flow' w='99032' x='484' y='14200'>
            <zone forceUpdate='true' h='85116' id='7' type-v2='text' w='99032' x='484' y='14200'>
              <formatted-text>
                <run fontsize='12'>Wanting a deeper understanding of the motivations behind population changes in Boston during the pandemic, I wanted to analyze elements of Boston&apos;s housing market that, alongside background research and information, highlight Boston&apos;s housing crisis. I especially wanted, where possible and relevant, to compare Boston to two different groups: a &quot;High Population Set&quot; (cities whose populations exceeded 650,000 in 2020), to contextualize and better understand Boston&apos;s market as a densely populated city, and a &quot;Relocation Set,&quot; to compare metro Boston&apos;s housing market to those for the metropolitan regions where Boston residents are relocating (based on Redfin data for where metro Boston Redfin users are searching for new homes).  </run>
                <run>Æ&#10;&#10;</run>
                <run fontsize='12'>My goal is not to study specific policies or advocate policy changes, but rather to examine market changes and trends from an analytical perspective and take a closer look at Boston&apos;s housing market relative to others in the US. </run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='13516' id='1188' type-v2='text' w='99032' x='484' y='684'>
            <formatted-text>
              <run fontalignment='1' fontsize='36'>Introduction, continued.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1470' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1469' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='13516' id='1188' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='36'>Introduction, continued.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='85116' id='7' type-v2='text' w='99032' x='484' y='14200'>
                  <formatted-text>
                    <run fontsize='12'>Wanting a deeper understanding of the motivations behind population changes in Boston during the pandemic, I wanted to analyze elements of Boston&apos;s housing market that, alongside background research and information, highlight Boston&apos;s housing crisis. I especially wanted, where possible and relevant, to compare Boston to two different groups: a &quot;High Population Set&quot; (cities whose populations exceeded 650,000 in 2020), to contextualize and better understand Boston&apos;s market as a densely populated city, and a &quot;Relocation Set,&quot; to compare metro Boston&apos;s housing market to those for the metropolitan regions where Boston residents are relocating (based on Redfin data for where metro Boston Redfin users are searching for new homes).  </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>My goal is not to study specific policies or advocate policy changes, but rather to examine market changes and trends from an analytical perspective and take a closer look at Boston&apos;s housing market relative to others in the US. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EC89751F-3EFB-42B1-9DD8-940EC9601B03}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Invent vs. MOS Population Correlations'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='82207' id='198' is-fixed='true' type-v2='layout-basic' w='32890' x='66626' y='17109'>
            <zone h='82207' id='3' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='32890' x='66626' y='17109'>
              <zone fixed-size='446' forceUpdate='true' h='82207' id='17' is-fixed='true' type-v2='text' w='32890' x='66626' y='17109'>
                <formatted-text>
                  <run fontsize='12'>As population (Boston-Cambridge-Newton) and median list price have increased, months of supply and inventory have both respectively decreased, with a statistically significant exponential trend line. Correlation suggests a strong relationship between these variables in the last 10 years.</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>By the definition of an exponential trend, this means that </run>
                  <run bold='true' fontsize='12'>months of housing supply and housing inventory in metro Boston are decreasing faster than its population is increasing</run>
                  <run fontsize='12'>. Including median list price in the analysis serves to demonstrate the negative relationship between price and inventory/months of supply. </run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='82207' id='8' param='vert' type-v2='layout-flow' w='66142' x='484' y='17109'>
            <zone h='41103' id='200' name='mos vs population, listprice' w='66142' x='484' y='17109'>
              <layout-cache minheight='255' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='41103' id='209' name='inventory vs population, listprice' w='66142' x='484' y='58212'>
              <layout-cache minheight='255' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='16425' id='19' type-v2='text' w='99032' x='484' y='684'>
            <formatted-text>
              <run fontsize='8'>Housing data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
              <run fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
              <run>Æ&#10;</run>
              <run fontsize='8'>Citation:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#1b1b1b' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
              <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
              <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
              <run>Æ&#10;</run>
              <run fontsize='8'>&quot;All Residential&quot; Property Type includes Condo/Co-op, Multi-Family (2-4 unit), Single Family Residential, and Townhouse</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='8'>Population Data: </run>
              <run>Æ&#10;</run>
              <run fontcolor='#1b1b1b' fontsize='8'>[3] U.S. Census Bureau, Resident Population in Boston-Cambridge-Newton, MA-NH (MSA) [BOSPOP], retrieved from FRED, Federal Reserve Bank of St. Louis; </run>
              <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://fred.stlouisfed.org/series/BOSPOP&amp;quot;'>https://fred.stlouisfed.org/series/BOSPOP</run>
              <run fontcolor='#1b1b1b' fontsize='8'> , July 10, 2023.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1525' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1524' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='16425' id='19' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run fontsize='8'>Housing data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>&quot;All Residential&quot; Property Type includes Condo/Co-op, Multi-Family (2-4 unit), Single Family Residential, and Townhouse</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='8'>Population Data: </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[3] U.S. Census Bureau, Resident Population in Boston-Cambridge-Newton, MA-NH (MSA) [BOSPOP], retrieved from FRED, Federal Reserve Bank of St. Louis; </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://fred.stlouisfed.org/series/BOSPOP&amp;quot;'>https://fred.stlouisfed.org/series/BOSPOP</run>
                    <run fontcolor='#1b1b1b' fontsize='8'> , July 10, 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41103' id='200' is-fixed='true' name='mos vs population, listprice' w='66142' x='484' y='17109'>
                  <layout-cache minheight='255' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='446' forceUpdate='true' h='82207' id='17' type-v2='text' w='32890' x='66626' y='17109'>
                  <formatted-text>
                    <run fontsize='12'>As population (Boston-Cambridge-Newton) and median list price have increased, months of supply and inventory have both respectively decreased, with a statistically significant exponential trend line. Correlation suggests a strong relationship between these variables in the last 10 years.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>By the definition of an exponential trend, this means that </run>
                    <run bold='true' fontsize='12'>months of housing supply and housing inventory in metro Boston are decreasing faster than its population is increasing</run>
                    <run fontsize='12'>. Including median list price in the analysis serves to demonstrate the negative relationship between price and inventory/months of supply. </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41103' id='209' is-fixed='true' name='inventory vs population, listprice' w='66142' x='484' y='58212'>
                  <layout-cache minheight='255' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E0D6C5EA-6EAE-4757-B9E1-B8A9354CDE21}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Inventory, MOS - metro'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#0b4270' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      </datasources>
      <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='79556' id='198' is-fixed='true' type-v2='layout-basic' w='49516' x='50000' y='19760'>
            <zone h='79556' id='3' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='49516' x='50000' y='19760'>
              <zone fixed-size='446' forceUpdate='true' h='79556' id='17' is-fixed='true' type-v2='text' w='49516' x='50000' y='19760'>
                <formatted-text>
                  <run fontsize='11'>Patterns for corresponding metropolitan regions are generally similar or exaggerated relative to those for cities in the High Population Set. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='11'>In the last 10 years, metro Boston&apos;s </run>
                  <run bold='true' fontsize='11'>housing inventory and months of housing supply have declined</run>
                  <run fontsize='11'> (left)</run>
                  <run bold='true' fontsize='11'>.</run>
                  <run fontsize='11'> There has been a general downwards trend in both for metro areas with cities whose population exceeds 650,000. Metro Boston has seen a comparatively steep decline. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='11'>In 2012, metro Boston had inventory and/or months of supply levels well above metro San Francisco, CA; Los Angeles, CA; Washington DC; and Seattle, WA. </run>
                  <run bold='true' fontsize='11'>Within a ten-year period, these levels became far closer in range. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='11'>Consistently high on the Months of Supply graph are metro regions housing Philadelphia, PA; New York, NY; and Chicago, IL. By contrast, metro Seattle, San Francisco, and San Jose remain some of the lowest. Metro El Paso, TX saw a considerable decline, starting off as having one of the longest durations in 2012 and ending up roughly around the High Population Set median in 2022 and 2023. Metro areas with similarly shaped declines to metro Boston include Columbus, OH; Charlotte, NC; Fort Worth, TX; Nashville, TN; and more. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='11'>Interestingly, this is not the same for Inventory levels. Most seeing similar declines in months of supply durations saw relatively consistent inventory levels from 2012-2023. Metro San Francisco and San Jose consistently saw some of the lowest inventory levels. Metro Chicago and New York saw some of the highest as well, matching with months of supply trends. </run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='40633' id='5' param='vert' type-v2='layout-flow' w='49516' x='484' y='58683'>
            <zone h='40633' id='15' name='mos' w='49516' x='484' y='58683'>
              <layout-cache minheight='220' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='38923' id='8' param='horz' type-v2='layout-flow' w='49516' x='484' y='19760'>
            <zone h='38923' id='10' name='inventory' w='49516' x='484' y='19760'>
              <layout-cache has-max-size-h='true' maxheight='54' minheight='54' minwidth='178' type-h='scalable' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='19076' id='30' param='horz' type-v2='layout-flow' w='52055' x='484' y='684'>
            <zone fixed-size='267' h='19076' id='11' is-fixed='true' name='inventory' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' w='16627' x='484' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='260' h='19076' id='12' is-fixed='true' name='inventory' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='filter' w='16203' x='17111' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='1125' h='19076' id='14' is-fixed='true' name='inventory' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='color' w='19225' x='33314' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='19076' id='19' type-v2='text' w='46977' x='52539' y='684'>
            <formatted-text>
              <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
              <run>Æ&#10;</run>
              <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. Check or uncheck cities/property types to add/remove. </run>
              <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
              <run underline='true'>Downloadable Housing Market Data - Redfin</run>
              <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
              <run italic='true'>Redfin News Data Center</run>
              <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1531' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1530' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='19076' id='19' type-v2='text' w='46977' x='52539' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. Check or uncheck cities/property types to add/remove. </run>
                    <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run italic='true'>Redfin News Data Center</run>
                    <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='19076' id='11' mode='checkdropdown' name='inventory' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' w='16627' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='260' h='19076' id='12' mode='checkdropdown' name='inventory' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='filter' w='16203' x='17111' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38923' id='10' is-fixed='true' name='inventory' w='49516' x='484' y='19760'>
                  <layout-cache has-max-size-h='true' maxheight='54' minheight='54' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='1125' h='19076' id='14' name='inventory' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='color' w='19225' x='33314' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='446' forceUpdate='true' h='79556' id='17' type-v2='text' w='49516' x='50000' y='19760'>
                  <formatted-text>
                    <run fontsize='11'>Patterns for corresponding metropolitan regions are generally similar or exaggerated relative to those for cities in the High Population Set. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>In the last 10 years, metro Boston&apos;s </run>
                    <run bold='true' fontsize='11'>housing inventory and months of housing supply have declined</run>
                    <run fontsize='11'> (left)</run>
                    <run bold='true' fontsize='11'>.</run>
                    <run fontsize='11'> There has been a general downwards trend in both for metro areas with cities whose population exceeds 650,000. Metro Boston has seen a comparatively steep decline. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>In 2012, metro Boston had inventory and/or months of supply levels well above metro San Francisco, CA; Los Angeles, CA; Washington DC; and Seattle, WA. </run>
                    <run bold='true' fontsize='11'>Within a ten-year period, these levels became far closer in range. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Consistently high on the Months of Supply graph are metro regions housing Philadelphia, PA; New York, NY; and Chicago, IL. By contrast, metro Seattle, San Francisco, and San Jose remain some of the lowest. Metro El Paso, TX saw a considerable decline, starting off as having one of the longest durations in 2012 and ending up roughly around the High Population Set median in 2022 and 2023. Metro areas with similarly shaped declines to metro Boston include Columbus, OH; Charlotte, NC; Fort Worth, TX; Nashville, TN; and more. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Interestingly, this is not the same for Inventory levels. Most seeing similar declines in months of supply durations saw relatively consistent inventory levels from 2012-2023. Metro San Francisco and San Jose consistently saw some of the lowest inventory levels. Metro Chicago and New York saw some of the highest as well, matching with months of supply trends. </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40633' id='15' is-fixed='true' name='mos' w='49516' x='484' y='58683'>
                  <layout-cache minheight='220' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{26AB0F87-D9A3-4339-BDB4-689A5101847D}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Inventory, MOS -cities'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
      </datasources>
      <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='953' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='951' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='79470' id='198' is-fixed='true' type-v2='layout-basic' w='49516' x='50000' y='19846'>
                <zone h='79470' id='3' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='49516' x='50000' y='19846'>
                  <zone fixed-size='446' forceUpdate='true' h='79470' id='17' is-fixed='true' type-v2='text' w='49516' x='50000' y='19846'>
                    <formatted-text>
                      <run fontsize='11'>In the last 10 years, Boston&apos;s </run>
                      <run bold='true' fontsize='11'>housing inventory and months of housing supply have declined</run>
                      <run fontsize='11'> (left)</run>
                      <run bold='true' fontsize='11'>.</run>
                      <run fontsize='11'> There has been a general downwards trend in both for cities whose population exceeds 650,000. Boston has seen a rather steep decline, even compared to many of these cities. </run>
                      <run bold='true' fontsize='11'>Boston&apos;s median inventory level is less than half the High Population Set median inventory leve</run>
                      <run fontsize='11'>l, falling at 1,272 and the set median at 2,776 in the years 2012 through 2023. Boston is at the median and slightly below average in terms of months of supply duration from 2012 to 2023 relative to these cities.</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontsize='11'>Consistently low in ranking for these features are Denver, CO; San Francisco, CA; San Diego, CA; San Jose, CA; Seattle, WA; and Washington, DC.</run>
                      <run bold='true' fontsize='11'> Boston falls around these cities for some of the lowest inventory levels on the chart. </run>
                      <run fontsize='11'>El Paso, TX and Charlotte, NC started off as having some of the highest inventory levels and had some of the steepest declines, falling to below the High Population Set median in 2023. Philadelphia, PA saw a steep decline in months of supply as well. </run>
                      <run>Æ&#10;&#10;</run>
                      <run fontsize='11'>Chicago, IL and New York, NY see some of the highest inventory levels. Chicago remains comparatively high on inventory levels, and New York continues to see some of the highest. El Paso, TX has considerably high months of supply as well. </run>
                      <run>Æ&#10;&#10;&#10;</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='82208' id='8' param='vert' type-v2='layout-flow' w='49516' x='484' y='17108'>
                <zone h='41104' id='946' name='Cities - Inventory' w='49516' x='484' y='17108'>
                  <layout-cache minheight='220' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='41104' id='950' name='Cities - MOS' w='49516' x='484' y='58212'>
                  <layout-cache minheight='220' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone forceUpdate='true' h='19162' id='19' type-v2='text' w='49516' x='50000' y='684'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                  <run>Æ&#10;</run>
                  <run bold='true' fontcolor='#000000' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. Check or uncheck cities/property types to add/remove them to/from the graphs.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                  <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>Citation:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                  <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                  <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16424' id='954' name='Cities - MOS' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type-v2='filter' w='13362' x='12817' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16424' id='955' name='Cities - MOS' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type-v2='filter' w='12333' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16424' id='956' name='Cities - MOS' pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' type-v2='color' w='23821' x='26179' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1540' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98632' id='1539' param='vert' type-v2='layout-flow' w='99032' x='484' y='684'>
                <zone forceUpdate='true' h='19162' id='19' type-v2='text' w='49516' x='50000' y='684'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. Check or uncheck cities/property types to add/remove them to/from the graphs.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41104' id='946' is-fixed='true' name='Cities - Inventory' w='49516' x='484' y='17108'>
                  <layout-cache minheight='220' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='446' forceUpdate='true' h='79470' id='17' type-v2='text' w='49516' x='50000' y='19846'>
                  <formatted-text>
                    <run fontsize='11'>In the last 10 years, Boston&apos;s </run>
                    <run bold='true' fontsize='11'>housing inventory and months of housing supply have declined</run>
                    <run fontsize='11'> (left)</run>
                    <run bold='true' fontsize='11'>.</run>
                    <run fontsize='11'> There has been a general downwards trend in both for cities whose population exceeds 650,000. Boston has seen a rather steep decline, even compared to many of these cities. </run>
                    <run bold='true' fontsize='11'>Boston&apos;s median inventory level is less than half the High Population Set median inventory leve</run>
                    <run fontsize='11'>l, falling at 1,272 and the set median at 2,776 in the years 2012 through 2023. Boston is at the median and slightly below average in terms of months of supply duration from 2012 to 2023 relative to these cities.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Consistently low in ranking for these features are Denver, CO; San Francisco, CA; San Diego, CA; San Jose, CA; Seattle, WA; and Washington, DC.</run>
                    <run bold='true' fontsize='11'> Boston falls around these cities for some of the lowest inventory levels on the chart. </run>
                    <run fontsize='11'>El Paso, TX and Charlotte, NC started off as having some of the highest inventory levels and had some of the steepest declines, falling to below the High Population Set median in 2023. Philadelphia, PA saw a steep decline in months of supply as well. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Chicago, IL and New York, NY see some of the highest inventory levels. Chicago remains comparatively high on inventory levels, and New York continues to see some of the highest. El Paso, TX has considerably high months of supply as well. </run>
                    <run>Æ&#10;&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16424' id='954' mode='checkdropdown' name='Cities - MOS' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type-v2='filter' w='13362' x='12817' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16424' id='955' mode='checkdropdown' name='Cities - MOS' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type-v2='filter' w='12333' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41104' id='950' is-fixed='true' name='Cities - MOS' w='49516' x='484' y='58212'>
                  <layout-cache minheight='220' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16424' id='956' name='Cities - MOS' pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' type-v2='color' w='23821' x='26179' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{192A9DFB-1A74-4337-A22B-38A91A15D4E1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='MC - Transition'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='49316' id='3' type-v2='text' w='99032' x='484' y='684'>
            <formatted-text>
              <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Market Characteristics</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49316' id='925' param='horz' type-v2='layout-flow' w='99032' x='484' y='50000'>
            <zone forceUpdate='true' h='49316' id='934' type-v2='text' w='46372' x='484' y='50000'>
              <formatted-text>
                <run fontsize='12'>In this section, I look into miscellaneous market characteristics that aid in understanding Boston&apos;s housing crisis. Low vacancy rates can, alongside other factors, suggest a problem with low supply and/or high demand for housing. Small durations of time spent on the market can suggest a similar problem, since housing might be swept up faster by buyers if there is stiff competition. Additionally, I look into &quot;income-restricted housing inventory,&quot; as well as characteristics of newly constructed homes versus homes that already exist in Boston. These market characteristics suggest a low supply of affordable housing for both newly constructed inventory and income-restricted inventory. They also begin to show a cohesive picture, alongside previously studied information, for a lack of affordable housing in Boston.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='49316' id='935' type-v2='text' w='52660' x='46856' y='50000'>
              <formatted-text>
                <run bold='true'>Sources for this section are below:</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
                <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[3] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[4] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;tid=ACSDP5Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;tid=ACSDP5Y2021.DP04</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[5] v</run>
                <run fontcolor='#000000' fontsize='8'>an Buskirk, Chris. &quot;Bye-bye Bay State: High Housing Costs and Low Transportation Reliability Driving Outmigration.&quot; </run>
                <run fontcolor='#000000' fontsize='8' italic='true'>Boston Herald</run>
                <run fontcolor='#000000' fontsize='8'>, 24 May 2023. </run>
                <run auto-url='true' fontcolor='#000000' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bostonherald.com/2023/05/24/housing-costs-transportation-reliability-factors-in-high-levels-of-outmigration-in-massachusetts-report/&amp;quot;'>https://www.bostonherald.com/2023/05/24/housing-costs-transportation-reliability-factors-in-high-levels-of-outmigration-in-massachusetts-report/</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000' fontsize='8'>[6] City of Boston. &quot;Income-Restricted Housing Inventory.&quot; </run>
                <run fontcolor='#000000' fontsize='8' italic='true'>Analyze Boston</run>
                <run fontcolor='#000000' fontsize='8'>, Boston.gov, 6 Jul. 2023, data.boston.gov/dataset/income-restricted-housing. Accessed 19 Jul. 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000' fontsize='8'>[7] Smilgius, Vivi. &quot;Report Ranks Boston 35th in the Nation for Building Housing.&quot; </run>
                <run fontcolor='#000000' fontsize='8' italic='true'>Boston.Com</run>
                <run fontcolor='#000000' fontsize='8'>, 24 Mar. 2023, www.boston.com/real-estate/renting/2023/03/24/metro-boston-ranked-35th-building-housing/. Accessed 27 Jul. 2023.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1099' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1098' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='49316' id='3' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Market Characteristics</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49316' id='934' type-v2='text' w='46372' x='484' y='50000'>
                  <formatted-text>
                    <run fontsize='12'>In this section, I look into miscellaneous market characteristics that aid in understanding Boston&apos;s housing crisis. Low vacancy rates can, alongside other factors, suggest a problem with low supply and/or high demand for housing. Small durations of time spent on the market can suggest a similar problem, since housing might be swept up faster by buyers if there is stiff competition. Additionally, I look into &quot;income-restricted housing inventory,&quot; as well as characteristics of newly constructed homes versus homes that already exist in Boston. These market characteristics suggest a low supply of affordable housing for both newly constructed inventory and income-restricted inventory. They also begin to show a cohesive picture, alongside previously studied information, for a lack of affordable housing in Boston.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49316' id='935' type-v2='text' w='52660' x='46856' y='50000'>
                  <formatted-text>
                    <run bold='true'>Sources for this section are below:</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
                    <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[3] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[4] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;tid=ACSDP5Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;tid=ACSDP5Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[5] v</run>
                    <run fontcolor='#000000' fontsize='8'>an Buskirk, Chris. &quot;Bye-bye Bay State: High Housing Costs and Low Transportation Reliability Driving Outmigration.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Boston Herald</run>
                    <run fontcolor='#000000' fontsize='8'>, 24 May 2023. </run>
                    <run auto-url='true' fontcolor='#000000' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bostonherald.com/2023/05/24/housing-costs-transportation-reliability-factors-in-high-levels-of-outmigration-in-massachusetts-report/&amp;quot;'>https://www.bostonherald.com/2023/05/24/housing-costs-transportation-reliability-factors-in-high-levels-of-outmigration-in-massachusetts-report/</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[6] City of Boston. &quot;Income-Restricted Housing Inventory.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Analyze Boston</run>
                    <run fontcolor='#000000' fontsize='8'>, Boston.gov, 6 Jul. 2023, data.boston.gov/dataset/income-restricted-housing. Accessed 19 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[7] Smilgius, Vivi. &quot;Report Ranks Boston 35th in the Nation for Building Housing.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Boston.Com</run>
                    <run fontcolor='#000000' fontsize='8'>, 24 Mar. 2023, www.boston.com/real-estate/renting/2023/03/24/metro-boston-ranked-35th-building-housing/. Accessed 27 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{56AA2300-A369-4F8F-8F31-62E0374544FB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='MOS Metro'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#0b4270' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      </datasources>
      <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='57228' id='198' is-fixed='true' type-v2='layout-basic' w='99032' x='484' y='24979'>
            <zone h='57228' id='199' param='vert' type-v2='layout-flow' w='99032' x='484' y='24979'>
              <zone h='57228' id='876' is-fixed='true' type-v2='layout-basic' w='99032' x='484' y='24979'>
                <zone h='57228' id='195' param='horz' type-v2='layout-flow' w='58041' x='484' y='24979'>
                  <zone h='57228' id='196' name='mos (2)' w='58041' x='484' y='24979'>
                    <layout-cache cell-count-w='150' minheight='194' non-cell-size-w='67' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='57228' id='877' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='40991' x='58525' y='24979'>
                  <zone fixed-size='446' forceUpdate='true' h='57228' id='17' is-fixed='true' type-v2='text' w='40991' x='58525' y='24979'>
                    <formatted-text>
                      <run fontsize='11'>While the city of Boston hovers around the High Population Set median for months of supply duration, considering broader metropolitan regions shows something a little different. </run>
                      <run>Æ&#10;&#10;</run>
                      <run fontsize='11'>Examining 2022 and 2023 by quarter relative to corresponding High Population metro areas shows that metro Boston&apos;s median is typically below the median for metro areas, and is even, in some quarters, below the set&apos;s 25th percentile. Visually, the Boston metro area</run>
                      <run bold='true' fontsize='11'> can be seen as having one of the lowest months of supply durations relative to these metro areas</run>
                      <run fontsize='11'>.Boston often falls around metro Washington, DC, Seattle, San Jose, and Indianapolis, IN. </run>
                      <run>Æ&#10;&#10;</run>
                      <run fontsize='11'>This means the months of supply duration for Boston and some of its surrounding areas is comparatively low to other cities on the chart and their surrounding areas, respectively. </run>
                      <run>Æ&#10;</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='17109' id='30' param='horz' type-v2='layout-flow' w='52055' x='484' y='684'>
            <zone fixed-size='267' h='17109' id='11' is-fixed='true' name='mos (2)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' w='16627' x='484' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='396' h='17109' id='882' is-fixed='true' name='mos (2)' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type-v2='color' w='24426' x='17111' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='19076' id='19' type-v2='text' w='46977' x='52539' y='684'>
            <formatted-text>
              <run bold='true' italic='true'>Check or uncheck cities/property types to add/remove. </run>
              <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
              <run underline='true'>Downloadable Housing Market Data - Redfin</run>
              <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
              <run italic='true'>Redfin News Data Center</run>
              <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7186' id='878' type-v2='empty' w='52055' x='484' y='17793'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5219' id='879' type-v2='empty' w='46977' x='52539' y='19760'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='17109' id='891' type-v2='empty' w='99032' x='484' y='82207'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1531' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1530' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='19076' id='19' type-v2='text' w='46977' x='52539' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Check or uncheck cities/property types to add/remove. </run>
                    <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run italic='true'>Redfin News Data Center</run>
                    <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='17109' id='11' mode='checkdropdown' name='mos (2)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' w='16627' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57228' id='196' is-fixed='true' name='mos (2)' w='58041' x='484' y='24979'>
                  <layout-cache cell-count-w='150' minheight='194' non-cell-size-w='67' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='396' h='17109' id='882' name='mos (2)' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type-v2='color' w='24426' x='17111' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='446' forceUpdate='true' h='57228' id='17' type-v2='text' w='40991' x='58525' y='24979'>
                  <formatted-text>
                    <run fontsize='11'>While the city of Boston hovers around the High Population Set median for months of supply duration, considering broader metropolitan regions shows something a little different. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Examining 2022 and 2023 by quarter relative to corresponding High Population metro areas shows that metro Boston&apos;s median is typically below the median for metro areas, and is even, in some quarters, below the set&apos;s 25th percentile. Visually, the Boston metro area</run>
                    <run bold='true' fontsize='11'> can be seen as having one of the lowest months of supply durations relative to these metro areas</run>
                    <run fontsize='11'>.Boston often falls around metro Washington, DC, Seattle, San Jose, and Indianapolis, IN. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>This means the months of supply duration for Boston and some of its surrounding areas is comparatively low to other cities on the chart and their surrounding areas, respectively. </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{71A702CB-8857-454D-BD15-3A2DCAF6267F}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Median Sale Price'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
      </datasources>
      <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='1039' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='392' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='81609' id='86' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='48670' x='50846' y='17707'>
                <zone h='40805' id='1037' name='Cities - Med Sale Close' w='48670' x='50846' y='17707'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='441' forceUpdate='true' h='40804' id='79' is-fixed='true' type-v2='text' w='48670' x='50846' y='58512'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run fontsize='12'>Since 2021,</run>
                    <run bold='true' fontsize='12'> Boston has been around the 75th percentile and 6th most expensive for median sale price </run>
                    <run fontsize='12'>among cities whose population exceed 650,000.</run>
                    <run bold='true' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='12'>In 2022</run>
                    <run fontsize='12'>, the last full year of data, </run>
                    <run bold='true' fontsize='12'>Boston had an average median sale price of $760,208</run>
                    <run fontsize='12'> across 12 months of collected data, </run>
                    <run bold='true' fontsize='12'>which is almost twice the High Population Set median for that year</run>
                    <run fontsize='12'>. The High Population Set median in 2012 is around $424,000. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Boston&apos;s median sale price has </run>
                    <run bold='true' fontsize='12'>risen 3 clusters since 2012</run>
                    <run fontsize='12'>. Its starting cluster has a median sale price just over 434k, whereas its current cluster (Cluster 4) has a median of 800k, almost twice the original cluster median. </run>
                    <run bold='true' fontsize='12'>Boston has consistently landed around cities like New York, NY; Washington, DC; Seattle, WA; and Denver, CO. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone forceUpdate='true' h='17023' id='87' type-v2='text' w='58887' x='40629' y='684'>
                <formatted-text>
                  <run bold='true' italic='true'>Click on color legend to highlight cluster. Cluster medians and averages will be shown by highlighting the cluster. Check or uncheck property types to view one or more at a time.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                  <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>Citation:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                  <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                  <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='81609' id='1017' name='Cities - Med Sale' w='50362' x='484' y='17707'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17023' id='1020' name='Cities - Med Sale' pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:AdhocCluster:1:ok]' type-v2='color' w='18017' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17023' id='1040' name='Cities - Med Sale Close' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type-v2='filter' values='database' w='22128' x='18501' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1568' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1567' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='17023' id='87' type-v2='text' w='58887' x='40629' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Click on color legend to highlight cluster. Cluster medians and averages will be shown by highlighting the cluster. Check or uncheck property types to view one or more at a time.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='81609' id='1017' is-fixed='true' name='Cities - Med Sale' w='50362' x='484' y='17707'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17023' id='1020' name='Cities - Med Sale' pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:AdhocCluster:1:ok]' type-v2='color' w='18017' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17023' id='1040' mode='checkdropdown' name='Cities - Med Sale Close' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type-v2='filter' values='database' w='22128' x='18501' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40805' id='1037' is-fixed='true' name='Cities - Med Sale Close' w='48670' x='50846' y='17707'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='441' forceUpdate='true' h='40804' id='79' type-v2='text' w='48670' x='50846' y='58512'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run fontsize='12'>Since 2021,</run>
                    <run bold='true' fontsize='12'> Boston has been around the 75th percentile and 6th most expensive for median sale price </run>
                    <run fontsize='12'>among cities whose population exceed 650,000.</run>
                    <run bold='true' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='12'>In 2022</run>
                    <run fontsize='12'>, the last full year of data, </run>
                    <run bold='true' fontsize='12'>Boston had an average median sale price of $760,208</run>
                    <run fontsize='12'> across 12 months of collected data, </run>
                    <run bold='true' fontsize='12'>which is almost twice the High Population Set median for that year</run>
                    <run fontsize='12'>. The High Population Set median in 2012 is around $424,000. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Boston&apos;s median sale price has </run>
                    <run bold='true' fontsize='12'>risen 3 clusters since 2012</run>
                    <run fontsize='12'>. Its starting cluster has a median sale price just over 434k, whereas its current cluster (Cluster 4) has a median of 800k, almost twice the original cluster median. </run>
                    <run bold='true' fontsize='12'>Boston has consistently landed around cities like New York, NY; Washington, DC; Seattle, WA; and Denver, CO. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0AEEC59F-2F89-4C8E-97A0-6803DA7F8C0F}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Metro - Median Sale Price'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#0b4270' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      </datasources>
      <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
        <column auto-hidden='true' caption='Clusters (2)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:3]' parent-model='[AnalyticModel:{0a95e730-a73c-4b4c-af3a-5536d5904aa3}]' role='dimension' type='ordinal'>
          <aliases>
            <alias key='-1' value='Cluster Outliers' />
            <alias key='0' value='Not Clustered' />
            <alias key='1' value='Cluster 1' />
            <alias key='2' value='Cluster 2' />
            <alias key='3' value='Cluster 3' />
            <alias key='4' value='Cluster 4' />
            <alias key='5' value='Cluster 5' />
            <alias key='6' value='Cluster 6' />
            <alias key='7' value='Cluster 7' />
            <alias key='8' value='Cluster 8' />
            <alias key='9' value='Cluster 9' />
            <alias key='10' value='Cluster 10' />
            <alias key='11' value='Cluster 11' />
            <alias key='12' value='Cluster 12' />
            <alias key='13' value='Cluster 13' />
            <alias key='14' value='Cluster 14' />
            <alias key='15' value='Cluster 15' />
            <alias key='16' value='Cluster 16' />
            <alias key='17' value='Cluster 17' />
            <alias key='18' value='Cluster 18' />
            <alias key='19' value='Cluster 19' />
            <alias key='20' value='Cluster 20' />
            <alias key='21' value='Cluster 21' />
            <alias key='22' value='Cluster 22' />
            <alias key='23' value='Cluster 23' />
            <alias key='24' value='Cluster 24' />
            <alias key='25' value='Cluster 25' />
            <alias key='26' value='Cluster 26' />
            <alias key='27' value='Cluster 27' />
            <alias key='28' value='Cluster 28' />
            <alias key='29' value='Cluster 29' />
            <alias key='30' value='Cluster 30' />
            <alias key='31' value='Cluster 31' />
            <alias key='32' value='Cluster 32' />
            <alias key='33' value='Cluster 33' />
            <alias key='34' value='Cluster 34' />
            <alias key='35' value='Cluster 35' />
            <alias key='36' value='Cluster 36' />
            <alias key='37' value='Cluster 37' />
            <alias key='38' value='Cluster 38' />
            <alias key='39' value='Cluster 39' />
            <alias key='40' value='Cluster 40' />
            <alias key='41' value='Cluster 41' />
            <alias key='42' value='Cluster 42' />
            <alias key='43' value='Cluster 43' />
            <alias key='44' value='Cluster 44' />
            <alias key='45' value='Cluster 45' />
            <alias key='46' value='Cluster 46' />
            <alias key='47' value='Cluster 47' />
            <alias key='48' value='Cluster 48' />
            <alias key='49' value='Cluster 49' />
            <alias key='50' value='Cluster 50' />
          </aliases>
        </column>
        <column-instance column='[AdhocCluster:3]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:3:ok]' pivot='key' type='ordinal' />
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[none:AdhocCluster:3:ok]' palette='blue_10_0' type='palette'>
              <map to='#2a5783'>
                <bucket>7</bucket>
              </map>
              <map to='#2a5783'>
                <bucket>9</bucket>
              </map>
              <map to='#2a5783'>
                <bucket>22</bucket>
              </map>
              <map to='#300561'>
                <bucket>0</bucket>
              </map>
              <map to='#305d89'>
                <bucket>21</bucket>
              </map>
              <map to='#305d8a'>
                <bucket>6</bucket>
              </map>
              <map to='#366390'>
                <bucket>20</bucket>
              </map>
              <map to='#396794'>
                <bucket>8</bucket>
              </map>
              <map to='#3b6996'>
                <bucket>19</bucket>
              </map>
              <map to='#406e9c'>
                <bucket>18</bucket>
              </map>
              <map to='#4574a2'>
                <bucket>17</bucket>
              </map>
              <map to='#4878a6'>
                <bucket>4</bucket>
              </map>
              <map to='#4a7ba9'>
                <bucket>16</bucket>
              </map>
              <map to='#5081ae'>
                <bucket>15</bucket>
              </map>
              <map to='#5687b3'>
                <bucket>14</bucket>
              </map>
              <map to='#5b8cb8'>
                <bucket>3</bucket>
              </map>
              <map to='#5d8eb9'>
                <bucket>13</bucket>
              </map>
              <map to='#6394be'>
                <bucket>12</bucket>
              </map>
              <map to='#6a9bc3'>
                <bucket>11</bucket>
              </map>
              <map to='#71a2c8'>
                <bucket>10</bucket>
              </map>
              <map to='#80b0d5'>
                <bucket>2</bucket>
              </map>
              <map to='#a5cfe9'>
                <bucket>1</bucket>
              </map>
              <map to='#b9ddf1'>
                <bucket>5</bucket>
              </map>
            </encoding>
          </style-rule>
        </style>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='693' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='392' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='80069' id='86' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='47946' x='51570' y='19247'>
                <zone h='40034' id='373' name='med_sale_price (2)' w='47944' x='51572' y='19247'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='441' forceUpdate='true' h='40035' id='79' is-fixed='true' type-v2='text' w='47944' x='51572' y='59281'>
                  <formatted-text>
                    <run fontsize='12'>Metropolitan regions have seen similar patterns to their corresponding cities in regards to median sale price.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Since 2021,</run>
                    <run bold='true' fontsize='12'> metro Boston has been the 75th percentile and 7th most expensive for median sale price </run>
                    <run fontsize='12'>among metro areas with cities whose population exceeds 650,000.</run>
                    <run bold='true' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Metro Boston&apos;s median sale price has </run>
                    <run bold='true' fontsize='12'>risen from cluster 1 in 2012 to one of the highest in cluster 3 since 2021</run>
                    <run fontsize='12'>. Cluster 1 has a median sale price just over 200k, whereas cluster 3 has a median of 700k. Metro Boston has consistently landed around metropolitan regions like Washington DC, New York, Seattle, and Denver. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='84004' id='251' name='med_sale_price' w='51086' x='484' y='15312'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14628' id='252' name='med_sale_price' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]' type-v2='color' w='14207' x='16324' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='18563' id='87' type-v2='text' w='47946' x='51570' y='684'>
                <formatted-text>
                  <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                  <run>Æ&#10;</run>
                  <run bold='true' italic='true'>Click on color legend to highlight specific clusters on both graphs. Medians and averages will be shown by highlighting the cluster. Check or uncheck cities/property types to add/remove. </run>
                  <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                  <run underline='true'>Downloadable Housing Market Data - Redfin</run>
                  <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                  <run italic='true'>Redfin News Data Center</run>
                  <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14628' id='395' name='med_sale_price' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]' type-v2='filter' values='database' w='21039' x='30531' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14628' id='694' name='med_sale_price' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' values='database' w='15840' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1568' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1567' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='18563' id='87' type-v2='text' w='47946' x='51570' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific clusters on both graphs. Medians and averages will be shown by highlighting the cluster. Check or uncheck cities/property types to add/remove. </run>
                    <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run italic='true'>Redfin News Data Center</run>
                    <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14628' id='395' mode='checkdropdown' name='med_sale_price' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]' type-v2='filter' values='database' w='21039' x='30531' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14628' id='694' mode='checkdropdown' name='med_sale_price' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' values='database' w='15840' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84004' id='251' is-fixed='true' name='med_sale_price' w='51086' x='484' y='15312'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14628' id='252' name='med_sale_price' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]' type-v2='color' w='14207' x='16324' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40034' id='373' is-fixed='true' name='med_sale_price (2)' w='47944' x='51572' y='19247'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='441' forceUpdate='true' h='40035' id='79' type-v2='text' w='47944' x='51572' y='59281'>
                  <formatted-text>
                    <run fontsize='12'>Metropolitan regions have seen similar patterns to their corresponding cities in regards to median sale price.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Since 2021,</run>
                    <run bold='true' fontsize='12'> metro Boston has been the 75th percentile and 7th most expensive for median sale price </run>
                    <run fontsize='12'>among metro areas with cities whose population exceeds 650,000.</run>
                    <run bold='true' fontsize='12'>Æ </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Metro Boston&apos;s median sale price has </run>
                    <run bold='true' fontsize='12'>risen from cluster 1 in 2012 to one of the highest in cluster 3 since 2021</run>
                    <run fontsize='12'>. Cluster 1 has a median sale price just over 200k, whereas cluster 3 has a median of 700k. Metro Boston has consistently landed around metropolitan regions like Washington DC, New York, Seattle, and Denver. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{99BB5949-95A8-4A0F-B30A-52B96F4A8061}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Metro Regions - Transition'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#0b4270' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='98632' id='3' type-v2='text' w='99032' x='484' y='684'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#e6e6e6' fontsize='72'>Metro Regions</run>
              <run fontalignment='1'>Æ&#10;&#10;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#e6e6e6' fontsize='14'>Metropolitan regions are slightly larger than the cities studied in the previous section because they include some surrounding areas. </run>
              <run bold='true' fontcolor='#e6e6e6' fontsize='14'>Because migration data uses metropolitan regions, metropolitan region housing markets will be briefly analyzed. </run>
              <run fontcolor='#e6e6e6' fontsize='14'>Doing a quick analysis on metropolitan Boston relative to other metropolitan regions corresponding to cities in the High Population Set will help identify similarities and differences between metro Boston and the city of Boston. It will also aid in understanding the different housing markets in the Relocation Set.</run>
              <run>Æ&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;</run>
              <run fontcolor='#e6e6e6' fontsize='12'>My sources for this section are listed here: </run>
              <run>Æ&#10;</run>
              <run fontcolor='#e6e6e6' fontsize='12'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
              <run fontcolor='#e6e6e6' fontsize='12' italic='true'>Redfin News Data Center</run>
              <run fontcolor='#e6e6e6' fontsize='12'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1096' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1095' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='98632' id='3' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#e6e6e6' fontsize='72'>Metro Regions</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#e6e6e6' fontsize='14'>Metropolitan regions are slightly larger than the cities studied in the previous section because they include some surrounding areas. </run>
                    <run bold='true' fontcolor='#e6e6e6' fontsize='14'>Because migration data uses metropolitan regions, metropolitan region housing markets will be briefly analyzed. </run>
                    <run fontcolor='#e6e6e6' fontsize='14'>Doing a quick analysis on metropolitan Boston relative to other metropolitan regions corresponding to cities in the High Population Set will help identify similarities and differences between metro Boston and the city of Boston. It will also aid in understanding the different housing markets in the Relocation Set.</run>
                    <run>Æ&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;</run>
                    <run fontcolor='#e6e6e6' fontsize='12'>My sources for this section are listed here: </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#e6e6e6' fontsize='12'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#e6e6e6' fontsize='12' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#e6e6e6' fontsize='12'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{30C2BC2B-6DD0-4D3F-AE3A-010BB2E34F14}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='New Listings Sum'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='31' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='29' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='87425' id='7' param='horz' type-v2='layout-flow' w='62454' x='484' y='11891'>
                <zone h='87425' id='5' type-v2='layout-basic' w='62454' x='484' y='11891'>
                  <zone h='43713' id='21' name='new_listings' w='62454' x='484' y='11891'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='43712' id='28' name='new_listings (2)' w='62454' x='484' y='55604'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='87425' id='11' type-v2='text' w='36578' x='62938' y='11891'>
                <formatted-text>
                  <run fontsize='10'>In the ten-year period between 2012 and 2022, the sum of new listings for Boston reached its peak in 2021 at 1,128,580 (top left). There was a trend of increase year-to-year from 2012 to 2018, with a growth rate of 15% from 2012-2013 and 2014-2015. From 2018 to 2022, with 2021 as a potential exception, there was a trend of slight decline with a decrease of nearly 6%.</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='10'>The graph on the bottom left shows the sum of new listings by year, broken down by quarter. In most years, with 2020 as an exception, Quarter 2 and Quarter 3 show the highest number of new listings. With limited data from 2023, the sum of new listings for the first two quarters are low relative to other years, falling short of even 2015.</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='10'>If 2020 is indeed an exception to seasonal patterns (which is possible, due to COVID-19), 2023 might fall at a lower annual sum and continue this trend of decline post-2018. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='10'>During COVID-19, interest rates and mortgage rates were low, facilitating home sales and possibly the high degree of migration. In 2023, Boston.com wrote that new listings may be lower in 2023 than 2022 or 2021 due to high sales during those two years, and that this may not be cause for concern (Smilgius and Woods).  Returns to higher mortgage rates and interest rates have also lessened motivation to sell homes in 2023, which would affect new listings on the market in this year (Smilgius and Woods). It&apos;s likely that the same logic applies to years pre-COVID, where high interest rates, mortgage rates, and prices decreased motivation to put homes on the market.</run>
                  <run>Æ&#10;&#10;</run>
                  <run bold='true' fontsize='10'>Regardless of the causes, a trend of decline in annual new listings since 2018 could exacerbate supply problems in a housing market. </run>
                  <run fontsize='10'>In the same article, Boston.com writes how low inventory is keeping home sale prices high (Smilgius and Woods). Along with high interest and mortgage rates, supply-side problems contribute to problems with housing affordability. Low supply of new listings also simply means fewer houses are available on the market.  </run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='11207' id='12' type-v2='text' w='69589' x='29927' y='684'>
                <formatted-text>
                  <run fontcolor='#000000' fontsize='8'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                  <run fontcolor='#000000' fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='8'>Citation:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
                  <run fontcolor='#000000' fontsize='8' italic='true'>Redfin News Data Center</run>
                  <run fontcolor='#000000' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='8'>[6] Smilgius, Vivi, and Eileen Woods. &quot;The Mass. Housing Market Is Still Brutal. But There’s a Glimmer of Good News.&quot; </run>
                  <run fontcolor='#000000' fontsize='8' italic='true'>Boston.Com</run>
                  <run fontcolor='#000000' fontsize='8'>, 22 Mar. 2023, www.boston.com/real-estate/real-estate/2023/03/22/mass-housing-market-update-brutal-but-good-news/. Accessed 26 Jul. 2023.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11207' id='32' name='new_listings (2)' pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[qr:period_begin:ok]' type-v2='color' w='29443' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='446' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='445' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='11207' id='12' type-v2='text' w='69589' x='29927' y='684'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='8'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[6] Smilgius, Vivi, and Eileen Woods. &quot;The Mass. Housing Market Is Still Brutal. But There’s a Glimmer of Good News.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Boston.Com</run>
                    <run fontcolor='#000000' fontsize='8'>, 22 Mar. 2023, www.boston.com/real-estate/real-estate/2023/03/22/mass-housing-market-update-brutal-but-good-news/. Accessed 26 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43713' id='21' is-fixed='true' name='new_listings' w='62454' x='484' y='11891'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='87425' id='11' type-v2='text' w='36578' x='62938' y='11891'>
                  <formatted-text>
                    <run fontsize='10'>In the ten-year period between 2012 and 2022, the sum of new listings for Boston reached its peak in 2021 at 1,128,580 (top left). There was a trend of increase year-to-year from 2012 to 2018, with a growth rate of 15% from 2012-2013 and 2014-2015. From 2018 to 2022, with 2021 as a potential exception, there was a trend of slight decline with a decrease of nearly 6%.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='10'>The graph on the bottom left shows the sum of new listings by year, broken down by quarter. In most years, with 2020 as an exception, Quarter 2 and Quarter 3 show the highest number of new listings. With limited data from 2023, the sum of new listings for the first two quarters are low relative to other years, falling short of even 2015.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='10'>If 2020 is indeed an exception to seasonal patterns (which is possible, due to COVID-19), 2023 might fall at a lower annual sum and continue this trend of decline post-2018. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='10'>During COVID-19, interest rates and mortgage rates were low, facilitating home sales and possibly the high degree of migration. In 2023, Boston.com wrote that new listings may be lower in 2023 than 2022 or 2021 due to high sales during those two years, and that this may not be cause for concern (Smilgius and Woods).  Returns to higher mortgage rates and interest rates have also lessened motivation to sell homes in 2023, which would affect new listings on the market in this year (Smilgius and Woods). It&apos;s likely that the same logic applies to years pre-COVID, where high interest rates, mortgage rates, and prices decreased motivation to put homes on the market.</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='10'>Regardless of the causes, a trend of decline in annual new listings since 2018 could exacerbate supply problems in a housing market. </run>
                    <run fontsize='10'>In the same article, Boston.com writes how low inventory is keeping home sale prices high (Smilgius and Woods). Along with high interest and mortgage rates, supply-side problems contribute to problems with housing affordability. Low supply of new listings also simply means fewer houses are available on the market.  </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43712' id='28' is-fixed='true' name='new_listings (2)' w='62454' x='484' y='55604'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11207' id='32' name='new_listings (2)' pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[qr:period_begin:ok]' type-v2='color' w='29443' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1B60AFFA-862F-4002-A111-9FA0CB07EF78}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Permits'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='92216' id='7' param='horz' type-v2='layout-flow' w='49516' x='484' y='7100'>
            <zone h='92216' id='5' type-v2='layout-basic' w='49516' x='484' y='7100'>
              <zone h='46108' id='3' name='permits' w='49516' x='484' y='7100'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46108' id='9' name='permits_yoy' w='49516' x='484' y='53208'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='6416' id='10' type-v2='layout-flow' w='49516' x='484' y='684'>
            <zone h='6416' id='8' name='permits' pane-specification-id='0' param='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:AdhocCluster:1:ok]' type-v2='color' w='49516' x='484' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='76562' id='11' type-v2='text' w='49516' x='50000' y='22754'>
            <formatted-text>
              <run fontsize='11'>The graph on the top left shows new construction permits for every 10,000 people in the Boston Metro Region, using 90-day durations. The graph on the bottom left shows the same, but with year-over-year growth. There are seasonal fluctuations in this feature every year, so it&apos;s best to look at the big picture for each year as well as trends over time. Clustering is used to facilitate visualization of trends and abnormality of points/years (relative to the median).</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='11'> Generally, there appears to be an increase in the ratio of permits to people from 2011 to 2022. Yet, the year-over-year change in this ratio appears to be declining in the same period. </run>
              <run bold='true' fontsize='11'>This could indicate that the rate of growth of construction in metro Boston is slowing down. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='11'>Data from 2023 is incomplete. However, the point for 1/1/2023 shows a ratio of 4.486, which is the lowest January 1st point since 2012. 2/1/2023 falls below 2/1/2012 by 0.3 as well. This could indicate that 2023 will see low ratios in this regard. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='11'>In January 2023, Catherine Carlock at The Boston Globe wrote that there has been slow growth of new housing approvals in Boston since 2015, often due to high interest rates and construction costs. In this article, forecasted low housing approvals for 2023 were also considered (Carlock). </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='22070' id='12' type-v2='text' w='49516' x='50000' y='684'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='8' italic='true'>Click on cluster legend to show median values for each cluster.</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
              <run fontcolor='#000000' fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>Citation:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
              <run fontcolor='#000000' fontsize='8' italic='true'>Redfin News Data Center</run>
              <run fontcolor='#000000' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#000000' fontsize='8'>[5] Carlock, Catherine. &quot;Last Year Was the Slowest for New Housing Approvals in Boston since 2015. Some Warn 2023 Will Be Slower.&quot; </run>
              <run fontcolor='#000000' fontsize='8' italic='true'>The Boston Globe</run>
              <run fontcolor='#000000' fontsize='8'>, 9 Jan. 2023, www.bostonglobe.com/2023/01/09/business/last-year-was-slowest-new-housing-approvals-boston-since-2015-some-warn-2023-will-be-slower/. Accessed 26 Jul. 2023.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='438' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='437' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='22070' id='12' type-v2='text' w='49516' x='50000' y='684'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='8' italic='true'>Click on cluster legend to show median values for each cluster.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[5] Carlock, Catherine. &quot;Last Year Was the Slowest for New Housing Approvals in Boston since 2015. Some Warn 2023 Will Be Slower.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>The Boston Globe</run>
                    <run fontcolor='#000000' fontsize='8'>, 9 Jan. 2023, www.bostonglobe.com/2023/01/09/business/last-year-was-slowest-new-housing-approvals-boston-since-2015-some-warn-2023-will-be-slower/. Accessed 26 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46108' id='3' is-fixed='true' name='permits' w='49516' x='484' y='7100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6416' id='8' name='permits' pane-specification-id='0' param='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:AdhocCluster:1:ok]' type-v2='color' w='49516' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='76562' id='11' type-v2='text' w='49516' x='50000' y='22754'>
                  <formatted-text>
                    <run fontsize='11'>The graph on the top left shows new construction permits for every 10,000 people in the Boston Metro Region, using 90-day durations. The graph on the bottom left shows the same, but with year-over-year growth. There are seasonal fluctuations in this feature every year, so it&apos;s best to look at the big picture for each year as well as trends over time. Clustering is used to facilitate visualization of trends and abnormality of points/years (relative to the median).</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'> Generally, there appears to be an increase in the ratio of permits to people from 2011 to 2022. Yet, the year-over-year change in this ratio appears to be declining in the same period. </run>
                    <run bold='true' fontsize='11'>This could indicate that the rate of growth of construction in metro Boston is slowing down. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Data from 2023 is incomplete. However, the point for 1/1/2023 shows a ratio of 4.486, which is the lowest January 1st point since 2012. 2/1/2023 falls below 2/1/2012 by 0.3 as well. This could indicate that 2023 will see low ratios in this regard. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>In January 2023, Catherine Carlock at The Boston Globe wrote that there has been slow growth of new housing approvals in Boston since 2015, often due to high interest rates and construction costs. In this article, forecasted low housing approvals for 2023 were also considered (Carlock). </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46108' id='9' is-fixed='true' name='permits_yoy' w='49516' x='484' y='53208'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FF574B87-6E45-405B-A7D8-21D50383B930}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Price vs. CPI'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='56630' id='6' param='vert' type-v2='layout-flow' w='66928' x='484' y='42686'>
            <zone fixed-size='355' h='30368' id='7' is-fixed='true' param='horz' type-v2='layout-flow' w='66928' x='484' y='42686'>
              <zone forceUpdate='true' h='30368' id='17' type-v2='text' w='66928' x='484' y='42686'>
                <formatted-text>
                  <run fontsize='11'>Additionally, the graphs above and to the right help show that median sale prices in Boston are rising faster than the local CPI. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='11'>The above graphs compare the growth rate of median sale prices in Boston, averaged by year, with the growth rate of average annual CPI in the Boston area (Boston-Cambridge-Newton) in the last decade. Trend lines were created for the graphs on the rightusing polynomial regression, and a forecast for 2023 and 2024 is included. There is a steeper incline in housing prices than in CPI, especially in the later years of the last decade. </run>
                  <run bold='true' fontsize='11'>The growth rates for annual median sale price average are consistently higher than those for the annual CPI average. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='11'> A more thorough analysis of this particular issue would include other measures of inflation besides solely the CPI. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone forceUpdate='true' h='25577' id='41' type-v2='text' w='66928' x='484' y='73054'>
              <formatted-text>
                <run>Median Sale Price data from Redfin, a national real estate brokerage. 
</run>
                <run fontcolor='#000000'>Find their Data Center here: </run>
                <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>Citation:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                <run>
&quot;All Residential&quot; Property Type includes Condo/Co-op, Multi-Family (2-4 unit), Single Family Residential, and Townhouse

CPI data:
</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[5] U.S. Bureau of Labor Statistics.  &quot;CPI for All Urban Consumers (CPI-U).&quot; All Urban Consumers (Current Series) (Consumer Price Index - CPI,&quot; Series ID: CUURS11ASA0,CUUSS11ASA0, </run>
                <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cpi/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cpi/data.htm</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[6] U.S. Bureau of Labor Statistics.  &quot;CPI for All Urban Consumers (CPI-U).&quot; All Urban Consumers (Current Series) (Consumer Price Index - CPI,&quot; Series ID: CUURS11ASAH,CUUSS11ASAH, </run>
                <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cpi/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cpi/data.htm</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='42002' id='8' param='vert' type-v2='layout-flow' w='34824' x='484' y='684'>
            <zone h='42002' id='19' name='growth rates' w='34824' x='484' y='684'>
              <layout-cache minheight='259' minwidth='270' type-h='scalable' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='42002' id='9' param='horz' type-v2='layout-flow' w='32104' x='35308' y='684'>
            <zone h='42002' id='28' name='growth rates (2)' w='32104' x='35308' y='684'>
              <layout-cache minwidth='230' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone fixed-size='560' h='43200' id='12' is-fixed='true' name='sale price vs cpi housing' w='32104' x='67412' y='56116'>
            <layout-cache minheight='297' minwidth='0' type-h='scalable' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='43541' id='10' name='sale price vs cpi' w='32104' x='67412' y='12575'>
            <layout-cache minheight='373' minwidth='0' type-h='scalable' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='11891' id='11' name='sale price vs cpi' pane-specification-id='1' param='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]&#10;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' type-v2='color' w='32104' x='67412' y='684'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1459' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98632' id='1458' param='vert' type-v2='layout-flow' w='99032' x='484' y='684'>
                <zone fixed-size='280' h='42002' id='19' is-fixed='true' name='growth rates' w='34824' x='484' y='684'>
                  <layout-cache minheight='259' minwidth='270' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42002' id='28' is-fixed='true' name='growth rates (2)' w='32104' x='35308' y='684'>
                  <layout-cache minwidth='230' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43541' id='10' is-fixed='true' name='sale price vs cpi' w='32104' x='67412' y='12575'>
                  <layout-cache minheight='373' minwidth='0' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11891' id='11' name='sale price vs cpi' pane-specification-id='1' param='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]&#10;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' type-v2='color' w='32104' x='67412' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='30368' id='17' type-v2='text' w='66928' x='484' y='42686'>
                  <formatted-text>
                    <run fontsize='11'>Additionally, the graphs above and to the right help show that median sale prices in Boston are rising faster than the local CPI. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>The above graphs compare the growth rate of median sale prices in Boston, averaged by year, with the growth rate of average annual CPI in the Boston area (Boston-Cambridge-Newton) in the last decade. Trend lines were created for the graphs on the rightusing polynomial regression, and a forecast for 2023 and 2024 is included. There is a steeper incline in housing prices than in CPI, especially in the later years of the last decade. </run>
                    <run bold='true' fontsize='11'>The growth rates for annual median sale price average are consistently higher than those for the annual CPI average. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'> A more thorough analysis of this particular issue would include other measures of inflation besides solely the CPI. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43200' id='12' is-fixed='true' name='sale price vs cpi housing' w='32104' x='67412' y='56116'>
                  <layout-cache minheight='297' minwidth='0' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='25577' id='41' type-v2='text' w='66928' x='484' y='73054'>
                  <formatted-text>
                    <run>Median Sale Price data from Redfin, a national real estate brokerage. 
</run>
                    <run fontcolor='#000000'>Find their Data Center here: </run>
                    <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>
&quot;All Residential&quot; Property Type includes Condo/Co-op, Multi-Family (2-4 unit), Single Family Residential, and Townhouse

CPI data:
</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[5] U.S. Bureau of Labor Statistics.  &quot;CPI for All Urban Consumers (CPI-U).&quot; All Urban Consumers (Current Series) (Consumer Price Index - CPI,&quot; Series ID: CUURS11ASA0,CUUSS11ASA0, </run>
                    <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cpi/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cpi/data.htm</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[6] U.S. Bureau of Labor Statistics.  &quot;CPI for All Urban Consumers (CPI-U).&quot; All Urban Consumers (Current Series) (Consumer Price Index - CPI,&quot; Series ID: CUURS11ASAH,CUUSS11ASAH, </run>
                    <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cpi/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cpi/data.htm</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7C1E3E74-FCDF-48C5-843B-7F185AA24EF2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Price vs. Income'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone fixed-size='441' forceUpdate='true' h='19932' id='160' is-fixed='true' type-v2='text' w='49516' x='50000' y='79384'>
            <formatted-text>
              <run>Æ&#10;</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2' fontsize='12'>Median sale price has risen faster than average annual income</run>
              <run fontalignment='2' fontsize='12'> between 2012 and 2022. Average annual income in Suffolk County, MA had a growth rate of 52.8% from 2022 to 2012, whereas median sale price in metro Boston grew by 80.8%. </run>
              <run fontalignment='2'>Æ&#10;&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='60051' id='5' name='income and sale price' w='49516' x='50000' y='19333'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='18649' id='367' param='horz' type-v2='layout-flow' w='25937' x='484' y='684'>
            <zone h='18649' id='10' name='income and sale price' pane-specification-id='1' param='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[:Measure Names]' type-v2='color' w='25937' x='484' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='79983' id='399' is-fixed='true' type-v2='layout-basic' w='49516' x='484' y='19333'>
            <zone h='60063' id='369' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='49516' x='484' y='19333'>
              <zone fixed-size='461' h='60051' id='397' is-fixed='true' name='grapi' w='49516' x='484' y='19333'>
                <layout-cache type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='19920' id='400' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='49516' x='484' y='79396'>
              <zone fixed-size='537' forceUpdate='true' h='19932' id='370' is-fixed='true' type-v2='text' w='49516' x='484' y='79384'>
                <formatted-text>
                  <run fontsize='12'>The largest grouping of gross rent as a percent of household income is 35% or higher, meaning that</run>
                  <run bold='true' fontsize='12'> most renters surveyed are paying 35% or more of their income for rent</run>
                  <run fontsize='12'>. Visually, this grouping far surpasses the other groupings, which are more evenly spread out.  </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='18649' id='525' type-v2='text' w='73095' x='26421' y='684'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='8'>Median Sale Price:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
              <run fontcolor='#000000' fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>Citation:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
              <run fontcolor='#000000' fontsize='8' italic='true'>Redfin News Data Center</run>
              <run fontcolor='#000000' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='8'>Gross Rent:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#1b1b1b' fontsize='8'>[2] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
              <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
              <run>Æ&#10;</run>
              <run fontcolor='#1b1b1b' fontsize='8'>Avg Annual Pay: </run>
              <run>Æ&#10;</run>
              <run fontcolor='#1b1b1b' fontsize='8'>[4] U.S. Bureau of Labor Statistics. &quot;Quarterly Census of Employment and Wages.&quot; State and County Employment and Wages (Quarterly Census of Employment &amp; Wages - QCEW), Series ID: ENU2502550010, </run>
              <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cew/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cew/data.htm</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1435' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1434' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='18649' id='525' type-v2='text' w='73095' x='26421' y='684'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='8'>Median Sale Price:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' fontsize='8' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>Gross Rent:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[2] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>Avg Annual Pay: </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[4] U.S. Bureau of Labor Statistics. &quot;Quarterly Census of Employment and Wages.&quot; State and County Employment and Wages (Quarterly Census of Employment &amp; Wages - QCEW), Series ID: ENU2502550010, </run>
                    <run auto-url='true' fontcolor='#0000ff' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bls.gov/cew/data.htm&amp;quot;' underline='true'>https://www.bls.gov/cew/data.htm</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60051' id='397' is-fixed='true' name='grapi' w='49516' x='484' y='19333'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60051' id='5' is-fixed='true' name='income and sale price' w='49516' x='50000' y='19333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18649' id='10' name='income and sale price' pane-specification-id='1' param='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[:Measure Names]' type-v2='color' w='25937' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='537' forceUpdate='true' h='19932' id='370' type-v2='text' w='49516' x='484' y='79384'>
                  <formatted-text>
                    <run fontsize='12'>The largest grouping of gross rent as a percent of household income is 35% or higher, meaning that</run>
                    <run bold='true' fontsize='12'> most renters surveyed are paying 35% or more of their income for rent</run>
                    <run fontsize='12'>. Visually, this grouping far surpasses the other groupings, which are more evenly spread out.  </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='441' forceUpdate='true' h='19932' id='160' type-v2='text' w='49516' x='50000' y='79384'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run bold='true' fontalignment='2' fontsize='12'>Median sale price has risen faster than average annual income</run>
                    <run fontalignment='2' fontsize='12'> between 2012 and 2022. Average annual income in Suffolk County, MA had a growth rate of 52.8% from 2022 to 2012, whereas median sale price in metro Boston grew by 80.8%. </run>
                    <run fontalignment='2'>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{460E6983-681F-4CF0-B99A-9601A7E69E9E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Production - Summary'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='54406' id='3' type-v2='text' w='99032' x='484' y='26347'>
            <formatted-text>
              <run fontsize='14'>The &quot;Housing Supply&quot; section of this project contained visualizations and analyses on aspects of Boston&apos;s housing market that highlight its housing crisis. In recent years, Boston has had some of the lowest inventory and months of supply levels relative to other high population cities. On top of this, Boston saw considerable declines in both of these aspects in the last decade. New Listings per year have shown a trend of decline since 2018, with indications of potentially lower sums in 2023. Permits per 10,000 people have shown patterns of negative or stagnant growth year over year. Construction and inventory are low in terms of some indicators of demand, although my analysis was limited in this regard due to time and data availability. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>In my analysis, Boston falls around cities like San Jose, CA; San Francisco, CA; Washington, DC; and Seattle, WA in terms of very low inventory and months of supply. In 2022, all but Seattle were found to be the metros with the top 4 worst housing shortages not just among high population cities or metros, but among all metropolitan regions in the US (Pacheco). </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>Each of these factors individually can only show potential problems in the supply-side of Boston&apos;s housing market. However, the big picture of all of these factors together makes the supply-side problems in Boston&apos;s housing crisis more conclusive and more thoroughly evaluated. Supply-side problems themselves indicate scarcity of housing in the market. On top of this, they help raise housing prices (Smilgius and Woods), contributing to a lack of affordable housing. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>My analyses help explain some of the complex problems in the supply side of Boston&apos;s housing market that are factors in the city&apos;s housing crisis.</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='25663' id='743' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone forceUpdate='true' h='25663' id='744' type-v2='text' w='99032' x='484' y='684'>
              <formatted-text>
                <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Housing Supply</run>
                <run fontalignment='2'>Æ&#10;</run>
                <run bold='true' fontalignment='2' fontsize='18'>Conclusion</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='18563' id='903' param='horz' type-v2='layout-flow' w='99032' x='484' y='80753'>
            <zone forceUpdate='true' h='18563' id='904' type-v2='text' w='99032' x='484' y='80753'>
              <formatted-text>
                <run fontcolor='#000000'>Sources below:</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000'>[7] Pacheco, Kaitlyn. &quot;These Are the U.S. Metro Cities Facing the Worst Housing Shortage [STUDY].&quot; </run>
                <run fontcolor='#000000' italic='true'>Angi.Com</run>
                <run fontcolor='#000000'>, 3 Nov. 2022, www.angi.com/articles/housing-shortage.htm. Accessed 19 Jul. 2023.</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>[6] Smilgius, Vivi, and Eileen Woods. &quot;The Mass. Housing Market Is Still Brutal. But There’s a Glimmer of Good News.&quot; </run>
                <run fontcolor='#000000' italic='true'>Boston.Com</run>
                <run fontcolor='#000000'>, 22 Mar. 2023, www.boston.com/real-estate/real-estate/2023/03/22/mass-housing-market-update-brutal-but-good-news/. Accessed 26 Jul. 2023.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1102' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1101' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='25663' id='744' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Housing Supply</run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run bold='true' fontalignment='2' fontsize='18'>Conclusion</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='54406' id='3' type-v2='text' w='99032' x='484' y='26347'>
                  <formatted-text>
                    <run fontsize='14'>The &quot;Housing Supply&quot; section of this project contained visualizations and analyses on aspects of Boston&apos;s housing market that highlight its housing crisis. In recent years, Boston has had some of the lowest inventory and months of supply levels relative to other high population cities. On top of this, Boston saw considerable declines in both of these aspects in the last decade. New Listings per year have shown a trend of decline since 2018, with indications of potentially lower sums in 2023. Permits per 10,000 people have shown patterns of negative or stagnant growth year over year. Construction and inventory are low in terms of some indicators of demand, although my analysis was limited in this regard due to time and data availability. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='14'>In my analysis, Boston falls around cities like San Jose, CA; San Francisco, CA; Washington, DC; and Seattle, WA in terms of very low inventory and months of supply. In 2022, all but Seattle were found to be the metros with the top 4 worst housing shortages not just among high population cities or metros, but among all metropolitan regions in the US (Pacheco). </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='14'>Each of these factors individually can only show potential problems in the supply-side of Boston&apos;s housing market. However, the big picture of all of these factors together makes the supply-side problems in Boston&apos;s housing crisis more conclusive and more thoroughly evaluated. Supply-side problems themselves indicate scarcity of housing in the market. On top of this, they help raise housing prices (Smilgius and Woods), contributing to a lack of affordable housing. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='14'>My analyses help explain some of the complex problems in the supply side of Boston&apos;s housing market that are factors in the city&apos;s housing crisis.</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18563' id='904' type-v2='text' w='99032' x='484' y='80753'>
                  <formatted-text>
                    <run fontcolor='#000000'>Sources below:</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000'>[7] Pacheco, Kaitlyn. &quot;These Are the U.S. Metro Cities Facing the Worst Housing Shortage [STUDY].&quot; </run>
                    <run fontcolor='#000000' italic='true'>Angi.Com</run>
                    <run fontcolor='#000000'>, 3 Nov. 2022, www.angi.com/articles/housing-shortage.htm. Accessed 19 Jul. 2023.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>[6] Smilgius, Vivi, and Eileen Woods. &quot;The Mass. Housing Market Is Still Brutal. But There’s a Glimmer of Good News.&quot; </run>
                    <run fontcolor='#000000' italic='true'>Boston.Com</run>
                    <run fontcolor='#000000'>, 22 Mar. 2023, www.boston.com/real-estate/real-estate/2023/03/22/mass-housing-market-update-brutal-but-good-news/. Accessed 26 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9126E1EB-D2F2-4D06-9FDC-2E612E4C6EF4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Production - Transition'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='70659' id='3' type-v2='text' w='49516' x='484' y='28657'>
            <formatted-text>
              <run fontsize='12'>In this section, I look into housing inventory, months of housing supply, and total new listings by year to get a deeper understanding of Boston&apos;s housing supply. </run>
              <run bold='true' fontsize='12'>Low inventory, months of supply, and total new listings can, alongside other factors and research, indicate supply-side problems in a housing crisis.</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='12'>I compare inventory and months of housing supply to other areas in the </run>
              <run bold='true' fontsize='12'>High Population Set </run>
              <run fontsize='12'>(cities whose populations exceed 650,000). </run>
              <run bold='true' fontsize='12'>Doing so helps contextualize traits of Boston&apos;s housing market as a high population city</run>
              <run fontsize='12'>, showing where Boston might stick out as an extreme or where Boston matches medians and averages.</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='12'>I also examine some relationships between construction and inventory and population to compare housing supply to some indicators of demand. Comparisons to demand help give meaning to what &quot;low&quot; supply looks like. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='12'>With more time and data availability, I would go more in depth with analyzing supply components relative to indicators of demand. Other indicators I&apos;d look into include employment, job openings, population changes by neighborhood, and the type of housing being constructed (apartments, homes, etc.).</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='27973' id='743' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone forceUpdate='true' h='27973' id='744' type-v2='text' w='99032' x='484' y='684'>
              <formatted-text>
                <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Housing Supply</run>
                <run fontalignment='2'>Æ&#10;</run>
                <run bold='true' fontalignment='2' fontcolor='#0b4270' fontsize='18'>Low housing supply is one factor in a lack of affordable housing. </run>
                <run fontalignment='2'>Æ&#10;</run>
                <run bold='true' fontalignment='2' fontcolor='#0b4270' fontsize='18'>Low supply is an effect of policy and other regulations. It can also, through natural market movement, naturally exacerbate market effects and lead to higher costs.</run>
                <run bold='true' fontalignment='2' fontsize='18'>Æ </run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='70659' id='781' param='horz' type-v2='layout-flow' w='49516' x='50000' y='28657'>
            <zone forceUpdate='true' h='70659' id='782' type-v2='text' w='49516' x='50000' y='28657'>
              <formatted-text>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontsize='12'>My sources for this section are listed here: </run>
                <run>Æ&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
                <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#1b1b1b' fontsize='8'>[3] U.S. Census Bureau, Resident Population in Boston-Cambridge-Newton, MA-NH (MSA) [BOSPOP], retrieved from FRED, Federal Reserve Bank of St. Louis; </run>
                <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://fred.stlouisfed.org/series/BOSPOP&amp;quot;'>https://fred.stlouisfed.org/series/BOSPOP</run>
                <run fontcolor='#1b1b1b' fontsize='8'> , July 10, 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000' fontsize='8'>[4] </run>
                <run fontsize='8'>U.S. Census Bureau, New Private Housing Structures Authorized by Building Permits for Boston-Cambridge-Newton, MA-NH (MSA) [BOST625BPPRIVSA], retrieved from FRED, Federal Reserve Bank of St. Louis; </run>
                <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://fred.stlouisfed.org/series/BOST625BPPRIVSA,&amp;quot;'>https://fred.stlouisfed.org/series/BOST625BPPRIVSA,</run>
                <run fontsize='8'> July 16, 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000' fontsize='8'>[5] Carlock, Catherine. &quot;Last Year Was the Slowest for New Housing Approvals in Boston since 2015. Some Warn 2023 Will Be Slower.&quot; </run>
                <run fontcolor='#000000' fontsize='8' italic='true'>The Boston Globe</run>
                <run fontcolor='#000000' fontsize='8'>, 9 Jan. 2023, www.bostonglobe.com/2023/01/09/business/last-year-was-slowest-new-housing-approvals-boston-since-2015-some-warn-2023-will-be-slower/. Accessed 26 Jul. 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000' fontsize='8'>[6] Smilgius, Vivi, and Eileen Woods. &quot;The Mass. Housing Market Is Still Brutal. But There’s a Glimmer of Good News.&quot; </run>
                <run fontcolor='#000000' fontsize='8' italic='true'>Boston.Com</run>
                <run fontcolor='#000000' fontsize='8'>, 22 Mar. 2023, www.boston.com/real-estate/real-estate/2023/03/22/mass-housing-market-update-brutal-but-good-news/. Accessed 26 Jul. 2023.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000' fontsize='8'>[7] Pacheco, Kaitlyn. &quot;These Are the U.S. Metro Cities Facing the Worst Housing Shortage [STUDY].&quot; </run>
                <run fontcolor='#000000' fontsize='8' italic='true'>Angi.Com</run>
                <run fontcolor='#000000' fontsize='8'>, 3 Nov. 2022, www.angi.com/articles/housing-shortage.htm. Accessed 19 Jul. 2023.</run>
                <run>Æ&#10;&#10;&#10;</run>
                <run bold='true' fontsize='8'>Note: &quot;Boston-Cambridge-Newton&quot; refers to metropolitan region Boston-Cambridge-Newton, MA-NH.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1102' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98632' id='1101' param='vert' type-v2='layout-flow' w='99032' x='484' y='684'>
                <zone forceUpdate='true' h='27973' id='744' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run bold='true' fontalignment='2' fontcolor='#900714' fontsize='48'>Housing Supply</run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run bold='true' fontalignment='2' fontcolor='#0b4270' fontsize='18'>Low housing supply is one factor in a lack of affordable housing. </run>
                    <run fontalignment='2'>Æ&#10;</run>
                    <run bold='true' fontalignment='2' fontcolor='#0b4270' fontsize='18'>Low supply is an effect of policy and other regulations. It can also, through natural market movement, naturally exacerbate market effects and lead to higher costs.</run>
                    <run bold='true' fontalignment='2' fontsize='18'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='70659' id='3' type-v2='text' w='49516' x='484' y='28657'>
                  <formatted-text>
                    <run fontsize='12'>In this section, I look into housing inventory, months of housing supply, and total new listings by year to get a deeper understanding of Boston&apos;s housing supply. </run>
                    <run bold='true' fontsize='12'>Low inventory, months of supply, and total new listings can, alongside other factors and research, indicate supply-side problems in a housing crisis.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>I compare inventory and months of housing supply to other areas in the </run>
                    <run bold='true' fontsize='12'>High Population Set </run>
                    <run fontsize='12'>(cities whose populations exceed 650,000). </run>
                    <run bold='true' fontsize='12'>Doing so helps contextualize traits of Boston&apos;s housing market as a high population city</run>
                    <run fontsize='12'>, showing where Boston might stick out as an extreme or where Boston matches medians and averages.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>I also examine some relationships between construction and inventory and population to compare housing supply to some indicators of demand. Comparisons to demand help give meaning to what &quot;low&quot; supply looks like. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>With more time and data availability, I would go more in depth with analyzing supply components relative to indicators of demand. Other indicators I&apos;d look into include employment, job openings, population changes by neighborhood, and the type of housing being constructed (apartments, homes, etc.).</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='70659' id='782' type-v2='text' w='49516' x='50000' y='28657'>
                  <formatted-text>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='12'>My sources for this section are listed here: </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[2] &quot;New Construction Homes Data - Redfin.&quot; </run>
                    <run fontcolor='#1b1b1b' fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>, www.redfin.com/news/data-center/new-construction/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[3] U.S. Census Bureau, Resident Population in Boston-Cambridge-Newton, MA-NH (MSA) [BOSPOP], retrieved from FRED, Federal Reserve Bank of St. Louis; </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://fred.stlouisfed.org/series/BOSPOP&amp;quot;'>https://fred.stlouisfed.org/series/BOSPOP</run>
                    <run fontcolor='#1b1b1b' fontsize='8'> , July 10, 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[4] </run>
                    <run fontsize='8'>U.S. Census Bureau, New Private Housing Structures Authorized by Building Permits for Boston-Cambridge-Newton, MA-NH (MSA) [BOST625BPPRIVSA], retrieved from FRED, Federal Reserve Bank of St. Louis; </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://fred.stlouisfed.org/series/BOST625BPPRIVSA,&amp;quot;'>https://fred.stlouisfed.org/series/BOST625BPPRIVSA,</run>
                    <run fontsize='8'> July 16, 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[5] Carlock, Catherine. &quot;Last Year Was the Slowest for New Housing Approvals in Boston since 2015. Some Warn 2023 Will Be Slower.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>The Boston Globe</run>
                    <run fontcolor='#000000' fontsize='8'>, 9 Jan. 2023, www.bostonglobe.com/2023/01/09/business/last-year-was-slowest-new-housing-approvals-boston-since-2015-some-warn-2023-will-be-slower/. Accessed 26 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[6] Smilgius, Vivi, and Eileen Woods. &quot;The Mass. Housing Market Is Still Brutal. But There’s a Glimmer of Good News.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Boston.Com</run>
                    <run fontcolor='#000000' fontsize='8'>, 22 Mar. 2023, www.boston.com/real-estate/real-estate/2023/03/22/mass-housing-market-update-brutal-but-good-news/. Accessed 26 Jul. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='8'>[7] Pacheco, Kaitlyn. &quot;These Are the U.S. Metro Cities Facing the Worst Housing Shortage [STUDY].&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Angi.Com</run>
                    <run fontcolor='#000000' fontsize='8'>, 3 Nov. 2022, www.angi.com/articles/housing-shortage.htm. Accessed 19 Jul. 2023.</run>
                    <run>Æ&#10;&#10;&#10;</run>
                    <run bold='true' fontsize='8'>Note: &quot;Boston-Cambridge-Newton&quot; refers to metropolitan region Boston-Cambridge-Newton, MA-NH.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{88DCA976-7EB9-4A3C-AF7F-D57528A8EB0B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Relocation - Comparison'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#674467' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      </datasources>
      <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='82' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='80' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='54576' id='7' param='horz' type-v2='layout-flow' w='99032' x='484' y='18563'>
                <zone h='54576' id='5' type-v2='layout-basic' w='99032' x='484' y='18563'>
                  <zone h='54576' id='3' name='relocation - med sale' w='49516' x='484' y='18563'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='8' />
                    </zone-style>
                  </zone>
                  <zone h='54576' id='15' name='relocation - sold above' w='49516' x='50000' y='18563'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='8' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='23439' id='31' param='horz' type-v2='layout-flow' w='99032' x='484' y='75877'>
                <zone forceUpdate='true' h='23439' id='32' type-v2='text' w='99032' x='484' y='75877'>
                  <formatted-text>
                    <run fontcolor='#e6e6e6' fontsize='11'>Relative to metro areas that Boston-Worcester-Providence residents are relocating to, Boston&apos;s housing market has seen </run>
                    <run bold='true' fontcolor='#e6e6e6' fontsize='11'>high median sale prices, steep declines in days on the market, declines in inventory, and steep increases in sold above list price ratios. </run>
                    <run fontcolor='#e6e6e6' fontsize='11'>Boston sees similarities or extreme values relative to those in the Relocation Set. In the case of Inventory, Boston sees a relatively steep decline over time, whereas many cities in the Relocation Set remain consistent (if higher or lower) or see similar declines. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#e6e6e6' fontsize='11'> It is useful to compare the metros overlapping in the High Population Set and the Relocation Set with metro Boston because it highlights how metro Boston&apos;s housing market is faring against cities with high populations where metro Boston residents are also choosing to relocate. </run>
                    <run bold='true' fontcolor='#e6e6e6' fontsize='11'>Relative to metro areas in both sets (Chicago, IL; Los Angeles, CA; New York, NY; Washington, DC), Boston sees similarities or extremities in most of the above traits. </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='15141' id='74' param='horz' type-v2='layout-flow' w='78417' x='21099' y='684'>
                <zone fixed-size='164' h='15141' id='83' is-fixed='true' name='relocation - med sale' pane-specification-id='1' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' type-v2='color' w='10399' x='21099' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='15141' id='75' type-v2='text' w='68018' x='31498' y='684'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                    <run fontsize='8'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>And citation here:</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                    <run fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontsize='8'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='15141' id='27' name='relocation - med sale' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' values='database' w='9672' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15141' id='28' name='relocation - med sale' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type-v2='filter' values='database' w='10943' x='10156' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2738' id='238' type-v2='empty' w='99032' x='484' y='15825'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2738' id='239' type-v2='empty' w='99032' x='484' y='73139'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='862' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='861' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='15141' id='75' type-v2='text' w='68018' x='31498' y='684'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                    <run fontsize='8'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>And citation here:</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                    <run fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontsize='8'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15141' id='27' mode='checkdropdown' name='relocation - med sale' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' values='database' w='9672' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15141' id='28' mode='checkdropdown' name='relocation - med sale' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type-v2='filter' values='database' w='10943' x='10156' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54576' id='3' is-fixed='true' name='relocation - med sale' w='49516' x='484' y='18563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='164' h='15141' id='83' name='relocation - med sale' pane-specification-id='1' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' type-v2='color' w='10399' x='21099' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54576' id='15' is-fixed='true' name='relocation - sold above' w='49516' x='50000' y='18563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='23439' id='32' type-v2='text' w='99032' x='484' y='75877'>
                  <formatted-text>
                    <run fontcolor='#e6e6e6' fontsize='11'>Relative to metro areas that Boston-Worcester-Providence residents are relocating to, Boston&apos;s housing market has seen </run>
                    <run bold='true' fontcolor='#e6e6e6' fontsize='11'>high median sale prices, steep declines in days on the market, declines in inventory, and steep increases in sold above list price ratios. </run>
                    <run fontcolor='#e6e6e6' fontsize='11'>Boston sees similarities or extreme values relative to those in the Relocation Set. In the case of Inventory, Boston sees a relatively steep decline over time, whereas many cities in the Relocation Set remain consistent (if higher or lower) or see similar declines. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#e6e6e6' fontsize='11'> It is useful to compare the metros overlapping in the High Population Set and the Relocation Set with metro Boston because it highlights how metro Boston&apos;s housing market is faring against cities with high populations where metro Boston residents are also choosing to relocate. </run>
                    <run bold='true' fontcolor='#e6e6e6' fontsize='11'>Relative to metro areas in both sets (Chicago, IL; Los Angeles, CA; New York, NY; Washington, DC), Boston sees similarities or extremities in most of the above traits. </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3F24A310-258D-4E75-953D-93477B16FB2F}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Relocation - Comparison (2)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#674467' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      </datasources>
      <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='51069' id='7' param='horz' type-v2='layout-flow' w='99032' x='484' y='20017'>
            <zone h='51069' id='5' type-v2='layout-basic' w='99032' x='484' y='20017'>
              <zone h='51069' id='53' name='relocation - med dom, comp (3)' w='49516' x='50000' y='20017'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51069' id='240' name='relocation - inventory, comp (4)' w='49516' x='484' y='20017'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='28230' id='31' param='horz' type-v2='layout-flow' w='99032' x='484' y='71086'>
            <zone forceUpdate='true' h='28230' id='32' type-v2='text' w='99032' x='484' y='71086'>
              <formatted-text>
                <run fontsize='11'>In terms of median days on the market, two metro areas fall short of Boston by 2021: Portland, ME and Cape Coral, FL. Portland, ME is the top relocation destination and outranks Boston in 2020. Prior to 2020, there&apos;s a trend of Portland having a higher number of days on the market. </run>
                <run>Æ&#10;&#10;</run>
                <run fontsize='11'>Similar to Portland and median days on the market, Hartford, CT is the only metro area surpassing Boston post-2020 in terms of the sold above list price ratio. Portland, ME begins to match Boston after this point. Hartford, CT is a top relocation destination for Boston residents as well. </run>
                <run>Æ&#10;&#10;</run>
                <run fontsize='11'>The changes observed in these metro markets post-2020 might be related to inbound relocation during the COVID-19 pandemic. Even if not, the general trends from pre-2020 are most important to recognize, as these inform what elements of the market looked like prior to relocation during COVID-19. </run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='16596' id='70' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone fixed-size='366' h='16596' id='55' is-fixed='true' name='relocation - med dom, comp (3)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type-v2='filter' w='22612' x='484' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='16596' id='71' type-v2='text' w='76420' x='23096' y='684'>
              <formatted-text>
                <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                <run>Æ&#10;</run>
                <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. </run>
                <run>Æ&#10;</run>
                <run fontsize='8'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                <run fontsize='8'>Æ </run>
                <run>Æ&#10;</run>
                <run fontsize='8'>And citation here:</run>
                <run>Æ&#10;</run>
                <run fontsize='8'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                <run fontsize='8' italic='true'>Redfin News Data Center</run>
                <run fontsize='8'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='2737' id='241' type-v2='empty' w='99032' x='484' y='17280'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='859' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='858' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='16596' id='71' type-v2='text' w='76420' x='23096' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                    <run fontsize='8'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>And citation here:</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                    <run fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontsize='8'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51069' id='240' is-fixed='true' name='relocation - inventory, comp (4)' w='49516' x='484' y='20017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='366' h='16596' id='55' mode='checkdropdown' name='relocation - med dom, comp (3)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type-v2='filter' w='22612' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51069' id='53' is-fixed='true' name='relocation - med dom, comp (3)' w='49516' x='50000' y='20017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='28230' id='32' type-v2='text' w='99032' x='484' y='71086'>
                  <formatted-text>
                    <run fontsize='11'>In terms of median days on the market, two metro areas fall short of Boston by 2021: Portland, ME and Cape Coral, FL. Portland, ME is the top relocation destination and outranks Boston in 2020. Prior to 2020, there&apos;s a trend of Portland having a higher number of days on the market. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Similar to Portland and median days on the market, Hartford, CT is the only metro area surpassing Boston post-2020 in terms of the sold above list price ratio. Portland, ME begins to match Boston after this point. Hartford, CT is a top relocation destination for Boston residents as well. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>The changes observed in these metro markets post-2020 might be related to inbound relocation during the COVID-19 pandemic. Even if not, the general trends from pre-2020 are most important to recognize, as these inform what elements of the market looked like prior to relocation during COVID-19. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C11BADCB-A7C1-43BC-A8D2-EB2894329B8C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Relocation - Comparison (3)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#674467' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      </datasources>
      <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='237' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='80' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='51582' id='7' param='horz' type-v2='layout-flow' w='99032' x='484' y='18905'>
                <zone h='51582' id='5' type-v2='layout-basic' w='99032' x='484' y='18905'>
                  <zone h='51582' id='11' name='relocation - median dom' w='49516' x='50000' y='18905'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='8' />
                    </zone-style>
                  </zone>
                  <zone h='51582' id='13' name='relocation - inventory' w='49516' x='484' y='18905'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='8' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='26091' id='31' param='horz' type-v2='layout-flow' w='99032' x='484' y='73225'>
                <zone forceUpdate='true' h='26091' id='32' type-v2='text' w='99032' x='484' y='73225'>
                  <formatted-text>
                    <run fontsize='11'>Relative to metro areas that Boston-Worcester-Providence residents are relocating to, Boston&apos;s housing market has seen </run>
                    <run bold='true' fontsize='11'>steep declines in days on the market and declines in inventory. </run>
                    <run fontsize='11'>Boston sees similarities or extreme values relative to those in the Relocation Set. In the case of Inventory, Boston sees a relatively steep decline over time, whereas many cities in the Relocation Set remain consistent (if higher or lower) or see similar declines. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>By 2016 and into 2023, Boston matches or is beaten by Cape Coral, FL; Portland, ME; and Hartford, CT in terms of low housing inventory. Boston&apos;s median days on the market gets closer and closer to Portland until around 2020, when Portland&apos;s duration matches or is shorter than that for Boston. Tampa, FL saw a decline around 2020 and Cape Coral around 2021. Both of these metro areas dip below Boston for some time duration between 2020 and 2023, as does Chicago for a briefer period.</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='11'>Relative to metro areas in both sets (Chicago, IL; Los Angeles, CA; New York, NY; Washington, DC), Boston sees similarities or extremities in most of the above traits. </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='18221' id='74' param='horz' type-v2='layout-flow' w='78418' x='21098' y='684'>
                <zone h='18221' id='238' name='relocation - median dom' pane-specification-id='3' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' type-v2='color' w='14994' x='21098' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18221' id='75' type-v2='text' w='63424' x='36092' y='684'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                    <run fontsize='8'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>And citation here:</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                    <run fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontsize='8'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='18221' id='27' name='relocation - inventory' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' values='database' w='9671' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18221' id='28' name='relocation - inventory' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type-v2='filter' values='database' w='10943' x='10155' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2738' id='233' type-v2='empty' w='99032' x='484' y='70487'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='862' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='861' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='18221' id='75' type-v2='text' w='63424' x='36092' y='684'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                    <run fontsize='8'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>And citation here:</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                    <run fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontsize='8'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18221' id='27' mode='checkdropdown' name='relocation - inventory' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' values='database' w='9671' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18221' id='28' mode='checkdropdown' name='relocation - inventory' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type-v2='filter' values='database' w='10943' x='10155' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51582' id='13' is-fixed='true' name='relocation - inventory' w='49516' x='484' y='18905'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51582' id='11' is-fixed='true' name='relocation - median dom' w='49516' x='50000' y='18905'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18221' id='238' name='relocation - median dom' pane-specification-id='3' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' type-v2='color' w='14994' x='21098' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='26091' id='32' type-v2='text' w='99032' x='484' y='73225'>
                  <formatted-text>
                    <run fontsize='11'>Relative to metro areas that Boston-Worcester-Providence residents are relocating to, Boston&apos;s housing market has seen </run>
                    <run bold='true' fontsize='11'>steep declines in days on the market and declines in inventory. </run>
                    <run fontsize='11'>Boston sees similarities or extreme values relative to those in the Relocation Set. In the case of Inventory, Boston sees a relatively steep decline over time, whereas many cities in the Relocation Set remain consistent (if higher or lower) or see similar declines. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>By 2016 and into 2023, Boston matches or is beaten by Cape Coral, FL; Portland, ME; and Hartford, CT in terms of low housing inventory. Boston&apos;s median days on the market gets closer and closer to Portland until around 2020, when Portland&apos;s duration matches or is shorter than that for Boston. Tampa, FL saw a decline around 2020 and Cape Coral around 2021. Both of these metro areas dip below Boston for some time duration between 2020 and 2023, as does Chicago for a briefer period.</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='11'>Relative to metro areas in both sets (Chicago, IL; Los Angeles, CA; New York, NY; Washington, DC), Boston sees similarities or extremities in most of the above traits. </run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A5F649B2-5CF1-492F-ABEC-6FA7A5C08002}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Relocation - Comparison (4)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#674467' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      </datasources>
      <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='57057' id='7' param='horz' type-v2='layout-flow' w='99032' x='484' y='17879'>
            <zone h='57057' id='5' type-v2='layout-basic' w='99032' x='484' y='17879'>
              <zone h='57057' id='57' name='relocation - sold above, comp (4)' w='49516' x='50000' y='17879'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='57057' id='240' name='relocation - med sale, comp (5)' w='49516' x='484' y='17879'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='24380' id='31' param='horz' type-v2='layout-flow' w='99032' x='484' y='74936'>
            <zone forceUpdate='true' h='24380' id='32' type-v2='text' w='99032' x='484' y='74936'>
              <formatted-text>
                <run fontsize='11'>In terms of median days on the market, by 2021, two metro areas fall short of Boston: Portland, ME and Cape Coral, FL. Portland, ME is the top relocation destination and outranks Boston in 2020. Prior to 2020, there&apos;s a trend of Portland having a higher number of days on the market. </run>
                <run>Æ&#10;&#10;</run>
                <run fontsize='11'>Similar to Portland and median days on the market, Hartford, CT is the only metro area surpassing Boston post-2020 in terms of the sold above list price ratio. Portland, ME begins to match Boston after this point. Hartford, CT is a top relocation destination for Boston residents as well. </run>
                <run>Æ&#10;&#10;</run>
                <run fontsize='11'>The changes observed in these metro markets post-2020 might be related to inbound relocation during the COVID-19 pandemic. Even if not, the general trends from pre-2020 are most important to recognize, as these inform what elements of the market looked like prior to relocation during COVID-19. </run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='14457' id='70' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone fixed-size='368' h='14457' id='55' is-fixed='true' name='relocation - sold above, comp (4)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type-v2='filter' w='22733' x='484' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='14457' id='71' type-v2='text' w='76299' x='23217' y='684'>
              <formatted-text>
                <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                <run>Æ&#10;</run>
                <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. </run>
                <run>Æ&#10;</run>
                <run fontsize='8'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                <run fontsize='8'>Æ </run>
                <run>Æ&#10;</run>
                <run fontsize='8'>And citation here:</run>
                <run>Æ&#10;</run>
                <run fontsize='8'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                <run fontsize='8' italic='true'>Redfin News Data Center</run>
                <run fontsize='8'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='2738' id='255' type-v2='empty' w='99032' x='484' y='15141'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='859' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='858' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='14457' id='71' type-v2='text' w='76299' x='23217' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific cities on both graphs. Individual city medians and averages will be shown by highlighting the city. </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                    <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                    <run fontsize='8'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>And citation here:</run>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                    <run fontsize='8' italic='true'>Redfin News Data Center</run>
                    <run fontsize='8'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57057' id='240' is-fixed='true' name='relocation - med sale, comp (5)' w='49516' x='484' y='17879'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='368' h='14457' id='55' mode='checkdropdown' name='relocation - sold above, comp (4)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type-v2='filter' w='22733' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57057' id='57' is-fixed='true' name='relocation - sold above, comp (4)' w='49516' x='50000' y='17879'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='24380' id='32' type-v2='text' w='99032' x='484' y='74936'>
                  <formatted-text>
                    <run fontsize='11'>In terms of median days on the market, by 2021, two metro areas fall short of Boston: Portland, ME and Cape Coral, FL. Portland, ME is the top relocation destination and outranks Boston in 2020. Prior to 2020, there&apos;s a trend of Portland having a higher number of days on the market. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Similar to Portland and median days on the market, Hartford, CT is the only metro area surpassing Boston post-2020 in terms of the sold above list price ratio. Portland, ME begins to match Boston after this point. Hartford, CT is a top relocation destination for Boston residents as well. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>The changes observed in these metro markets post-2020 might be related to inbound relocation during the COVID-19 pandemic. Even if not, the general trends from pre-2020 are most important to recognize, as these inform what elements of the market looked like prior to relocation during COVID-19. </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D2FA1DC2-A236-4107-AEF9-F6F4A289AD0A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Relocation - Transition'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#674467' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='98632' id='3' type-v2='text' w='99032' x='484' y='684'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#e6e6e6' fontsize='28'>Relocation Set - Comparison</run>
              <run fontalignment='1'>Æ&#10;&#10;</run>
              <run fontalignment='1' fontcolor='#e6e6e6' fontsize='14'>In this section, I compare elements of metro Boston&apos;s housing market those of metropolitan regions where metro Boston residents are relocating. Elements examined are days on the market, inventory, median sale price, and sold above list price ratio. Data is obtained from Redfin. </run>
              <run fontalignment='1'>Æ&#10;&#10;</run>
              <run fontalignment='1' fontcolor='#e6e6e6' fontsize='14'>With more time and data availability, I would include a comparison of all features previously examined. </run>
              <run fontalignment='1'>Æ&#10;&#10;&#10;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#e6e6e6' fontsize='14'>Sources for this section:</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#e6e6e6' fontsize='10'>[1] &quot;Migration Housing Market Data - Redfin.&quot; </run>
              <run fontcolor='#e6e6e6' fontsize='10' italic='true'>Redfin News Data Center</run>
              <run fontcolor='#e6e6e6' fontsize='10'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#e6e6e6'>[2] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
              <run fontcolor='#e6e6e6' italic='true'>Redfin News Data Center</run>
              <run fontcolor='#e6e6e6'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
              <run>Æ&#10;&#10;&#10;&#10;</run>
              <run bold='true' fontcolor='#e6e6e6' fontsize='11'>Note: &quot;Boston-Worcester-Providence&quot; refers to </run>
              <run fontcolor='#d5a3aa' fontsize='11'>Æ </run>
              <run bold='true' fontcolor='#e6e6e6' fontsize='11'>Boston-Worcester-Providence, MA-RI-NH-CT. &quot;Boston&quot; and &quot;Boston, MA&quot; refer to a metropolitan region of Boston. Similarly, other city names refer to metropolitan regions including and surrounding these cities.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1096' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1095' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='98632' id='3' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#e6e6e6' fontsize='28'>Relocation Set - Comparison</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run fontalignment='1' fontcolor='#e6e6e6' fontsize='14'>In this section, I compare elements of metro Boston&apos;s housing market those of metropolitan regions where metro Boston residents are relocating. Elements examined are days on the market, inventory, median sale price, and sold above list price ratio. Data is obtained from Redfin. </run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run fontalignment='1' fontcolor='#e6e6e6' fontsize='14'>With more time and data availability, I would include a comparison of all features previously examined. </run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#e6e6e6' fontsize='14'>Sources for this section:</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#e6e6e6' fontsize='10'>[1] &quot;Migration Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#e6e6e6' fontsize='10' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#e6e6e6' fontsize='10'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#e6e6e6'>[2] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#e6e6e6' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#e6e6e6'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;&#10;&#10;&#10;</run>
                    <run bold='true' fontcolor='#e6e6e6' fontsize='11'>Note: &quot;Boston-Worcester-Providence&quot; refers to </run>
                    <run fontcolor='#d5a3aa' fontsize='11'>Æ </run>
                    <run bold='true' fontcolor='#e6e6e6' fontsize='11'>Boston-Worcester-Providence, MA-RI-NH-CT. &quot;Boston&quot; and &quot;Boston, MA&quot; refer to a metropolitan region of Boston. Similarly, other city names refer to metropolitan regions including and surrounding these cities.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0F40EBF5-93C1-4ED9-A24E-705B3FF9A378}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Rent'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='535' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone fixed-size='1082' h='98632' id='532' is-fixed='true' param='horz' type-v2='layout-flow' w='65417' x='484' y='684'>
              <zone h='98632' id='530' type-v2='layout-basic' w='65417' x='484' y='684'>
                <zone forceUpdate='true' h='15655' id='87' type-v2='text' w='65417' x='484' y='684'>
                  <formatted-text>
                    <run fontcolor='#1b1b1b' fontsize='8'>[2] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[3] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;tid=ACSDP5Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;tid=ACSDP5Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='82977' id='533' name='gr' w='65417' x='484' y='16339'>
                  <layout-cache cell-count-w='14' minheight='293' non-cell-size-w='61' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='508' h='98632' id='534' is-fixed='true' param='vert' type-v2='layout-flow' w='30713' x='65901' y='684'>
              <zone h='6672' id='536' name='gr' pane-specification-id='0' param='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[:Measure Names]' type-v2='color' w='30713' x='65901' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15740' id='529' name='boston owner vs renter occ' w='30713' x='65901' y='7356'>
                <layout-cache fixed-size-h='176' fixed-size-w='442' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='725' forceUpdate='true' h='62703' id='79' is-fixed='true' type-v2='text' w='30713' x='65901' y='23096'>
                <formatted-text>
                  <run>Æ&#10;&#10;&#10;</run>
                  <run fontsize='12'>Renters make up over 65% of Boston&apos;s occupied housing. </run>
                  <run bold='true' fontsize='12'>Nearly 14% of Boston renters are paying $3,000 or more for rent, and over 23% are paying more than $2,499. </run>
                  <run fontsize='12'>By contrast, the entire US has only 6.6% paying rents higher than $2,499.</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>Compared to the entire US in 2021, Boston has a smaller percentage of people paying between $500 and $1,499 for rent, and a higher percentage of people paying the more expensive rents of $1,500 and more. Interestingly, Boston also has a higher percentage of renters paying less than $500 for rent than the </run>
                  <run fontsize='11'>US comparison.</run>
                  <run>Æ&#10;&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1574' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1573' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='15655' id='87' type-v2='text' w='65417' x='484' y='684'>
                  <formatted-text>
                    <run fontcolor='#1b1b1b' fontsize='8'>[2] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[3] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;tid=ACSDP5Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;tid=ACSDP5Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='176' h='15740' id='529' is-fixed='true' name='boston owner vs renter occ' w='30713' x='65901' y='7356'>
                  <layout-cache fixed-size-h='176' fixed-size-w='442' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='82977' id='533' is-fixed='true' name='gr' w='65417' x='484' y='16339'>
                  <layout-cache cell-count-w='14' minheight='293' non-cell-size-w='61' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6672' id='536' name='gr' pane-specification-id='0' param='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[:Measure Names]' type-v2='color' w='30713' x='65901' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='725' forceUpdate='true' h='62703' id='79' type-v2='text' w='30713' x='65901' y='23096'>
                  <formatted-text>
                    <run>Æ&#10;&#10;&#10;</run>
                    <run fontsize='12'>Renters make up over 65% of Boston&apos;s occupied housing. </run>
                    <run bold='true' fontsize='12'>Nearly 14% of Boston renters are paying $3,000 or more for rent, and over 23% are paying more than $2,499. </run>
                    <run fontsize='12'>By contrast, the entire US has only 6.6% paying rents higher than $2,499.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>Compared to the entire US in 2021, Boston has a smaller percentage of people paying between $500 and $1,499 for rent, and a higher percentage of people paying the more expensive rents of $1,500 and more. Interestingly, Boston also has a higher percentage of renters paying less than $500 for rent than the </run>
                    <run fontsize='11'>US comparison.</run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{30986B95-DC43-4F6F-8E5C-870CB881A30E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Sold Above List Price'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
      </datasources>
      <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='84089' id='86' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='50483' x='49033' y='15227'>
            <zone h='84089' id='1055' name='Cities - Sold Above List' w='50483' x='49033' y='15227'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='14543' id='261' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone fixed-size='265' h='14543' id='1057' is-fixed='true' name='Cities - Sold Above List' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type-v2='filter' values='database' w='16506' x='484' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='14543' id='1056' name='Cities - Sold Above List' pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:AdhocCluster:2:ok]' type-v2='color' w='14994' x='16990' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='14543' id='87' type-v2='text' w='67532' x='31984' y='684'>
              <formatted-text>
                <run bold='true' italic='true'>Click on color legend to highlight specific clusters. Cluster medians and averages will be shown by highlighting. Check or uncheck cities/clusters/property types to add/remove them to the graphs. </run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>Citation:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='84089' id='514' type-v2='text' w='48549' x='484' y='15227'>
            <formatted-text>
              <run fontsize='11'>A cluster analysis of sold above list price ratios shows that, </run>
              <run bold='true' fontsize='11'>since 2013, Boston has been in clusters with relatively high median values</run>
              <run fontsize='11'>. From 2013 through 2023, Boston has seen many quarters in Cluster 1, a cluster with a median around 0.36. For some quarters, Boston goes into Cluster 2, with a median around 0.48. The set median is around 0.26, and the average is close to 0.3. </run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontsize='11'>Boston&apos;s sold above list price ratio has been in above-average clusters since around 2013. Even then, Boston is not as bad as it could be.</run>
              <run fontsize='11'> Falling in clusters with median values below 0.5 means that, more often than not, Boston (among other cities in the cluster) are selling homes at (or below) the list price. This is not the case for cities frequently in Cluster 5 or Cluster 7, with above-average and above-median ratios relative to the High Population Set, including San Francisco, CA and San Jose, CA. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='11'>Important to note is the change in Cluster 5 around 2021. Prior to these years, Cluster 5 and Cluster 7 were mostly filled by San Francisco and San Jose. After 2020, Cluster 7 saw more quarters with Charlotte, NC; Denver, CO; El Paso, TX; Fort Worth, TX; and Nashville, TN. It&apos;s possible this change was affected by COVID-19, but it could also be affected by many other factors as well. </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1591' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1590' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='14543' id='87' type-v2='text' w='67532' x='31984' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Click on color legend to highlight specific clusters. Cluster medians and averages will be shown by highlighting. Check or uncheck cities/clusters/property types to add/remove them to the graphs. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='84089' id='514' type-v2='text' w='48549' x='484' y='15227'>
                  <formatted-text>
                    <run fontsize='11'>A cluster analysis of sold above list price ratios shows that, </run>
                    <run bold='true' fontsize='11'>since 2013, Boston has been in clusters with relatively high median values</run>
                    <run fontsize='11'>. From 2013 through 2023, Boston has seen many quarters in Cluster 1, a cluster with a median around 0.36. For some quarters, Boston goes into Cluster 2, with a median around 0.48. The set median is around 0.26, and the average is close to 0.3. </run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='11'>Boston&apos;s sold above list price ratio has been in above-average clusters since around 2013. Even then, Boston is not as bad as it could be.</run>
                    <run fontsize='11'> Falling in clusters with median values below 0.5 means that, more often than not, Boston (among other cities in the cluster) are selling homes at (or below) the list price. This is not the case for cities frequently in Cluster 5 or Cluster 7, with above-average and above-median ratios relative to the High Population Set, including San Francisco, CA and San Jose, CA. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Important to note is the change in Cluster 5 around 2021. Prior to these years, Cluster 5 and Cluster 7 were mostly filled by San Francisco and San Jose. After 2020, Cluster 7 saw more quarters with Charlotte, NC; Denver, CO; El Paso, TX; Fort Worth, TX; and Nashville, TN. It&apos;s possible this change was affected by COVID-19, but it could also be affected by many other factors as well. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='265' h='14543' id='1057' mode='checkdropdown' name='Cities - Sold Above List' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type-v2='filter' values='database' w='16506' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84089' id='1055' is-fixed='true' name='Cities - Sold Above List' w='50483' x='49033' y='15227'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14543' id='1056' name='Cities - Sold Above List' pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:AdhocCluster:2:ok]' type-v2='color' w='14994' x='16990' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2692247C-53BE-4109-8FB6-1741D450F7F9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Sold Above List Price (3)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='city_housing_small (boston.city_housing_small) (postgres)' name='federated.0zmlfoq0rqymvg1dh561b0dw2d5r' />
      </datasources>
      <datasource-dependencies datasource='federated.0zmlfoq0rqymvg1dh561b0dw2d5r'>
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='1071' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='98632' id='1062' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='14543' id='1074' is-fixed='true' type-v2='layout-basic' w='99032' x='484' y='684'>
                <zone h='14543' id='261' param='horz' type-v2='layout-flow' w='49516' x='484' y='684'>
                  <zone fixed-size='373' h='14543' id='1073' is-fixed='true' name='Cities - Med List Close' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type-v2='filter' values='database' w='23035' x='484' y='684'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='339' h='14543' id='1072' is-fixed='true' name='Cities - Med List Close' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type-v2='filter' values='database' w='20980' x='23519' y='684'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='14543' id='1075' param='horz' type-v2='layout-flow' w='49516' x='50000' y='684'>
                  <zone forceUpdate='true' h='14543' id='87' type-v2='text' w='49516' x='50000' y='684'>
                    <formatted-text>
                      <run bold='true' italic='true'>Check or uncheck cities/clusters/property types to add/remove them to the graphs. </run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                      <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Citation:</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                      <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                      <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                      <run>Æ&#10;</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='84089' id='514' type-v2='text' w='49516' x='50000' y='15227'>
                <formatted-text>
                  <run fontsize='11'>Not only are Boston&apos;s median sale prices relatively high, but its median list prices are as well. Relative to the High Population Set,</run>
                  <run bold='true' fontsize='11'> Boston has had between the 5th and 7th most expensive median list prices between 2017 and 2023</run>
                  <run fontsize='11'>. In 2022, the last full year of data, </run>
                  <run bold='true' fontsize='11'>Boston&apos;s median list price was $796,971 </run>
                  <run fontsize='11'>compared to a set median of around $430,000. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='11'>Interestingly, Boston&apos;s sold above list price ratio has fluctuated year-to-year since 2017.</run>
                  <run bold='true' fontsize='11'> In 2021 and 2022, Boston fell below the median relative to other cities in the High Population Set</run>
                  <run fontsize='11'>. </run>
                  <run bold='true' fontsize='11'>However, in other years, Boston has been above the median and sometimes even above the 75th percentile. </run>
                  <run fontsize='11'>In 2017, housing in Boston was sold above the list price around 44% of the time. In 2021 and 2022, that value dipped to around 32%. With limited data for 2023, Boston has stayed around 32%, but is now above the set median. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='11'>Cities frequently at the top of this list year-to-year include San Jose, CA; San Francisco, CA; Los Angeles, CA; Columbus, OH; and more. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42045' id='1061' name='Cities - Med List Close' w='49516' x='484' y='15227'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42044' id='1065' name='Cities - Sold Above List Close' w='49516' x='484' y='57272'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1591' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1590' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='14543' id='87' type-v2='text' w='49516' x='50000' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Check or uncheck cities/clusters/property types to add/remove them to the graphs. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run fontcolor='#000000' underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Citation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#000000' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#000000'>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='373' h='14543' id='1073' mode='checkdropdown' name='Cities - Med List Close' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type-v2='filter' values='database' w='23035' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='339' h='14543' id='1072' mode='checkdropdown' name='Cities - Med List Close' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type-v2='filter' values='database' w='20980' x='23519' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42045' id='1061' is-fixed='true' name='Cities - Med List Close' w='49516' x='484' y='15227'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='84089' id='514' type-v2='text' w='49516' x='50000' y='15227'>
                  <formatted-text>
                    <run fontsize='11'>Not only are Boston&apos;s median sale prices relatively high, but its median list prices are as well. Relative to the High Population Set,</run>
                    <run bold='true' fontsize='11'> Boston has had between the 5th and 7th most expensive median list prices between 2017 and 2023</run>
                    <run fontsize='11'>. In 2022, the last full year of data, </run>
                    <run bold='true' fontsize='11'>Boston&apos;s median list price was $796,971 </run>
                    <run fontsize='11'>compared to a set median of around $430,000. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Interestingly, Boston&apos;s sold above list price ratio has fluctuated year-to-year since 2017.</run>
                    <run bold='true' fontsize='11'> In 2021 and 2022, Boston fell below the median relative to other cities in the High Population Set</run>
                    <run fontsize='11'>. </run>
                    <run bold='true' fontsize='11'>However, in other years, Boston has been above the median and sometimes even above the 75th percentile. </run>
                    <run fontsize='11'>In 2017, housing in Boston was sold above the list price around 44% of the time. In 2021 and 2022, that value dipped to around 32%. With limited data for 2023, Boston has stayed around 32%, but is now above the set median. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Cities frequently at the top of this list year-to-year include San Jose, CA; San Francisco, CA; Los Angeles, CA; Columbus, OH; and more. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42044' id='1065' is-fixed='true' name='Cities - Sold Above List Close' w='49516' x='484' y='57272'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B2BB8F7D-556D-48D4-BF5F-6020D9D38E5B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Sold Above List Price - Metro'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#0b4270' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='housing (boston.housing) (postgres)' name='federated.1nol2rz0mh7ps41bweycg0387zpf' />
      </datasources>
      <datasource-dependencies datasource='federated.1nol2rz0mh7ps41bweycg0387zpf'>
        <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{c9054b67-6288-417f-8e18-d709a9fc72b9}]' role='dimension' type='ordinal'>
          <aliases>
            <alias key='-1' value='Cluster Outliers' />
            <alias key='0' value='Not Clustered' />
            <alias key='1' value='Cluster 1' />
            <alias key='2' value='Cluster 2' />
            <alias key='3' value='Cluster 3' />
            <alias key='4' value='Cluster 4' />
            <alias key='5' value='Cluster 5' />
            <alias key='6' value='Cluster 6' />
            <alias key='7' value='Cluster 7' />
            <alias key='8' value='Cluster 8' />
            <alias key='9' value='Cluster 9' />
            <alias key='10' value='Cluster 10' />
            <alias key='11' value='Cluster 11' />
            <alias key='12' value='Cluster 12' />
            <alias key='13' value='Cluster 13' />
            <alias key='14' value='Cluster 14' />
            <alias key='15' value='Cluster 15' />
            <alias key='16' value='Cluster 16' />
            <alias key='17' value='Cluster 17' />
            <alias key='18' value='Cluster 18' />
            <alias key='19' value='Cluster 19' />
            <alias key='20' value='Cluster 20' />
            <alias key='21' value='Cluster 21' />
            <alias key='22' value='Cluster 22' />
            <alias key='23' value='Cluster 23' />
            <alias key='24' value='Cluster 24' />
            <alias key='25' value='Cluster 25' />
            <alias key='26' value='Cluster 26' />
            <alias key='27' value='Cluster 27' />
            <alias key='28' value='Cluster 28' />
            <alias key='29' value='Cluster 29' />
            <alias key='30' value='Cluster 30' />
            <alias key='31' value='Cluster 31' />
            <alias key='32' value='Cluster 32' />
            <alias key='33' value='Cluster 33' />
            <alias key='34' value='Cluster 34' />
            <alias key='35' value='Cluster 35' />
            <alias key='36' value='Cluster 36' />
            <alias key='37' value='Cluster 37' />
            <alias key='38' value='Cluster 38' />
            <alias key='39' value='Cluster 39' />
            <alias key='40' value='Cluster 40' />
            <alias key='41' value='Cluster 41' />
            <alias key='42' value='Cluster 42' />
            <alias key='43' value='Cluster 43' />
            <alias key='44' value='Cluster 44' />
            <alias key='45' value='Cluster 45' />
            <alias key='46' value='Cluster 46' />
            <alias key='47' value='Cluster 47' />
            <alias key='48' value='Cluster 48' />
            <alias key='49' value='Cluster 49' />
            <alias key='50' value='Cluster 50' />
          </aliases>
        </column>
        <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
        <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
        <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[none:AdhocCluster:2:ok]' palette='blue_10_0' type='palette'>
              <map to='#2a5783'>
                <bucket>3</bucket>
              </map>
              <map to='#6798c1'>
                <bucket>2</bucket>
              </map>
              <map to='#b9ddf1'>
                <bucket>1</bucket>
              </map>
            </encoding>
          </style-rule>
        </style>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='80496' id='86' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='50483' x='49033' y='18820'>
            <zone h='80496' id='248' name='sold_above_list_cluster (2)' w='50483' x='49033' y='18820'>
              <layout-cache minheight='293' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='18136' id='261' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone fixed-size='291' h='18136' id='63' is-fixed='true' name='sold_above_list_cluster (2)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' w='18078' x='484' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='18136' id='509' name='med_list_price' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='filter' w='10158' x='18562' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='18136' id='395' name='sold_above_list_cluster (2)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:2:ok]' type-v2='filter' values='database' w='10158' x='28720' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='18136' id='396' name='sold_above_list_cluster (2)' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:2:ok]' type-v2='color' w='10158' x='38878' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='18136' id='87' type-v2='text' w='50480' x='49036' y='684'>
              <formatted-text>
                <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                <run>Æ&#10;</run>
                <run bold='true' italic='true'>Click on color legend to highlight specific clusters. Medians and averages for each cluster will be shown by highlighting. Check or uncheck clusters/property types to add/remove. </run>
                <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                <run underline='true'>Downloadable Housing Market Data - Redfin</run>
                <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                <run italic='true'>Redfin News Data Center</run>
                <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='43285' id='514' type-v2='text' w='48549' x='484' y='56031'>
            <formatted-text>
              <run fontsize='11'>Metro Boston is a little different from the city of Boston in regards to sold above list price ratio.</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='11'>Similar to its ranking for median sale prices, metro Boston has had the 7th most expensive median list prices among metro areas with cities whose population exceeds 650,000 since 2021. </run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontsize='11'>The average sold above list price ratio was the third highest </run>
              <run fontsize='11'>among metro areas with cities whose population exceeds 650,000 in 2022.</run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontsize='11'>Since 2020, more often than not, housing in metro Boston has been sold above the list price</run>
              <run fontsize='11'>. Beginning in 2020, metro Boston has typically landed in cluster 3 where, on average, housing is sold above the list price about 60% of the time. Visually, there has been</run>
              <run bold='true' fontsize='11'> a steady increase in metro Boston&apos;s ratio</run>
              <run fontsize='11'> since 2012. </run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='11'>This means that </run>
              <run bold='true' fontsize='11'>metro</run>
              <run fontsize='11'>Æ </run>
              <run bold='true' fontsize='11'>Boston&apos;s relatively high list prices are, more often than not, sold at an even higher price. </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='37211' id='507' name='med_list_price' w='25453' x='484' y='18820'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='37211' id='423' name='mos (7)' w='23096' x='25937' y='18820'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1578' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1577' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='18136' id='87' type-v2='text' w='50480' x='49036' y='684'>
                  <formatted-text>
                    <run bold='true' italic='true'>Note: Graphs best viewed comparing a few cities at a time</run>
                    <run>Æ&#10;</run>
                    <run bold='true' italic='true'>Click on color legend to highlight specific clusters. Medians and averages for each cluster will be shown by highlighting. Check or uncheck clusters/property types to add/remove. </run>
                    <run>
Data from Redfin, a national real estate brokerage. Find their Data Center here: </run>
                    <run underline='true'>Downloadable Housing Market Data - Redfin</run>
                    <run>
Citation:
[1] &quot;Downloadable Housing Market Data - Redfin.&quot; </run>
                    <run italic='true'>Redfin News Data Center</run>
                    <run>, www.redfin.com/news/data-center/. Accessed 16 Jul. 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18136' id='509' mode='checkdropdown' name='med_list_price' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type-v2='filter' w='10158' x='18562' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37211' id='507' is-fixed='true' name='med_list_price' w='25453' x='484' y='18820'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37211' id='423' is-fixed='true' name='mos (7)' w='23096' x='25937' y='18820'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='291' h='18136' id='63' mode='checkdropdown' name='sold_above_list_cluster (2)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type-v2='filter' w='18078' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18136' id='395' mode='checkdropdown' name='sold_above_list_cluster (2)' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:2:ok]' type-v2='filter' values='database' w='10158' x='28720' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='80496' id='248' is-fixed='true' name='sold_above_list_cluster (2)' w='50483' x='49033' y='18820'>
                  <layout-cache minheight='293' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18136' id='396' name='sold_above_list_cluster (2)' pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:2:ok]' type-v2='color' w='10158' x='38878' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='43285' id='514' type-v2='text' w='48549' x='484' y='56031'>
                  <formatted-text>
                    <run fontsize='11'>Metro Boston is a little different from the city of Boston in regards to sold above list price ratio.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>Similar to its ranking for median sale prices, metro Boston has had the 7th most expensive median list prices among metro areas with cities whose population exceeds 650,000 since 2021. </run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='11'>The average sold above list price ratio was the third highest </run>
                    <run fontsize='11'>among metro areas with cities whose population exceeds 650,000 in 2022.</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontsize='11'>Since 2020, more often than not, housing in metro Boston has been sold above the list price</run>
                    <run fontsize='11'>. Beginning in 2020, metro Boston has typically landed in cluster 3 where, on average, housing is sold above the list price about 60% of the time. Visually, there has been</run>
                    <run bold='true' fontsize='11'> a steady increase in metro Boston&apos;s ratio</run>
                    <run fontsize='11'> since 2012. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11'>This means that </run>
                    <run bold='true' fontsize='11'>metro</run>
                    <run fontsize='11'>Æ </run>
                    <run bold='true' fontsize='11'>Boston&apos;s relatively high list prices are, more often than not, sold at an even higher price. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7AA169B0-4B46-492A-A8BC-0399446C099B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Vacancy'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ecff' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='36271' id='636' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone h='36271' id='634' type-v2='layout-basic' w='99032' x='484' y='684'>
              <zone h='17023' id='198' is-fixed='true' type-v2='layout-basic' w='99032' x='484' y='19932'>
                <zone h='17023' id='3' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='99032' x='484' y='19932'>
                  <zone h='17023' id='633' name='bos_vacancy' w='49516' x='484' y='19932'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17023' id='638' name='us_vacancy' w='49516' x='50000' y='19932'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='19248' id='19' type-v2='text' w='76602' x='22914' y='684'>
                <formatted-text>
                  <run fontcolor='#1b1b1b' fontsize='8'>[3] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                  <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#1b1b1b' fontsize='8'>[4] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                  <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;tid=ACSDP5Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;tid=ACSDP5Y2021.DP04</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#1b1b1b' fontsize='8'>[5] v</run>
                  <run fontcolor='#000000' fontsize='8'>an Buskirk, Chris. &quot;Bye-bye Bay State: High Housing Costs and Low Transportation Reliability Driving Outmigration.&quot; </run>
                  <run fontcolor='#000000' fontsize='8' italic='true'>Boston Herald</run>
                  <run fontcolor='#000000' fontsize='8'>, 24 May 2023. </run>
                  <run auto-url='true' fontcolor='#000000' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bostonherald.com/2023/05/24/housing-costs-transportation-reliability-factors-in-high-levels-of-outmigration-in-massachusetts-report/&amp;quot;'>https://www.bostonherald.com/2023/05/24/housing-costs-transportation-reliability-factors-in-high-levels-of-outmigration-in-massachusetts-report/</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19248' id='641' name='homeowner vs renter vacancy' pane-specification-id='0' param='[federated.02ccs1q01w6aw018luhv60oik3bq].[:Measure Names]' type-v2='color' w='22430' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='62361' id='640' name='homeowner vs renter vacancy' w='49516' x='484' y='36955'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='446' forceUpdate='true' h='62361' id='17' is-fixed='true' type-v2='text' w='49516' x='50000' y='36955'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='15'>Rental Vacancy Rates in Boston are low.</run>
              <run fontalignment='1'>Æ&#10;&#10;</run>
              <run fontalignment='1' fontsize='15'>In a 5-Year Estimate from 2016-2021, Boston homeowner vacancy rates fall just short of US vacancy rates in terms of homeownership. However, Boston&apos;s rental vacancy rate was 4%, which was 1.7% short of the entire US. </run>
              <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
              <run fontalignment='1' fontsize='12'>As written by Chris van Buskirk at </run>
              <run fontalignment='1' fontsize='12' italic='true'>Boston Herald</run>
              <run fontalignment='1' fontsize='12'>, in 2022, Massachusetts had the lowest rental vacancy rates in the US. This helped raise prices and &quot;exacerbate&quot; problems related to the housing crisis, including affordability and low housing supply (Buskirk).</run>
              <run fontalignment='1'>Æ&#10;&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1545' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='1544' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='19248' id='19' type-v2='text' w='76602' x='22914' y='684'>
                  <formatted-text>
                    <run fontcolor='#1b1b1b' fontsize='8'>[3] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;g=160XX00US2507000&amp;amp;tid=ACSDP1Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;g=160XX00US2507000&amp;tid=ACSDP1Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[4] United States Census Bureau. &quot;American Community Survey.&quot; Census Data Online, Series ID: DPO4, U.S. Census Bureau, 5-Year Estimate 2016-2021, </run>
                    <run auto-url='true' fontcolor='#1b1b1b' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.census.gov/table?q=DP04&amp;amp;tid=ACSDP5Y2021.DP04&amp;quot;'>https://data.census.gov/table?q=DP04&amp;tid=ACSDP5Y2021.DP04</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='8'>[5] v</run>
                    <run fontcolor='#000000' fontsize='8'>an Buskirk, Chris. &quot;Bye-bye Bay State: High Housing Costs and Low Transportation Reliability Driving Outmigration.&quot; </run>
                    <run fontcolor='#000000' fontsize='8' italic='true'>Boston Herald</run>
                    <run fontcolor='#000000' fontsize='8'>, 24 May 2023. </run>
                    <run auto-url='true' fontcolor='#000000' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bostonherald.com/2023/05/24/housing-costs-transportation-reliability-factors-in-high-levels-of-outmigration-in-massachusetts-report/&amp;quot;'>https://www.bostonherald.com/2023/05/24/housing-costs-transportation-reliability-factors-in-high-levels-of-outmigration-in-massachusetts-report/</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='191' h='17023' id='633' is-fixed='true' name='bos_vacancy' w='49516' x='484' y='19932'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='191' h='17023' id='638' is-fixed='true' name='us_vacancy' w='49516' x='50000' y='19932'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62361' id='640' is-fixed='true' name='homeowner vs renter vacancy' w='49516' x='484' y='36955'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19248' id='641' name='homeowner vs renter vacancy' pane-specification-id='0' param='[federated.02ccs1q01w6aw018luhv60oik3bq].[:Measure Names]' type-v2='color' w='22430' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='446' forceUpdate='true' h='62361' id='17' type-v2='text' w='49516' x='50000' y='36955'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='15'>Rental Vacancy Rates in Boston are low.</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run fontalignment='1' fontsize='15'>In a 5-Year Estimate from 2016-2021, Boston homeowner vacancy rates fall just short of US vacancy rates in terms of homeownership. However, Boston&apos;s rental vacancy rate was 4%, which was 1.7% short of the entire US. </run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
                    <run fontalignment='1' fontsize='12'>As written by Chris van Buskirk at </run>
                    <run fontalignment='1' fontsize='12' italic='true'>Boston Herald</run>
                    <run fontalignment='1' fontsize='12'>, in 2022, Massachusetts had the lowest rental vacancy rates in the US. This helped raise prices and &quot;exacerbate&quot; problems related to the housing crisis, including affordability and low housing supply (Buskirk).</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FFDBE525-D727-4D6B-8703-1C64417FD763}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='map/top10'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#d5a3aa' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98632' id='8' param='horz' type-v2='layout-flow' w='99032' x='484' y='684'>
            <zone fixed-size='160' h='98632' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='99032' x='484' y='684' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#666666' />
          </zone-style>
        </zone>
        <zone h='57314' id='3' name='migration_map' show-title='false' w='54897' x='1995' y='2823' />
        <zone h='33276' id='5' name='mig_top10' show-title='false' w='30653' x='58525' y='3080' />
        <zone forceUpdate='true' h='15227' id='22' type-v2='text' w='54897' x='41898' y='68520'>
          <formatted-text>
            <run fontalignment='2' fontsize='14'>According to Redfin, a national real estate brokerage, most Redfin users looking to move out of Boston-Worcester-Providence in 2022 searched for metropolitan areas surrounding Portland, Maine; New York,  New York; and Miami, Florida. </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='11206' id='23' type-v2='text' w='53507' x='45224' y='59538'>
          <formatted-text>
            <run fontalignment='1' fontsize='24'>Where are Boston residents relocating?</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='16852' id='26' type-v2='text' w='96856' x='1088' y='82806'>
          <formatted-text>
            <run fontsize='10'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
            <run auto-url='true' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
            <run fontsize='10'>Æ </run>
            <run>Æ&#10;</run>
            <run fontsize='10'>And citation here:</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
            <run fontsize='10' italic='true'>Redfin News Data Center</run>
            <run fontsize='10'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>&quot;Boston, MA&quot; and &quot;Boston-Worcester-Providence&quot;  refer to metropolitan statistical area Boston-Worcester-Providence, MA-RI-NH-CT. Likewise, city names refer to metropolitan statistical regions surrounding and including these cities. </run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1642' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98632' id='1641' param='vert' type-v2='layout-flow' w='99032' x='484' y='684'>
                <zone fixed-size='280' h='57314' id='3' is-fixed='true' name='migration_map' show-title='false' w='54897' x='1995' y='2823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33276' id='5' is-fixed='true' name='mig_top10' show-title='false' w='30653' x='58525' y='3080'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='11206' id='23' type-v2='text' w='53507' x='45224' y='59538'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='24'>Where are Boston residents relocating?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='15227' id='22' type-v2='text' w='54897' x='41898' y='68520'>
                  <formatted-text>
                    <run fontalignment='2' fontsize='14'>According to Redfin, a national real estate brokerage, most Redfin users looking to move out of Boston-Worcester-Providence in 2022 searched for metropolitan areas surrounding Portland, Maine; New York,  New York; and Miami, Florida. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='16852' id='26' type-v2='text' w='96856' x='1088' y='82806'>
                  <formatted-text>
                    <run fontsize='10'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                    <run auto-url='true' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                    <run fontsize='10'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontsize='10'>And citation here:</run>
                    <run>Æ&#10;</run>
                    <run fontsize='10'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                    <run fontsize='10' italic='true'>Redfin News Data Center</run>
                    <run fontsize='10'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
                    <run>Æ&#10;</run>
                    <run fontsize='10'>&quot;Boston, MA&quot; and &quot;Boston-Worcester-Providence&quot;  refer to metropolitan statistical area Boston-Worcester-Providence, MA-RI-NH-CT. Likewise, city names refer to metropolitan statistical regions surrounding and including these cities. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#666666' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D820A7BE-D424-4496-8977-8EEC2885481C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='pop, 2'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#7f0d2b' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='67066' id='246' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='49516' x='50000' y='11548'>
            <zone h='67066' id='249' name='us_pop' w='49516' x='50000' y='11548'>
              <layout-cache minwidth='364' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='10864' id='242' type-v2='text' w='99032' x='484' y='684'>
            <formatted-text>
              <run fontalignment='1' fontsize='28'>People are leaving Boston.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49359' id='247' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='49516' x='484' y='11548'>
            <zone h='49359' id='251' name='mass_2' w='49516' x='484' y='11548'>
              <layout-cache minwidth='240' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='20702' id='248' param='horz' type-v2='layout-flow' w='49516' x='50000' y='78614'>
            <zone forceUpdate='true' h='20702' id='253' type-v2='text' w='49516' x='50000' y='78614'>
              <formatted-text>
                <run bold='true' fontsize='10'>Note: Scroll to see entire view on graphs</run>
                <run>

Population Data:
&quot;Annual Estimates of Resident Population Change for Incorporated Places of 50,000 or More in 2020, Ranked by Percent Change:
July 1, 2021 to July 1, 2022 (SUB-IP-EST2022-ANNCHG)&quot;                                        
Source: U.S. Census Bureau, Population Division                                        
Release Date: May 2023
</run>
                <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.census.gov/data/tables/time-series/demo/popest/2020s-total-cities-and-towns.html&amp;quot;'>https://www.census.gov/data/tables/time-series/demo/popest/2020s-total-cities-and-towns.html</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='38409' id='250' param='horz' type-v2='layout-flow' w='49516' x='484' y='60907'>
            <zone forceUpdate='true' h='38409' id='252' type-v2='text' w='49516' x='484' y='60907'>
              <formatted-text>
                <run fontsize='16'>Most cities in Massachusetts experienced declines in population from 2021 to 2022. </run>
                <run bold='true' fontsize='16'>Boston experienced one of the highest.</run>
                <run>Æ&#10;&#10;</run>
                <run fontsize='16'>Among US cities with populations exceeding 650,000, Boston was in the</run>
                <run bold='true' fontsize='16'> top 5 </run>
                <run fontsize='16'>for negative percent change in population. </run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1587' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98632' id='1586' param='vert' type-v2='layout-flow' w='99032' x='484' y='684'>
                <zone forceUpdate='true' h='10864' id='242' type-v2='text' w='99032' x='484' y='684'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='28'>People are leaving Boston.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49359' id='251' is-fixed='true' name='mass_2' w='49516' x='484' y='11548'>
                  <layout-cache minwidth='240' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='67066' id='249' is-fixed='true' name='us_pop' w='49516' x='50000' y='11548'>
                  <layout-cache minwidth='364' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='38409' id='252' type-v2='text' w='49516' x='484' y='60907'>
                  <formatted-text>
                    <run fontsize='16'>Most cities in Massachusetts experienced declines in population from 2021 to 2022. </run>
                    <run bold='true' fontsize='16'>Boston experienced one of the highest.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='16'>Among US cities with populations exceeding 650,000, Boston was in the</run>
                    <run bold='true' fontsize='16'> top 5 </run>
                    <run fontsize='16'>for negative percent change in population. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='20702' id='253' type-v2='text' w='49516' x='50000' y='78614'>
                  <formatted-text>
                    <run bold='true' fontsize='10'>Note: Scroll to see entire view on graphs</run>
                    <run>

Population Data:
&quot;Annual Estimates of Resident Population Change for Incorporated Places of 50,000 or More in 2020, Ranked by Percent Change:
July 1, 2021 to July 1, 2022 (SUB-IP-EST2022-ANNCHG)&quot;                                        
Source: U.S. Census Bureau, Population Division                                        
Release Date: May 2023
</run>
                    <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.census.gov/data/tables/time-series/demo/popest/2020s-total-cities-and-towns.html&amp;quot;'>https://www.census.gov/data/tables/time-series/demo/popest/2020s-total-cities-and-towns.html</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{35A8605D-D937-410E-82CA-7BD1FE81CFF0}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='population'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='68264' id='25' param='horz' type-v2='layout-flow' w='50000' x='0' y='10436'>
            <zone h='68264' id='29' param='vert' type-v2='layout-flow' w='50000' x='0' y='10436'>
              <zone h='45082' id='100' name='bos_cam_newton_pop' show-title='false' w='50000' x='0' y='10436'>
                <layout-cache minheight='180' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='263' forceUpdate='true' h='23182' id='98' is-fixed='true' type-v2='text' w='50000' x='0' y='55518'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='14'>Since around the start of 2020</run>
                  <run fontalignment='1' fontsize='14'>, population in the Boston metropolitan region Boston-Cambridge-Newton, MA-NH </run>
                  <run bold='true' fontalignment='1' fontsize='14'>has declined</run>
                  <run fontalignment='1' fontsize='14'>. The decline is relative in size to the decline metro Boston faced after 2008.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='278' forceUpdate='true' h='10436' id='24' is-fixed='true' type-v2='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run fontsize='24'>People are leaving Boston, continued.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='195' forceUpdate='true' h='21300' id='17' is-fixed='true' type-v2='text' w='100000' x='0' y='78700'>
            <formatted-text>
              <run fontsize='10'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
              <run auto-url='true' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
              <run fontsize='10'>Æ </run>
              <run>Æ&#10;</run>
              <run fontsize='10'>And citation here:</run>
              <run>Æ&#10;</run>
              <run fontcolor='#1b1b1b' fontsize='10'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
              <run fontcolor='#1b1b1b' fontsize='10' italic='true'>Redfin News Data Center</run>
              <run fontcolor='#1b1b1b' fontsize='10'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='10'>Population data: </run>
              <run>
U.S. Census Bureau, Resident Population in Boston-Cambridge-Newton, MA-NH (MSA) [BOSPOP], retrieved from FRED, Federal Reserve Bank of St. Louis; </run>
              <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://fred.stlouisfed.org/series/BOSPOP,&amp;quot;'>https://fred.stlouisfed.org/series/BOSPOP,</run>
              <run> July 10, 2023.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48247' id='96' param='horz' type-v2='layout-flow' w='50000' x='50000' y='10436'>
            <zone h='48247' id='99' name='%moving_within_boston' show-title='false' w='50000' x='50000' y='10436'>
              <layout-cache cell-count-w='21' minheight='121' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='20017' id='97' param='vert' type-v2='layout-flow' w='50000' x='50000' y='58683'>
            <zone fixed-size='371' forceUpdate='true' h='20017' id='14' is-fixed='true' type-v2='text' w='50000' x='50000' y='58683'>
              <formatted-text>
                <run fontalignment='1' fontsize='14'>Since 2017, the percentage of Boston metro region (</run>
                <run fontalignment='1' fontcolor='#000000' fontsize='14'>Boston-Worcester-Providence, MA-RI-NH-CT</run>
                <run fontalignment='1' fontsize='14'>) Redfin users looking to relocate within the Boston area has </run>
                <run bold='true' fontalignment='1' fontsize='14'>steadily decreased</run>
                <run fontalignment='1' fontsize='14'>. </run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='1660' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98632' id='1659' param='vert' type-v2='layout-flow' w='99032' x='484' y='684'>
                <zone fixed-size='278' forceUpdate='true' h='10436' id='24' type-v2='text' w='100000' x='0' y='0'>
                  <formatted-text>
                    <run fontsize='24'>People are leaving Boston, continued.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45082' id='100' is-fixed='true' name='bos_cam_newton_pop' show-title='false' w='50000' x='0' y='10436'>
                  <layout-cache minheight='180' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48247' id='99' is-fixed='true' name='%moving_within_boston' show-title='false' w='50000' x='50000' y='10436'>
                  <layout-cache cell-count-w='21' minheight='121' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' forceUpdate='true' h='23182' id='98' type-v2='text' w='50000' x='0' y='55518'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='14'>Since around the start of 2020</run>
                    <run fontalignment='1' fontsize='14'>, population in the Boston metropolitan region Boston-Cambridge-Newton, MA-NH </run>
                    <run bold='true' fontalignment='1' fontsize='14'>has declined</run>
                    <run fontalignment='1' fontsize='14'>. The decline is relative in size to the decline metro Boston faced after 2008.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='371' forceUpdate='true' h='20017' id='14' type-v2='text' w='50000' x='50000' y='58683'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='14'>Since 2017, the percentage of Boston metro region (</run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='14'>Boston-Worcester-Providence, MA-RI-NH-CT</run>
                    <run fontalignment='1' fontsize='14'>) Redfin users looking to relocate within the Boston area has </run>
                    <run bold='true' fontalignment='1' fontsize='14'>steadily decreased</run>
                    <run fontalignment='1' fontsize='14'>. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='195' forceUpdate='true' h='21300' id='17' type-v2='text' w='100000' x='0' y='78700'>
                  <formatted-text>
                    <run fontsize='10'>Migration data from Redfin, a national real estate brokerage. Redfin Data Center uses data obtained from those relocating using Redfin services. Their data center can be found here: </run>
                    <run auto-url='true' fontsize='10' hyperlink='tabdoc:load-url url=&amp;quot;https://www.redfin.com/news/data-center/&amp;quot;'>https://www.redfin.com/news/data-center/</run>
                    <run fontsize='10'>Æ </run>
                    <run>Æ&#10;</run>
                    <run fontsize='10'>And citation here:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='10'>&quot;Migration Housing Market Data - Redfin.&quot; </run>
                    <run fontcolor='#1b1b1b' fontsize='10' italic='true'>Redfin News Data Center</run>
                    <run fontcolor='#1b1b1b' fontsize='10'>, www.redfin.com/news/data-center/migration/. Accessed 6 Jun. 2023.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='10'>Population data: </run>
                    <run>
U.S. Census Bureau, Resident Population in Boston-Cambridge-Newton, MA-NH (MSA) [BOSPOP], retrieved from FRED, Federal Reserve Bank of St. Louis; </run>
                    <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://fred.stlouisfed.org/series/BOSPOP,&amp;quot;'>https://fred.stlouisfed.org/series/BOSPOP,</run>
                    <run> July 10, 2023.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EBF616B3-4A3D-4166-90C4-132526EE8245}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='1067'>
    <window class='dashboard' maximized='true' name='Final Story'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{29786569-F271-4F1E-AD63-D7E1C6FC143D}' />
    </window>
    <window class='dashboard' name='pop, 2'>
      <viewpoints>
        <viewpoint name='mass_2' />
        <viewpoint name='us_pop' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C7F2A40F-BA2B-46B6-9FD4-385B2E877E7E}' />
    </window>
    <window class='dashboard' name='population'>
      <viewpoints>
        <viewpoint name='%moving_within_boston'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='bos_cam_newton_pop'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F76444BA-67FE-4B4D-B20F-EB7A0EBA736E}' />
    </window>
    <window class='dashboard' name='map/top10'>
      <viewpoints>
        <viewpoint name='mig_top10' />
        <viewpoint name='migration_map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='26' />
      <simple-id uuid='{CAECF8D7-4C9C-45F9-8C58-F0F511113153}' />
    </window>
    <window class='dashboard' name='Introduction'>
      <viewpoints>
        <viewpoint name='worker stats' />
        <viewpoint name='worker stats 21' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{498D5219-91C8-4048-A421-FC5DBEB686DE}' />
    </window>
    <window class='dashboard' name='Introduction (2)'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{9FC70119-5FFE-4657-BFEE-D6F87A6A1E0F}' />
    </window>
    <window class='dashboard' name='Introduction (3)'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{932F3603-6472-494A-A09F-128C694434A4}' />
    </window>
    <window class='dashboard' name='Production - Transition'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{D1EDF261-E9C5-4CB8-90A8-A2E0696F2795}' />
    </window>
    <window class='dashboard' name='Inventory, MOS -cities'>
      <viewpoints>
        <viewpoint name='Cities - Inventory'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cities - MOS'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{8FB944AF-6744-4226-8819-3B2118088DD8}' />
    </window>
    <window class='dashboard' name='Invent vs. MOS Population Correlations'>
      <viewpoints>
        <viewpoint name='inventory vs population, listprice'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='mos vs population, listprice'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{736C9EDE-FAA0-4ACB-91BF-A7F2A9CCDDF4}' />
    </window>
    <window class='dashboard' name='Permits'>
      <viewpoints>
        <viewpoint name='permits'>
          <zoom type='entire-view' />
          <highlight field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:AdhocCluster:1:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='permits_yoy'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D8F0CFB2-ABC1-4C2A-8C5A-7133581D7CD7}' />
    </window>
    <window class='dashboard' name='New Listings Sum'>
      <viewpoints>
        <viewpoint name='new_listings'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='new_listings (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{965BD8E5-1C33-4C3B-85FC-704A05EFF327}' />
    </window>
    <window class='dashboard' name='Production - Summary'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{509C7226-E933-429A-A382-325E40E11B9F}' />
    </window>
    <window class='dashboard' name='Affordability - Transition'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{407CC874-3DED-4737-AB04-D09543F7D6F9}' />
    </window>
    <window class='dashboard' name='Median Sale Price'>
      <viewpoints>
        <viewpoint name='Cities - Med Sale'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cities - Med Sale Close' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3AEDDD6D-6722-44B1-A2C8-8A68DF16D2E2}' />
    </window>
    <window class='dashboard' name='Sold Above List Price (3)'>
      <viewpoints>
        <viewpoint name='Cities - Med List Close' />
        <viewpoint name='Cities - Sold Above List Close' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DF97EC47-E2D9-4874-8F51-6569B09C0193}' />
    </window>
    <window class='dashboard' name='Sold Above List Price'>
      <viewpoints>
        <viewpoint name='Cities - Sold Above List'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1BFB0838-C7EC-450F-8541-45E3636EAD5C}' />
    </window>
    <window class='dashboard' name='Rent'>
      <viewpoints>
        <viewpoint name='boston owner vs renter occ' />
        <viewpoint name='gr'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{25C118D0-788C-4B18-8134-E95EF7F4D586}' />
    </window>
    <window class='dashboard' name='Price vs. Income'>
      <viewpoints>
        <viewpoint name='grapi' />
        <viewpoint name='income and sale price'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DAFD8B08-23A7-4C9C-9673-11EEA79A5024}' />
    </window>
    <window class='dashboard' name='Price vs. CPI'>
      <viewpoints>
        <viewpoint name='growth rates'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='growth rates (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='sale price vs cpi'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='sale price vs cpi housing'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='41' />
      <simple-id uuid='{D0C764CF-D1EB-4F14-8027-3A58E4FE3B45}' />
    </window>
    <window class='dashboard' name='Affordability - Summary'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{C95D90DA-64AB-4401-9FC9-1D0C61E2E8D8}' />
    </window>
    <window class='dashboard' name='MC - Transition'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{86529F90-1F1D-4F09-9E13-03369B5F0EEE}' />
    </window>
    <window class='dashboard' name='Vacancy'>
      <viewpoints>
        <viewpoint name='bos_vacancy' />
        <viewpoint name='homeowner vs renter vacancy'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='us_vacancy' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{96F12BF0-D847-4863-85F2-74D1C4AD20CE}' />
    </window>
    <window class='dashboard' name='IRH'>
      <viewpoints>
        <viewpoint name='2018 IRH' />
        <viewpoint name='2022 IRH' />
        <viewpoint name='IRH, 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='IRH, 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{ED3C3324-D1B2-43D7-B03F-6BD58A129F1E}' />
    </window>
    <window class='dashboard' name='Days on the Market'>
      <viewpoints>
        <viewpoint name='Cities - DOM Close (2)' />
        <viewpoint name='Cities - MOS (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8863F7F4-C6FC-4AB3-BB44-1D6522206F9E}' />
    </window>
    <window class='dashboard' name='Days on the Market (2)'>
      <viewpoints>
        <viewpoint name='dom vs list price, pop'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{96E15DD6-0A76-43C9-8EC3-AB3DEA03F8D8}' />
    </window>
    <window class='dashboard' name='DOM vs. Med Sale, Construction'>
      <viewpoints>
        <viewpoint name='DOM Construction &amp; Existing'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Med Sale Construction &amp; Existing'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{433C4A11-5678-4F17-A54C-9687CCDA8C05}' />
    </window>
    <window class='dashboard' name='Metro Regions - Transition'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{8D668803-7E90-4C86-AAA3-10E729803800}' />
    </window>
    <window class='dashboard' name='MOS Metro'>
      <viewpoints>
        <viewpoint name='mos (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3DB917F0-ADC0-4BF6-8F6C-9C49119C417E}' />
    </window>
    <window class='dashboard' name='Inventory, MOS - metro'>
      <viewpoints>
        <viewpoint name='inventory'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='mos'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C6E1950E-6608-415E-8AB8-60AC99B536D8}' />
    </window>
    <window class='dashboard' name='Metro - Median Sale Price'>
      <viewpoints>
        <viewpoint name='med_sale_price'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='med_sale_price (2)' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9C771219-7F7C-4F10-9017-0EBADBEEE681}' />
    </window>
    <window class='dashboard' name='Sold Above List Price - Metro'>
      <viewpoints>
        <viewpoint name='med_list_price' />
        <viewpoint name='mos (7)' />
        <viewpoint name='sold_above_list_cluster (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0A71ED9D-D6D0-4662-B4CA-FE00C27FC6A8}' />
    </window>
    <window class='dashboard' name='Days on the Market - Metro'>
      <viewpoints>
        <viewpoint name='days_on_mkt'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='mos (5)' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{59E18DAD-B106-4F39-81A0-8731CCBCF918}' />
    </window>
    <window class='dashboard' name='Relocation - Transition'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{03E2B975-F23F-4105-A835-4BA629BF199A}' />
    </window>
    <window class='dashboard' name='Relocation - Comparison (3)'>
      <viewpoints>
        <viewpoint name='relocation - inventory'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='relocation - median dom'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B1F492D7-B729-4CE3-874D-13515A5291C1}' />
    </window>
    <window class='dashboard' name='Relocation - Comparison'>
      <viewpoints>
        <viewpoint name='relocation - med sale'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='relocation - sold above'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7CC3EE17-AFA9-4B96-A5B0-7152B5FDFD0A}' />
    </window>
    <window class='dashboard' name='Relocation - Comparison (2)'>
      <viewpoints>
        <viewpoint name='relocation - inventory, comp (4)' />
        <viewpoint name='relocation - med dom, comp (3)' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9EE02493-D30A-4816-8A8E-B2333A54FAFC}' />
    </window>
    <window class='dashboard' name='Relocation - Comparison (4)'>
      <viewpoints>
        <viewpoint name='relocation - med sale, comp (5)' />
        <viewpoint name='relocation - sold above, comp (4)' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5F63680E-AEDE-44BE-B23B-4FFACFE6F2CB}' />
    </window>
    <window class='worksheet' name='mig_top10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='dropdown' param='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[yr:date_:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6211EE57-4408-4356-BEF3-84C509C1335D}' />
    </window>
    <window class='worksheet' name='migration_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[yr:date_:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{40401F1A-C16C-4439-8F4B-82094A5EE8B1}' />
    </window>
    <window class='worksheet' name='%moving_within_boston'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wuxdmv1eajlf01ey74fs00bzs9g].[yr:date_:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5435DAC8-288D-4B68-BFD2-7E4BD3629AE4}' />
    </window>
    <window class='worksheet' name='bos_cam_newton_pop'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8F12F48B-F061-4A56-81DA-F83511EA237D}' />
    </window>
    <window class='worksheet' name='emp_openings_ma/us'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{10AD3A2F-B05B-43EA-84CD-26C1AC734B6C}' />
    </window>
    <window class='worksheet' name='emp_openings_ma/all'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jmnc9m1dhtstc18jx0o910k8d9v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3C3AA8A1-C199-48CD-B9C7-EDCE1A9881E4}' />
    </window>
    <window class='worksheet' name='unemp_per_open'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kemtyy15odxjt1d90c6p0msk57q].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A287DFC8-54E5-414A-99DD-1019C20C355D}' />
    </window>
    <window class='worksheet' name='mass_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C8286FAC-1AD9-423B-BABA-BC0B7828A881}' />
    </window>
    <window class='worksheet' name='us_pop'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08s5a8m1ty4l6u17m9d1o0qqq5xd].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{90C3C933-1CF8-4AF8-B79F-8010309E5AB1}' />
    </window>
    <window class='worksheet' name='days_on_mkt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='size' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{349C2705-D795-432C-94B2-34884ABFF7D8}' />
    </window>
    <window class='worksheet' name='med_sale_price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:3:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E500F66E-33A8-4C7C-9A08-0B2F2A17C57D}' />
    </window>
    <window class='worksheet' name='med_sale_price (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6C816F31-888D-4FA7-A337-E50175A62B9C}' />
    </window>
    <window class='worksheet' name='med_list_price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='filter' />
            <card pane-specification-id='2' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8BA817B6-440F-4B3B-BCC3-4EAEE0F25613}' />
    </window>
    <window class='worksheet' name='sold_above_list_cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:AdhocCluster:15:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CC5CA0DF-7053-42C2-AC50-206067165B08}' />
    </window>
    <window class='worksheet' name='sold_above_list_cluster (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3E9C0A59-2823-45BD-845E-39C9173C0D1B}' />
    </window>
    <window class='worksheet' name='inventory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='color' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8EB4A5E5-CD91-4DC0-AB71-DC8AC2110E79}' />
    </window>
    <window class='worksheet' name='mos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='color' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{735C2995-E823-4079-887D-4CE6ACC35B02}' />
    </window>
    <window class='worksheet' name='mos (5)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='filter' />
            <card pane-specification-id='2' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CC607110-1DDD-4BCF-8535-F9BE95B0B062}' />
    </window>
    <window class='worksheet' name='mos (7)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='filter' />
            <card pane-specification-id='2' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E8905132-B10B-4F49-81EE-23D0927CE768}' />
    </window>
    <window class='worksheet' name='mos (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 2]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:High Population Set (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FB9CFEF8-D176-4283-BB0C-FC2A4F39B551}' />
    </window>
    <window class='worksheet' name='sale price vs cpi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]&#10;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9319E559-7DD5-4152-BD3B-130E4FA056D0}' />
    </window>
    <window class='worksheet' name='growth rates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{278BFA5D-E43B-450F-9A9B-BBBEAFD202DA}' />
    </window>
    <window class='worksheet' name='growth rates (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:year_:ok]' type='filter' />
            <card pane-specification-id='4' param='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EF5938EA-F2A0-4290-AB2B-D8BE379A21ED}' />
    </window>
    <window class='worksheet' name='sale price vs cpi housing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[:Measure Names]&#10;[federated.1tz0z5k0yisc5w15tms1a14xjwo1].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6C1CD51D-5103-47DF-B03B-836E7BD13CCB}' />
    </window>
    <window class='worksheet' name='income and sale price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ro1uyf1vcnn9o1fy3o900aal5hw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7E629B5D-54BA-4392-AA30-464478CE96CE}' />
    </window>
    <window class='worksheet' name='mos vs population, listprice'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{448604EC-6354-4F13-AACD-6DEF1A6D5DA8}' />
    </window>
    <window class='worksheet' name='inventory vs population, listprice'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0BEF4905-A6C2-446F-99E5-EC2E7574606B}' />
    </window>
    <window class='worksheet' name='dom vs list price, pop'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{130EAC5E-0F61-4829-85C8-050A6BDD1717}' />
    </window>
    <window class='worksheet' name='relocation - med sale'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='filter' />
            <card pane-specification-id='1' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4F77F6F4-BF56-4469-8F93-B2879F7C0C5E}' />
    </window>
    <window class='worksheet' name='relocation - median dom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='filter' />
            <card pane-specification-id='3' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:parent_metro_region:nk]' type='color' />
            <card pane-specification-id='3' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9146855F-D6BB-41E8-9154-FCBAE0B04141}' />
    </window>
    <window class='worksheet' name='relocation - inventory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='filter' />
            <card pane-specification-id='5' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' type='size' />
            <card pane-specification-id='5' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D34F1EE8-8973-454D-A1F2-984C3CBF6F0A}' />
    </window>
    <window class='worksheet' name='relocation - sold above'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='filter' />
            <card pane-specification-id='7' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='color' />
            <card pane-specification-id='7' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CF6FE296-7AB6-46CE-BE68-2F10E9E883B8}' />
    </window>
    <window class='worksheet' name='relocation - med dom, comp (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6280097D-FB13-4565-9A2E-091B29402FFF}' />
    </window>
    <window class='worksheet' name='relocation - inventory, comp (4)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1DD336A6-71AB-40EC-8A44-3EEBD49D21CB}' />
    </window>
    <window class='worksheet' name='relocation - sold above, comp (4)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5B29D25E-3365-4ECE-9094-048DDBBBF737}' />
    </window>
    <window class='worksheet' name='relocation - med sale, comp (5)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[none:property_type:nk]' type='filter' />
            <card param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[Parent Metro Region Set 3]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nol2rz0mh7ps41bweycg0387zpf].[io:Relocation Set (copy 2):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F97DE2B8-D3D1-4E40-9F91-4860B5C0C2EF}' />
    </window>
    <window class='worksheet' name='bos_vacancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:boston_2016_21_percent:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7A1E2176-9E2F-466C-973C-A44B864BEA81}' />
    </window>
    <window class='worksheet' name='us_vacancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02ccs1q01w6aw018luhv60oik3bq].[sum:us_2016_21_percent:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D62A1D13-CD63-4E0C-AD8A-EFF23E99AC8C}' />
    </window>
    <window class='worksheet' name='homeowner vs renter vacancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02ccs1q01w6aw018luhv60oik3bq].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B8F58555-C8A3-4921-A764-09D7281F645F}' />
    </window>
    <window class='worksheet' name='boston owner vs renter occ'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0b2seqf0y9yx4516oxqpk1bt9n6s].[sum:boston_2016_21_percent:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{220AE922-7AE5-420E-AD57-1B9FE27C61DD}' />
    </window>
    <window class='worksheet' name='grapi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k4ktit04nh92813cecnd0tsn37o].[none:label_grouping:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{53F5466B-DEA3-46E6-B2DE-070B1FD4B451}' />
    </window>
    <window class='worksheet' name='gr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fod11d0cmxddv15cv2uw0dbqdgs].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{721781CB-9AF5-4219-A2F6-FA025270F2A3}' />
    </window>
    <window class='worksheet' name='worker stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wefjtl1vj660u11kn0u20817tl8].[sum:total_est:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{804C9E40-44D8-47EF-8415-BE13C729D37D}' />
    </window>
    <window class='worksheet' name='worker stats 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ujnqdc0ko1xqq14tq9jg0jt9j70].[sum:total_est:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B5B1FA90-5252-49F4-85B6-D7A3D9DD2E09}' />
    </window>
    <window class='worksheet' name='Inventory vs. Homes Sold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{69A4F2CA-6023-428E-9ECA-B67BFC81F7AC}' />
    </window>
    <window class='worksheet' name='Hires and Construction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{19EA2D0E-4A2B-495A-84C4-16021821DEDD}' />
    </window>
    <window class='worksheet' name='Openings and Construction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2DBAB519-5004-496B-B92B-95D5B79748FE}' />
    </window>
    <window class='worksheet' name='Population and Construction (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1c6nvfh1k5shdl1gwk8k00lvk3k4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6525306C-A5B9-4299-8288-29E14CECE6E2}' />
    </window>
    <window class='worksheet' name='2022 IRH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pveoyc116gjhu152l1r30wh75id].[sum:total_income_restricted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{068A79C5-A6A1-41C5-B5C0-63E85D93D55D}' />
    </window>
    <window class='worksheet' name='2018 IRH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[sum:total_income_restricted:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{673BC569-B2C3-415C-A545-D176FDE97D28}' />
    </window>
    <window class='worksheet' name='IRH, 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{67ED8973-6E4A-417A-ABE2-2D8C378636BC}' />
    </window>
    <window class='worksheet' name='IRH, 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pveoyc116gjhu152l1r30wh75id].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D9FEA321-1450-4DC1-9145-AFB1F7A00C6D}' />
    </window>
    <window class='worksheet' name='IRH, 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wwugh11qqo7ko19b8gr9021ddg8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E331A498-BC12-4CD6-937E-652C74896E66}' />
    </window>
    <window class='worksheet' name='Cities - Inventory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type='filter' />
            <card param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:Region Set:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B7A402C4-7AFA-4A9E-9DC5-F713889949D1}' />
    </window>
    <window class='worksheet' name='Cities - MOS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type='filter' />
            <card param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:Region Set:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BDBCD155-8E47-4682-ACE1-7FAAD83F89F1}' />
    </window>
    <window class='worksheet' name='Cities - MOS (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[High Population Set - Cities]' type='filter' />
            <card param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:property_type:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:region:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:Region Set:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3BE13C8A-06D7-4F61-93C2-BFB70370EE1A}' />
    </window>
    <window class='worksheet' name='Cities - Med Sale'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:AdhocCluster:1:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8823D286-89B6-4D19-B414-51B1459EC50B}' />
    </window>
    <window class='worksheet' name='Cities - Med Sale Close'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EBE3E201-1FE8-4A9F-B6AF-E173A6BB80A1}' />
    </window>
    <window class='worksheet' name='Cities - Sold Above List'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:AdhocCluster:2:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F941289B-E368-46AF-A776-2E5EA21E8233}' />
    </window>
    <window class='worksheet' name='Cities - Med List Close'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6B6E0012-8F73-447B-8FEE-E361824CF739}' />
    </window>
    <window class='worksheet' name='Cities - DOM Close (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[none:median_dom:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD452A37-2915-4DDC-82A7-C15C9569DBD6}' />
    </window>
    <window class='worksheet' name='Cities - Sold Above List Close'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='153'>
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[io:High Population Set (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C4224CAF-A1BF-475E-95CC-4DD2DEA60BDF}' />
    </window>
    <window class='worksheet' name='permits_yoy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.152wax70nwka6c1368l9h1wutbu1].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{74C92D66-3CF4-451B-AA85-1B0AD468EB2C}' />
    </window>
    <window class='worksheet' name='permits_yoy (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.152wax70nwka6c1368l9h1wutbu1].[yr:timeframe:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9360373-88BC-4095-9543-3019E32B676D}' />
    </window>
    <window class='worksheet' name='permits'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[none:AdhocCluster:1:ok]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{4272429F-EC47-4E38-8D41-E637C0A3D03F}' />
    </window>
    <window class='worksheet' name='permits (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gpq7nu00xltvb1dmmz7j0fw3gdu].[yr:month_of_period_end:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0971DBA-D5D7-451A-BCD5-D780BAA8292D}' />
    </window>
    <window class='worksheet' name='new_listings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F2D6C635-CD41-4984-BF71-BA79C183FFDB}' />
    </window>
    <window class='worksheet' name='new_listings (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zmlfoq0rqymvg1dh561b0dw2d5r].[qr:period_begin:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3BA25CA8-3E6E-4592-92EB-D0EA399A9628}' />
    </window>
    <window class='worksheet' name='DOM Construction &amp; Existing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1l3udmg117jwxt1b3osnh04wnvas].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l3udmg117jwxt1b3osnh04wnvas].[yr:timeframe:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{988B813D-CDA5-46FA-B521-9A68EF40E771}' />
    </window>
    <window class='worksheet' name='Med Sale Construction &amp; Existing'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0kzp9sz11ftqab13o6fs41hx3obo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D5182708-E542-4AFC-9F2D-02D9D090674D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Affordability - Summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Affordability - Transition' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cities - DOM Close (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cities - Med List Close' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cities - Sold Above List' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DOM Construction &amp; Existing' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DOM vs. Med Sale, Construction' width='192'>
      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
      ksM77c2U/w8ftnPtJnvEDwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Days on the Market' width='192'>
      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
      wu3xkEmluI8i/YceWwzwUwibAifOnOfIof1YfTVYKZEsgU81yJc0nN4gdeEAEyNDNLR10tDQ
      xNsrkwQCXsavDtDR0UqwJk9TbTVT4+PUNzdjUyViqTSV6jp8LhvZ1ApD4zfxkX/IsCUC/RTC
      WxVmZ18Pw+MzdDbX4PQGiIS8DF0dJFhdTXN9mHfPDbDr6ONUkvNMTF9LCCChKAo6gl29vZQq
      Bo0t7dilMpIk460K4fO4uHr5PMGapg/0HX9asMUAP4VYnp/iwoWLrCwtshzPkM+mSKWzaDoU
      ikViqTz79vUx0X+Jqro26iNV6AaUNZ3q6moMrczkzCwWWRCLx2jY1kGlmKNcLFAoFNANKBYe
      cKqbDwm2zKA/4wjWbaO1xoesWjh96tQ9V/D5WceWDvAzjtW5CVbv3YP7ocEGBghGaj+ocWxh
      Cx8I1kWgLWzhYcT6DmAYBquL91aedAtb+LBjgwj0O7/6yQ9qHFvYwgeCLTPoFh5qbDHAFh5q
      bDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5q
      bDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5qbDHAFh5q
      bDHAFh5qPLQMoCgKDsf9LXO6hQ8fHloGsFqt+Hy+D3oYW/iA8dAywBa2AFsMsIWHHFsMsIWH
      GhtSI7a3t39Q4/iJw26343Q6cTqdd7zXZrNRKBTu6rk33ivLMuFw+Kb3CSEw7pCX2DAMNE1D
      VdU73nvtmdfaASQSCXK53B3HeTuoqoqu62janYswv995+kk/02q1UiqVMAxjIwOMjIwAEh3d
      3ZTTUaaXkvT2dDI3PkweG+0tDYwO9BNqbMMuigwMj9+xM6HYObB/F1TynD5z4ZYF2iTFTkOt
      l6npxTs+02L3sGdnN3opx+lzl2jt3kNheZi51cwd216D0+mkcf8nWLVV3fFev99HPJ7Y9LtR
      KZC4+uqG33bu3Lk2j+D3+/nKV75y83ewWCiVSrftt1AokEgkaGxsvOO9YDKcYRjoulkF44//
      +I+5ePHiTe+9cZy3Q1NTE8lkkkRi8/u/32fey70P4pk9PT2MjY2hadrmAhmK3U1iYYL27TsJ
      1sHlc2fYt38/o+MTDAyMsqevl6vDY3Ts3I19eJz8HTpTnT7cSoWzgxPY3X662lvIJaO4w/XI
      GPSffYd0UUdIFvw+L56qOqyUmVtJEwl5mRgbp6W9g1xylcHRSQB29PVw7vRJXMEwFllQ7Xcj
      3J3MrZ69q4m6BmtwGw7LnQmrCDhqIpt+14oZeA8DbOHDhU06QCWfxBlqJhldRJWgUCpTKmus
      RJPs2beLoasDCNVBwGkH+c4daLkYZy6PsmPvIXx2mWKhSE1tHZTzjC1miPiv2+JVRxCrnmC1
      bCfskbFZrdR39BF0gM/nX79PkaCiG+RzeWyeahpqvDQ1NyPuz5xs4SHCJgbw13XR3eAhnSsQ
      TRfo7upCFWUef/JJEssLyHY/LQ3VpPNl1LtgANniZFdfD0a5QKCmAZsiKBYL5HJ5tFKBkqbj
      C9Vx6MAuVqaHkJ0R6ryCpUSRQkmjnF4mp6uk0yk6OzsBGBie5MiRQ+zduZ1wpJofvvw93jo3
      TMRrve8TtIWfbWwSgVJL4xzPOjC0CsmZedweD4NDKWyOYSyqQiGfZWAwhTCGyN9ZeqCUjfGj
      t47d8noMgBzHV8xCVpPzq+vXFuZnABgaMv++dnKbji5w7MTChuckRi7feTDvweqZv2NhYeGO
      9/X09NDf37/5wlZxnQ89NjGAVimRSFyn7PRaVfJcNsN1e0L5rjsQip2D+3dhVAqcPnN+kxKs
      On04jCwWp494VqepSjA2s7rhnraODsZHxtjR282FwWlC1jyGpwFbYZmxuVXeL9zbDuD1pu94
      X9btw9t1c2tObvYSxdj0+x7DFj5YPPAqkarTh0upcHZwHJs7QE9HM9HleRRXkGq/g8WMSpM1
      hrOuh7Pn+6nylnCFmtByKa4Mmhp9DgetjfVsqw8SL+gsDZ5ne5sfWXh+LAa4JyU4slkJBkzi
      32KADy0e+EGYlotx+tIIO/Ye4uCBnVAq4fMH0LUKrupqCtFVZmZmWJidZDWRxh5sojnowOfz
      rj9jaXqCvkP7OTswS3tAJYOTxoYaGpubULc03y38GHjgDCBZHOze2YtRLjA0OIbFbiWdydLQ
      UE8pX6JUzBKqqadsSAQ9duILU6zmdNLp9LrSqxVSpONJJiZnyOtQVVvPsR++zA/ePEtjzZZD
      2xbeP/5/jbaks3p5+ioAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Days on the Market (2)' width='192'>
      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
      8OEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Days on the Market - Metro' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Final Story' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='IRH' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Introduction' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5Rk133n93m5cnVVdXd1ztNhcsBgZkBkDEAkAiAJipRIrdfrtS3tHlvH
      x14nHe+uvFrZ+kNH/kNntbvas7sWRUiyRIEESBAEQOQJmAEmd/d0zqk6Va562X+8nh4MJwCD
      QILq+pzTp6veje/V/d707v1d4V+Ed7hUqLBFEX/ZGahQ4ZdJRQAVtjQVAVTY0lQEUGFLUxFA
      hS1NRQAVtjQVAVTY0lQEUGFLUxFAhS1NRQAVtjQVAVTY0lQEUOEXTvvDd7Pj209/4vChhiRK
      MPCZ5KUigAq/cJL7t9P6wOFPHP7J//yHdHz57s8kLxUBVNjSVARQ4YuJIHh/nzaOj4hb/nQp
      VKjwGSDAo//u9/ngT74LLuz5r75Bck8fjmUx/sq7nP7j/4hj2fQ++yhdTx0lmKxmz3/9TbY9
      8wi52UXe+t0/Atfl0X/3+5z5N9/DLJbY/9u/QXLvdl7/Z/83ix9cAiDR18n+3/4Nanb14Jg2
      8yfPVgRQ4YuAQP2BXez/rW/jT1Rx/j/+Daf/+D8R62rl/v/rf6KwuMyl7/6AxTP9lNYyVP3e
      7zD77gfMnTiLWSiC6+3pqj+wk5b772TbVx6i/7kX6f/eC6wMjHpuB3fz6L/9V1z68+f54E/+
      AklT2fmbz1QEUOGLQ3k9w6u/83/imBYAmak5xl56k4ZDe7n03R+QHp8hPT7Dkf/1v2V1cJSp
      109cF0fPVx/hhe/8j+RmFzevCaLIPb/3O1z4T3/rtTIbvPE//2FlDFDhi8P4y29vFv4rlDM5
      ZJ/6seN4/0++e03hB6jesY1oawP933vhOv8VAVT4YnObO9ZLy2vXXYu2NFBIraJncte5VQRQ
      4e89Li7CTWaEKgKo8PeezOQcgZoEWlXkOreKACr8yuE6LpL28ccFq4NjpCdm2Pmbz1znVpkF
      qvArR3Zmnp6vfZn1sRlsXSd1/vIt/buOw9v//P/hsX//rxFEgbEfv4Gkaez8ztOVFqDCL57M
      xCwrAyNXL7gu8yfPUV7PXO93eo7l/tFrrh3/gz+luLzGPf/iv2PvP/7m5lvduffOUV7P3jDN
      pTP9vPDt/4FoayOP/fs/4Ogf/y5WWUeoWIarsJWptAAVtjQVAVTY0lQEUGFLUxFAhS1NRQAV
      tjQVAVTY0lQEUGFLUxFAhS1NRQAVtjQVAVTY0lQEUGFLUxFAhS1NRQAVtjQVAVTY0lQEUGFL
      UxFAhS1NRQAVtjQVAVTY0lQEUGFLUxFAhS1NRQAVtjQVAVTY0lQEUGFLUxFAhS1NRQAVtjQV
      AVTY0lQEUGFLUxFAhS1NRQAVtjQVAVTY0lQEUGFLUxHArwDBzm3s+s5TbP/1J0l01H2sMIIv
      RG1fy8Y3keS+3ttMVaD1yw8QiPpuMxzU7tvOjY+k+/gk922/7lqoMQlIJPf1fPyI5CDJXa03
      d/7wFzUU+PgRV/jMcUwLSzeuux5oqmfx9bdYns+x6794ilz6LbSAH6wSpq0Qa60mde4ytitS
      u6eP8sIs+aJCvL2e9YU8slumkFojUFeLpGkEohpLF0YJNjURrg5QXM1SzulU97awemEQvWgQ
      bOumaX8bC2+/Q6SzA5/mkBqYJNSYJD+3RKgxiV6w8IcVQnUJFs8MIEdiJDrriG/vZuXsAC4Q
      bm0hmIyTHrxMOacT39EDpQxr4wuE21oIJeOsD1zG9YVwMmu4WhhZKJPo62Tp/GWqd/bhFNYp
      lwR2/5fPcP5Pv0shtQaiRO3e7ZQX5sguF4k2xgjUJVm72I9eNAGI9fWAq1C9LczycIrk3h7W
      Lg2gF00SO/uw08vXCuB/nz/1C/mhK9yYc8/9kB/81u/ewEWi8YG7qBGDmKlpqnbupTZuMvru
      MN1PHGLizQv0fu0BirqPXP9Z6h98gIV3TyMFo/Q8eYSBv3yF3icOoJsBrJl+hMYeaooGdQd7
      mTq7QNuRHiytmpnX3sFfE0efWqS8ukZ+bh5fWx/1LRqraxLtd2n427oZeO5Fmu87RGosQ2Oj
      wdy0S9uhHkI7djP+o7dofqBqM+d933yCwb/4O7qffYzU2ApKYQFa96AIJq3PPsHgd/+Onmcf
      IzWXRz/zDmZyG1XyLADh9g7cYpqWo/cz8BfPU1hIUc5a9Hz5CKWCTO7SWeofehDn7ffZ/Y0j
      nH3uLbq/+hAXv/cykZ0HqKk1WFkPIorQ/fVHWTp1ht5vPMbqfAFrdphQb3elC/Srgc3cG8cZ
      +O7fItY0IDoGs8fO4MhBCjMT5KamcOUA/qDEyug8qZEU4eogtXt6UTQV1/FicY0SSxdGyC2t
      I7oGanUdtb2NLJ0bZuzld4i0NxNKxr0UdQOzWCLYVEvqgwFWzg7ib7q++7V8rp/s3CKiP4ZT
      WCW/sER27uph1fnZOXLzS+gFi1h9hMWLYyyeHSbSnCQ/47mVCxaidCXE1c6T7NOIdrSiBVUc
      U8cslbE3TpL3BSRWx+ZJXV4knAyxOjBMfn4e21UACLcnSZ25zNrgGI4D4cZ6Qg21rA6MEI77
      SV2eZvr1kzc/JbJYyGO7IEkyfp+2ed11XXBsLFdAkSXca7IM4FIq6Ti2ic/vx7JBU6VNX45t
      YjoCmnLjpAv5PC4CgYAPy3ZRFRkXcCwTV5BwbAtV9Y7INA0DSZGxLAf15+K7cjByqZBDkH34
      NAVDL4GoYJoGAb//mnv68EHK5WIBywVN8yFLIoIgoOsGkgiirCB8KH4vPLiOhY2IIomb6Rt6
      GV03UH1+TL2MKwj4VIWyriMrKoauE45EET+iw+za0P6Vh6nJ6pBPY1sWrgtGagblgSfp+Xoz
      hYlRcmUffd94FNknM/STEYJvH2dpwaZhVzOOaeFYXkKuZYOoIMrgmAaCopLobSIQ8yM6vs2b
      ciyb5VMD9D3zCHUWLL3zNtX3PMi2rzxEtD7K0vAajuN6fo0MulNP99MPUdUU38x7sLmFrqeO
      IpTWmbqwQM+zj4PiY+L5H7H90INse+oolNbITuToeOIojr+W9XencUyLaGcrkltEkEREBJRY
      NVVNCRzTIjWSovcbX0YJaAy8OE40VuuVrw2BpE6cZ+c3niK/aoG7xOL5IQLVMayMw+zZMbb/
      2mMgcu0hef8ye2kz4/lsBkQJBBHXNnEBSZSwHBdNEdEtkLBxXJBEAQcBEAkF/V4hdm1cRDRN
      Q9cNBFHAsUw0VaVkmPj9AYxyCUQJwbVRND+aqlDI5xEkGUWCom7jUwSKJR2fpmIjgmPj2jay
      5sM2ysiaD8u0cF0HWVEwdR1F8xHwez+kberotoAsusiyQi6TxheKYJSKuICmqRQLRVRNw7Qd
      IuEQxXwOV5AI+FSyuQKBgJ9isYSiSIiCiGk7OI6NIAj4NZVCsYRPU7FcEcGxcIFQOIwA6KUi
      jotX4FwTSfXhWAYOIo5l4A+GNwVw8y7QZ094+z4aWyXmB1M0H+qj/69/+rmk0/3VRxh+/pXb
      dvtFcfMukCAgyzKObeMCoiAgyTKuYwEioijibhR+ryD5YKMmFQQXWfVjWTaSCIIo4rouoiSj
      KjKCIGDbNrZte+2CIOLTVMD1/FoGLgKiKGIYFpIoIkkSouhlV1EVdF1Hkq9eAwFREFE33EzT
      GwhZloVlWciygiAISLKCIks4jg0IGLqBLEu4roum+RAFAQG8e3ddFFnEsCwkSUTcqPU1TUOW
      FWRRRDcMz0308nIlXoByMY/pePm1LB3TsrGMMmXDQpZELMt7Br8McgNnmbkwj6KKXP7+q59b
      OlOvn/hEbr8obtoF8gcCOI5LKKQBjlfTCwKSJCPLEpJtI4kajuMiioAgIgV8G2GDIIioiowk
      ivgFCVGUcF0HQRSIhBVc190o9FcRBBGfz+cJSxIRJRsR1Wt9JC9NQVUAF2WjsDquSyAQABwQ
      RHAlVM2HZXlNoaRo+BU2heIPBBAEgXAkguOAKICzKVzPj2/j3kVRxOfzI0oyrmODIGwcSet1
      /zxcXNeLX3YcRN+VeAVUzY/suoiSRDAg4tU3DrLipRcIBjdF9ZEIXlg+0aG2AqIs4ljXiq0w
      N09BEBClTzYUlP0+HMvEMW3kgN9r5XUd27SRNA1cGz2TuxpAFFH8GmaxBC4Y+SJKwIdZLHu5
      lGVkVcYslr2K0HE+Ub5+HlFREGUBq+TNsMkBP45h4Fj2zQUgSTLS5sBE2mwqlCu1sCxfuacP
      B9q4Jl3zXZavJON9v9VvLl1NdDONK8jy9dkVr/skXhPPz4e5cl0Qpc28//zPf829X/kg3vRR
      Xc3BRoRX4pVkmat3czV/H7rFj4lIxxMPMPvaWxhl63YDQyBG78N9DPzw2NUYwwladtcxfXaK
      qrowa+MLt86BLONYV9NO3nWEWDKIL5lg8D+/xJ7f+SZrF8dZHxjADtTStKsJtBALr7/K6vQ6
      INH3na9iZTKoqsPA8++y4x88jb6WRrKLDL92gZ3f/jLltRxOboX5oVUSdSozp4Zu61bjd9yF
      M3GK9KqXV7WmgZ7H7sAwJApDZ3CirUTiGlp1guG/+NubC6DCF4eqvfux5kYxpRD7/8njFFJp
      ChPDZLISTXvbwTEZee0se779KPnlDIWxy1DVyNK7bxM7cIji5AwAiT17SLTXIAkmywsWzff1
      sjqbJVQdQIo3EG+txilmmB/Jse2eDnRdZvX0cVIjS4Q7OkjubCM7MspS/wSp995jyXZoeepx
      tEQE0TSRfSpWsUzjXR0MfO8HOFKQHc8eYXX6NbTmTqzpAUbeHKDz2SepPXCA7Jl3mT43T++3
      nqbuS3ey+MpPSU1n2f6dZyi99j7+Lz2D78Io5bJN+1OPowoGSlhl8K9epfNrjyI4Dmvn30dr
      6cMfkskOD5E4fACl2Sb9g/e8VmZ1kUt//gJydSsdhxIoiQSX/vx55PouOo/0XCuAXC53wx+g
      wo1xHQfrM3xmpq7f8HpNTyuzPzqDIMUpzUwy9OJxdnz7KcIOXP6rF4gfvofajmoK0+MM/egk
      O779FOWSiyiAGglTlr3WJzsxiT+i0XhnLyNv/JTlmEG5BFrYTyjZyMBzL9D+1GOEqyXWzn7A
      7JRL96FmUiNLZIaHyY5P0Pn1p6nuqufSD07S+vhR3NQE2aUVLv/Ny6RnVtn9m09i26438LfK
      IHoziLLPj1nMePdpWmihEOZqAQDHslDCKsWcvvHdQRBgdTJDoiPG3MAKml9m5G9fIrL/blqP
      HsGcvsTEyUl2fPtJMvNpigsrrE8u4vaP4AyeIdTSRu22WsZ/doqqXbuo21bD8A/foPfXmwGw
      8gWkQNW1AgiHwx/5IxmFNEUCFNPL1Dc0sLq6SnV19TV+VldXSSQS14V17DJraYNEPIxt2zfs
      0uC6WNe4uVjWTfwCrmMzNjFNV2f7TfPs2BauICGJAqlUitra2o+8z49DaWGBnzY339DNEEVS
      fj91xSJFWcYWRao2Cviy34/iOER1nYVgkFi5TMC2afj9P75hXJZhomgKugW+eBWSP4jgWpiW
      RCAaIFgdJj84TTIeQwp4biAj+32EG2vJDlwGYNszDzP+g59QvbMT8PrGm91RUUYNaGghjdyc
      jeI4fHiCu2r7dmq6kiy9/TOyC+u0PfU4xYEzrM6uo0aiqH4FJRzGNXXyWUi0JrBCLZSmxxBV
      heLMBNG77kW+uEQ0FmDo3eP0HD3A8vx7aCGFmZ9dou1Leyi8NYSi2DgOKAEVc97rtws+P76I
      37vXmTGqO+uQIxmwyqSHRyhnCvR+7RFScxaSppKfmiQ/NUmgvZf6jhDDLx3DRcARFAJRP7HD
      u1m5eArpfq32X165yfv/t3/y0b+6XeD0+XHGTr9GoKWX8aERFAyW1guorsn0/ALDYxM0JCIU
      TJgdH8KS/FjFdUbGB5mcLtHaFGV6ZonseorphVVqaxKYpRwX+i+jiDbff+EnbOvq4nL/JRRF
      4W/+9u/o6Opi5PIggUgcVRFJzU8zt5zFyEzx3qUUO3raWJyfYS1TJL+eIl20cPUsI5MLqOiU
      XZXp0cucOtdPV1sDA4OjRKvCTE1MkFrPEQnIXOofIpaoZnZimJItEQ76b/korHye4T/6oxu6
      jUWj1BWLTEYilBSFkiwTtCxEvHHsfDBIQVGo0nVmwmGqy2UiDz7K+LEz18VVXCvQfLCLtZk0
      NT0t+KurmH3zBMsDE9QfOYAxM87qQoGanmb81TFm3zxOenqZxsN7yM9Mk51ewCiUyC3nqe5u
      IjMxTW5iBl9jC+bqEuX1HIuXJmj60gHWzp0jt5TGzOcwCgZ2uUQ5U6C8vMza0CR63huwBuqS
      RFobiXe1khsdwt/aRU1XPRM/fYfVy+NU79uHXyszdayf1ofvJTc6TG7dpPmuXcy+8S6llVV0
      S6XpYA9Tr7xNKbWE44tTv6uNiZffxrZcWo5sZ/rYBVwXqjpbUcMRnPV5Fs8PYytRkr2NTLxy
      DDVRS93eblKnzpCenKN2Ty/piTkAfNUxQnW1xLpaEewyMycv0XjvIaylSRYvL9/8PcDNcF2X
      t978GT5VIru8Sv3uQyxOzlGj5smZAqG2nWQnLzC/mOb+g528eWkZwS5THQlyYHczHwwZ3H+o
      mbeP9VMoZanzi3Tc/WVWLh1nydTY1dNF/+AQve0NLC0tMJd2CEg2mpVl3dXQTYnH77+DN459
      QFMYqK4jn5a5Y287P3z++9x//xGef+EtZEmgvr6KeHUjQfLMpw1qWndw+cw7+EUTXyiMo/ix
      bT+ymQZF4uCBAyxMjXBqcAERm29/82u3fBalhQV+1NBwQ7fxSAQBSKsqfttGF0Va8nlius66
      pjEVDuOzbXrW1xmPRGjPZmn6/T/m1T/8DzeML75zO6XFJaINURYvjF/nLgQiJDsTLF6c+Mjf
      8FeBYFsHUiFFdjkPQP2de1k8fQ73E82C3ZzbHgQLgoCTnSey7ykunH+O+56IMz86RgkLVQ1S
      X59kbdikt6OO5bxDS1sHdRGZ8eEhsvk8CFenPuOJBKqZxXaguqkdcS3Fpctj6KUilwcHidfW
      IUlF9HKJcDhIR0MnCt50qWOZFMouMfnqlEqiJknA56OxuZW2liQBn8Ls8EXWBR+K6iOfTaMb
      Jsm6BB3butGNIqtZicJyDlcSSWcyIKk0t7bRVBP5VA82WSxSliQkxyGm68wHg6i2zbqqYogi
      PtvGb1ks+/0YkvSRqyfXLg0AUFpZvaG7W8yyeDH7qfL8RaIwea3IF06d+1zSue0WAKCQy6KF
      IhRzWSKRCJm1ZcqOTFVAQfSF0It5ggEf+aJBMbOKv6oGFYPldJ5YNEYwoJIvlBFFAdG1kQNh
      RFtncnqOlrY2VhfnCITCpHMlYlUR9EKWQDTByuIctY0t+BSJXHqVvAHJRJiy4RLwa+TzeUKh
      EOsrS1iij5AKi2t5GmqqQNZYXZxDDkRIRANMzy7S3NSAYTreG1m/xszsAs2tLawtzSMHqohF
      grd8DrdqAQxRJK8oxHSdgiwjuy7Sxrx2QVFQHQe/ZbGuaYQNA8V1abhFC/BZIag+AlGNwnLm
      E4VP7t/B0pn+m7rXHdhBqWRSHhtH1z/+lG1y33aWzg5cd12pStDx8GGs9DJjr54itnMXDbvb
      WDr1PiujizQ+cA/RZIipV96krMt0PX4PTm6N0Z+e2GwtlFg1nQ8fwlxbYuy194nv3k39zlaW
      Tp76ZAKo4FFOpfjZgQOfWXyxf/q/8Mof/NvrrvtqaggkosiSTap/AjWeoLqrntTZAbTqapRI
      hNLMFP6mVhTJZHlwanOp89L5YcItzWjxKoylOeSmHroONXH2z55Hq28inAiweGYALdlArLGK
      wnKa7OwS1bu3oy/NkZ33FrZp1TUk2mqI7+im///9IVV93YhGjtWxeQINDd7aoLOX6f3Wk0y8
      /h7GWoZQYw2B2hoyQ0MUszq1e3dQXpghm8qR3L8DI7XA+lQKgHBTHbbtIqsawYSfxTNDuEBi
      Vx+Zy0Mkjz5K6dL7NN6zh4vPvcqOf/gsIz94g0iNyspEmh3fuBeLAJM/eBG1fTc10SzjJ0YB
      qN7dx/rAZRoee5Lc+ydovn8vF//yNXb9o2c//WpQM7/MxPw6F06fouS4jI6OXednfPz6PiuA
      bRUZGZvGdRzW0+mbpjE0dHsvQ+YnhpldXr+ln/X1DXdLZ2j0k/WbBVHEn0ze8E9PJpne+FtN
      JplLJvFtuIkb18VkkolkkrUr12/yRrb2zjsJR0Wk2nYa93bS8/S9lPMW3U/dS+vjjxAMQKB7
      F9UNAYRwDbHOdtrv6cPxV9N+93Z6v/UV9OUl2h97gMJCiuzUHI4cJJwIQLSZxv3dbHt4P5nF
      Mh0P7qHpkQdRnBItjz6E5pNAUOh95j4ys6sEEhESdxykqkYjdsdhqrvb6HxgF4W0TfU2b7Vo
      7cF9+MJV7PjWUXJTc3Q99RCtjx1FNAu0PfEwdXd/CZ+VRfRfbWGb7z1I8q4jxOuDyA091LR4
      M5KrFwfBHyVeq2IF68iPe+UrvVLA72RZGV2i8d4jrPcPIksOeskiN3AZf0cbcjCA7FNYuTCI
      GIxRlRBxYs3kRkYAyKyXP/2LMMkfYerMBzjrY7ixBvLLacziGdaKDj3NMfqn1jANnahPxPYn
      mBq+SDBWj58SiytL5M0wXW0NLKdS9F84i+0qHLnnbnLzI1yaWqMqFmd5foZoQGFkYoaeXfuZ
      vHwBf1WSkGywuFrgwME7EK0Cp98/T7S2gYEPTvOlh55Az61w7P1B+no7mJiYorm9i8XpUYKx
      eiTXoJRZZnpukeWigFVYo+RqxH2wnMkRrWnGLaTIlGBbW5Kh0Sm2bd9DTdWtu0VXqAIUYBFI
      4838eJOTMAaUgQmgCxgB6m8VmW2yOjyFLhfouGcHwViYQCzI8sAE0V6V+bOjNDzyEMtnTpBZ
      KxPu3YsWUFBFnbWpZXzNM2RnUxglA7usYxVLIKuEGpPYYgC76CJG4iT3drJ0ZpDYnXeTz6+R
      GRnDtl1Qg9iZZQqLS+QW00RbGxCyC5TnZ3D9cfITY2THRsnLEtUfahDTw2PkF1NYFkSakmQy
      K6wPjbJ6eoD4zh6q2sOkRya9NAAcnaXzI/h2JPBpXtEMtHbQfqiDwb98ESKNNLTXAODzS6ya
      Ij3fepKVE++yOrlMbM8Bb6VuOIqTz1LV1YmTXUYnROsdrQx+70WItdKwLwZMoWnip28BREkF
      K0+ooY/Z918h0dzG0nqJ7mqBk2cHqO/ajWSk+btXjuMsX2ZqzWJmZoqp+WXu2L8bCW8uf2Zm
      Blv0Uesrk8pDdnWJ9h0HWVmYBryBryYbnHrzZ2jJHtqbazj9/lmc0jrzq3lGzn9A6+5DLEyP
      U9fUSn1NFWYxTaC6meELZxEVhamJCbKZDKblpTc8Oc+hg/sRjQznB8ZYW5hhcn6VPQf3MzN0
      kcW0yd6d3Zw4cQpFFpicmrmtZzMNNOEVfgdPAMtABlgBSniCkDbcb4YrSLQ+fA/djx1m/u3j
      rM5lCNQmUH0Kzsaiv9T7l2h54mG2f+sJnNQ4uh0gkKxBksA2PD+OYWKXikR6thPrasIfCSD7
      ZRAUZEUC20RUVOaOnyfUlCRYE/PW4+hpDDlB99PeMuj542cINCQJ1ddQGB/C37mbnm88QaKt
      GscwcUwT13E38+YYJrMnLhBuqiVYHcXX0EBVUw2h+prNZeWOYeIYpre03La8ZdZA99NHEWQ/
      3V97DNVYwgo10ffNJ5CLa6jbdlPTHCZ5+BCNB7Yxe2aUnd95ip2/9iWmXj/HyvmLrE0s0v3M
      RhxffxylNItd1U7fN59AyKQ+mzHAqZ89T1Xfw5x544c8+xu/zjuv/RTLdqmviVK17UtMXzxG
      V3OCmTWDpcUUdQ0NlNbmEBSZslvF/Ye3886xk2iBEHExR3Db/RjjbzGY9qNgomBil/OEon5M
      J0I2t051bR1mNoWg+tm57xBOZprT/bNIqkpAgcOHD1NYnmA86ydqLTO+nKO+ro7syhKrBQOf
      5BJSwXRF1ksuil0kGK1BxmLv4f0cf+MkjlVC9oWoCqlkSwbNbT20Nlx96aevrHDs0Udv+Ews
      vJq+C7iA90opCYQBPzCAV+vP4wlgOxD85j/i5X/1b66Lq+nog6y99xbF3OezctTX1EXXkUZm
      3p+g5chOLj730ueSzheRL+wgeLr/JHLLYRo++uX0L41bCeCTELiJAJRQCKuY39zZ9Xngr63F
      H/WTmZzFNn85S7R/GXzqMYDrWNiuiGNb3rp300JRlGv8mKZ53TUA13WwLAflBrvDWnYcvkWa
      NrYrIN9g0Oi63tKJG8V5M8rlEqrm/8idWQC2ZSKIMqIoIEejbP+zP7u5X9tG13X8fj+WdfW5
      6BtLIjRNo1Ao4Pf7EUWRufOjN4zHzHsvg5AkRBwc+8Zvg0RFxrFsJEXe7PZ8HERFobycopS6
      gZuqIisSRqEEgBwI4NoGtm4BAko4gF0s4dgOst+HVSpfE14OBMA2sXTTWyIf8mMWiriOiyAr
      KD4FI1/0/AYDuKaBbXyCFa+fkNtfCvFzWIVlTp6fpv/dHxNq28mFD07TUJ9ENyxEwUXXDd47
      dZqW5kYs28Uol3AFCRybXHaZUx+M0NbagKGXMWwHwXUQJBHLNHnv5EmS9Q2USgVEUWJlZRVV
      kVmbuMSlFZfqgASChCSKmIZOqVRGcHSOn75AQ7Ia3bKRRZFCoYCiKOjlEg4CkuQJtlAsIYk2
      P/7Ry3T19OHYJoZhIuJQ0k0USSSfzyMJsJbJIwku/e+/ixNpIuKTQBBwQyGUePy6PzkWo396
      msVCgYIoMra0RPeBA+QFgf7pafw1NSzk86xbFrOZDJ179rA+MsXQj9+46bMO77qT2oRBdrlw
      Q/eWR49irS4RbkpSXPn48/zBtmaEUgHburaJkatq6Pv6A4RaO4hUCcj1nTQf7Kb24D70uSnq
      7rufeHs9zXftIbuU4cBvf4ulU2c2B7WJAwdovqObursOUhgdoe2ZrxBprKbpYK2w+/sAACAA
      SURBVB8rIwts//XHCDbUE2+pQk620rCrg8Z77yTdP4hlfcavfG/Cp24B5GANdmmQRHMzE2eP
      4Yu18sbrP8MnC/h9KotWFUEc3nn9Nbp6ujh9YRxJlghJJrFEGN1Rsc0Cr79+DAkL2Rfhrgfu
      4tTJkywvLrI8fZkTAwvcuX8Hw4OXccwyVYpFXivx2sQgkiTx+CMP8MpLL9LQ1EjZ0cCx6L90
      kcvjs3Q3VyNqQQJ+jcujMwiixFOPP8zJd9/CFwhiyxqWIyIAb736EsmOHSxOXMaxbcJVVeRt
      hR0dTQyNT6AXdcz8EjXXm6y5DkEQ2Lt3L++99x6NjY2USl4NOjw8jCiKTE5O4rou9913H8eO
      HfP2Wt+EYPs22g51IcSbyLw1SfPD9+MP+8he7sdQE9R0JnHyaQwAUSHaUkt05x6kcg5/TRX9
      z71E22P3I6syC28fI3nfPWAaLLz9LrmVAsGGevLpPDv/m8fITi3jFlYYfe0DrMwK/d99ASla
      T9e9rQSj9fR/93mEUA19R3cz+OJruLZL3288jbG8SOrytZMEa+fOsvqBQ/3Rhwk0tyIV5hl+
      8T2aHn+UcMCi/7s/QFCD9D19hOXXf0bKdmj5yhNofoly6RfTDfvUs0CCIIK+hi/RzdhAP11d
      jchamM6GOGt5g917D0A5Tbaok8+sgRamqaEOR1To7upAEsAxi/gjSepjfnIlA8M00Q2Hmrp6
      6po76Wut9t4vuDaSP0xnWzP59AqiL0xjgzf3HIjE2NHXRyGXwbJKrGcKCECuaLB9ex+qXcCW
      /DQ1eW9uyxZs7+2iWDaor6tDkcAXSbCrp5VMtkhDcwvt23ZQG4CxyVlso0Q4UU9zfRLHsrAs
      G9O6eVPtui7Hjx+np6eHWCyG67qYpkkkEqG1tXVzdWu5XMayrGs22f88TYe3M/T//YSpYxcR
      w3Ga9ndhlcoktm+jfkcrQ9//KZPHLm78IBJaNIisCYz/+A0yqSLx3XuINwYxdZuavg7scpnM
      6DiFtCdKNRxGlGX0pTlGfvhTtNrGKzdBtHc7247uYOzl01wZhLilMoKmIig+up99nNUPTl9T
      Y1fv30vjgW5cB5offgBNX2J9xcDe6B4ZRQtZEwm0tNP3zD2M/uhNXEeg9bGjsDxOZu1620if
      F5/Jhpi+7Xvw17QS0R4jHtDoaqllqWBz5I5mBD8ou++gribG/HKWDmuGQKSK+pifgZEFtnU1
      o/iraUwsUXKbeKgnQv+5flo7OlDtIosraUq6xbbuHlzLxNVzTGdyHD5yHyszIwQjng0aUy9y
      YWCUOw/dSSa9RmphnmgsQU9HPefOX2L7rj302gMoYW+Nz75dvZwfnOLggX2kV7y3nR0dHSAo
      3HXkAAtrRXyyg4lCT287lmWTW10gJ1Sh6OuspP2US2Xi0dANn4nruiiKwvj4OIlEAsdxWFhY
      oL29naGhIRobG6mtreXSpUvs2LHjls/X0B1CtRH8yWrc5UWKi0tMv3WaaGOcmoMH0MJ+Yt3t
      164ncp3NpQBmJk1+VmLm7WECERnHmcOSonQ9uIfhV85uBnHsjQK+se9Sa2inaVctQz96F9uF
      csmhqiGG0rKd7OVxer75JLMvv0IpW0KQJCRNRdIUVs5463aaHnkYe2GYhbElbAP8rftRgsPU
      tEYZuxSm95E++v/mdRzTpfXJRykPn2V1Zs3bu60pWOXPXwhf2Fmg22V+fp6Gm6zL+bxwbJtM
      6gYjx0/IxGsneOGf/vPrrouan+Z7D2DmiuTGhnCDtdR017N48gym66PpyC7SgwPYYpBSKkWk
      MYEjqmSGJwi1tVCanyXSu51Iws/ssTPEdu4kFA8yf/J99LxBqLUZPbVKuDHG2ugc8e521oYn
      CDS30nRgG67jkh0dJTWyQPN9h3CyK8yeukzb4w+hyC5YZebOT9J8ZBfFmSlm3hsEIHnoIJGk
      V+HMv3scW43ReEcPq2fPU9RV2u7dhWs5FGencQLVhOKeZcLZN04S2dbA0pmRz+zZ3ozbFoBR
      SFMgQGFticamJlZWVqmpuXZDzMrKynWbZMDbELO6rlOTiDA5PkpD+zbUj+iE2VaJTN4mXnXj
      mvaXiW2arPbfeGFYanWVtUyG7rY25lMpfJpGdSyGbdsMT05SE48TCYUYnpigo7mZgN/PzLkR
      Xvzvf+8XfBdbm9vuAkmSzYWzg6yPnMB64tvMjkxglrIUbIX6Kj/zK2lmFxa5a98OdNFPanqU
      SLIFzSkwNT/BWjrM4b31vPHOe3w5FKFYKBIPqcyvldjWXM3EzCKiolLOZdm2Yzeisc6pk2O0
      djbT1VxD/+AI2/q2szI/zXpeJ+wT8cfq8LklFtNl+rZ13HLT/S8C13U9MzCCwMDYGKZpkisU
      +NL+/eiGQX1NDecGB/FpGtu7uvigv5977rjjl5vpLcptD4JFLY5bXqaus5fhd16mqr6OgbEU
      xfkhzp47T1GJINlF/u5Hr1Gc7+eD4XnefPNN3j83QGtdNTbgD1WxbVsXg2dPE0sk+ODCEAkp
      x4mTp1k2/AxfukBjtY/+Uc9SgaD4mR4f4sSJk3Rua+fk8WNcGBjFTc/hRusY7j/Hyz99ldHz
      J5ldL33Wz+i2EQSBUCDAxOwsumFQHYsRCYUwTJOA38/K+vrG+wqLSCh0nfWLCr84blsA3oaY
      BSIt+5hcWKG7OY5tlMiXLTRFpa6uFsu02d5Zz3LBpam5hQN7duFaJuuZ7DV2FLVQFfFwENex
      SGcL+Pwa8VgVVYlqgn7P0BZAPBZDkiQ0RWJtbR1Z0YjF4/j9AaqqIsiSTE2ynt377iAW0m6S
      818cjuMwOTdHS0MDPlVldnGRdDZLoVRiZmEBTVURRRG/z8fU/DzOZ2T/psLt84kGwcV8DjUY
      ppTPEQ6HyaVXKdsSkYCCpAXRSwUCfh+FkkExu4Y/mkDFZCVToCoSJRjwUSiWAJdgMEipkGU9
      p5OMhzEFBdso49cUdEtAU6Gsuzi2QTDgY2ZmnoamJnS9jIyL5Augl0pIWKzldBrqaj6vZ3Ud
      txoD5AoFCqUSyUSCTC6Hpqq4rouqqqRWV4lFImiqysLyMslEAlmWK2OAXwLXtL0nv/v9zz3B
      W62nnP6Yccxz+lPH8ZngOJTW1m7pZZXr90cAfHi3QppJ7//Y3GeUsQofl2tagAoVthqV8wEq
      bGkqAvgVIHbwEAf+8dfZ8ZtfpWHPzQ2AAXQ+cT/+5jYi1dcedxXs6CAY/fwmCDqeuP86yxZ1
      d+wCbnze13VIfpK7b3xvvb/5a2z/1pPs/IfPEm+O3SISmbo7+j5ehjdDVPjCIwc0pl96jeX5
      DNv/wbMsD85Qd+9daJrL5CvHiO/bT1VjjIV3TqBFIwiyhOuItD32AJIkYqTmSGdsbHx0PHEX
      oixTmBhhfcmg6VAfuC7L758hs5Cm8Z4j+KoCWOvLnlGrR+5B1QSmX32X6oMH8UUDWGtLLA6v
      EfQXWV91qG2JoEUjiFqAlocOoWoCs6cu0/PVRzDXVxAkCdEXpOORI7h6gYlXT9P6+H2Igkh5
      boK5M6Oe5W1RoP5Lh/AFNWTJYuQnxwEQ7BKDf/Uj5GQ7HXta0MUqGvdvIz8xRmp8nfYH92Ol
      11ibK9Pz1aPkJ2cI9+0mnAgy/85xQh3daFUh/EGJoR++ietCtLuH2u2tlRbgV41SukjNkUMk
      kn4IVNP6wJ0kGnwMv/AWYtDbr+yrbyAY8RNrq2X8xz8j0t1DoLkJXyhIVUOY0R++Snz3bprv
      O8DUS68j+IIUUp5Rgvi2JiZ+/DpiTTONdx/Bnh9h/I1LdDx6iHhXIxM/fg0p2UK0qYFwbQjB
      F6KqxZt5ExWJlfMDUNVMSM6y3D/C6tgC8e52mo/ew9I775KaKdGyv5NYS4KxF1+lavvGOijJ
      R7yznkRfO7NvHkMMxZE3lgko0QQdj93PjmfvZX1snrZ79zDy/CuEtu8k1tWFtTjF/JkhMiOj
      LPcPUSZGNKQz/OKbtD32APG+LpZOvEfBDREOenakrHya1MXhigB+pRAlgnE/pu6SHh5l5o23
      SQ0t4to2OM51G0n0THbj+Kar8xzltGc8y3VcCqsltj39IMbCFFeODnAtC8d1sS0LSZU3jlYy
      ESTJc3PAtmzvbbsoImva5krWcGcXNV0N5BdXEYRrj84SJRHb8vIoyNI1+fgwVrGAZdjXvBsx
      M6uM/+RNzv3pX1Fz2Htj7gKu7ZAfusDieJr2Jx9AlT0DY4Ik41ombNg3dfQyRtHAsR02joCg
      6b67EG392g0xFb6YyMEwLfccIN7dxvxb77I2PEnijgPEmmpYHxhATDRRv6+b4swMSCqF5TR2
      Ng2KQnZ6ES0apriawVpbR1BEsrPLaNEwvkQcu5DH39hEaXoCo2xTe2Af4cZaxOI6U2+9T82h
      Q9T2NjL96nFiO3cRbqxFKKwxf3aI+iN3EqqJUpqfRy9ZFFeyxDoakFWF3OQEhGvRFBPLdJk7
      cY62R+4mktCYfOscathPdnoJLRomOz3vLeMOyeh5ndz0AmokRGF+EdeBcHsn9ft6qdnZydwb
      x8ikSrTefwB9bppCUaTlyE4wSqxcHiPa24c+PYRY00bd3m4W3j2BK8jkZhaQQyGMpUVMyyXS
      1oo/Hq5Mg25lOp55AspZ1KoqZl5+hUJap/Px+xl76c0b+r+V268qFQFU2NJUxgB/HxFkIk0f
      b0lItL3pkyZCpKVu87OkKSBrRBritwz1ydP7eCjROIHYrc3af5hrpkGDNbfOfIXPH6uso+eu
      3fQuKgqiIiMKLkahjCDLaOEAejqLqKoIkoyAjVnUkQMBBCVI05EdDPzNm6jRCFYhjytIiJKI
      rCkYBR01qKFn8ptWHJRwCNfQPesNeANJLfLzaTiYxTKS348kKjTdvZeB515Grqpj59N7uPDC
      OZrvaGf07X7MbA7HcVGjEexiYdPUilUqI2mqd6iiLGDkS4iKihJQ0DMFJE1FVGTMfBE1EsYu
      l7ANC8nnR1ZF9GwBye9HVrzPgiSjhf2U095JPY5lYQv2xu40bTM84F1TZIx8Ea0qgpnLXSuA
      fzb29uf761b4SG50VnDjw48Q1vI4gRqW33mD8I7dOBb4xCxax24KQwNU9W5j6Pk36Hr0AOuz
      BVRNoOG+u1FFk1B9nKXpIs1tPkpqDZq+TNEOkz3zFvE7DpMaXiSe9CGHQgx9/2VsS6D14Xtw
      TBe/lkdp2UlxZJCq3i4G/vpVep++m7WxFD6/V3x88RiB2hpUn0JsRy+1WZFIQmZ10cCnOYQb
      qul/7sc4DrQ+eARbDOCszRJo72DsuRdo/+pRcrPr6AsjNHz5K6TPnSaXg1BIIthUy/ALx2m5
      ewdyvIHUa6/Q9NTDrI/MsXr6NE2PPkIptYIilBl7/Qyhru2EzDGanvl15t85QU1PE2f+w/OA
      xuH/47eYevFVhFANglUiUl9V6QL9KiA4JtNvnmTsp8eJ97Z7NZ8g4K+OYWVWmXj9PdZn14jv
      6WHxjbeZfvMUhm6R3NuH5PNhFg1EyWXunZPMn5tg+f3TzL53GV/C22UX76pn/CfvMPDXP8G2
      XMBFzxUQXPDVxDGzq0z+7D3SM6tEe3tZOfku02++R7nk1az52XnSE5OUczprlwaYefMYrhbx
      0td8mCX9GsO/TrnA5GvHWRpeJNLZTnHoIpOvvM7CxRny42OMvXaa2t29iJqGUdQRHQNT9063
      D8QVli+O4xo6rr+G2u5aZJ9ynTGv3OQEM++cplS8OjW8cuY8s+8NULunFyXgxyobt/cm2LEM
      soUyoiAQDoc840ai4J3/i0DZMPBpGu7GubtXTH2IokChUESVJUxXAMfG7/fOAxYEb9l/uVzG
      5/Nthrv6X0QvFzEtG1Xz4dg2Pp+G6zgIgpemJHjnAYOL4NgYDuDYaD+XF0EQEQSwTYN8qYym
      +fBpKnq5hCApmIZBIHAlX94ZxOKHwhYLORwEfD6/dwA4V9IXkBTlmnnvK2k6toWDiCKLuK6A
      +HGsb/0crihTf3AXdqCO3MQw9Qd3sNC/iJAMw4d+99zoFK33HEGazKP6FNbGZnDW13AjIWxL
      4Wans6anVmi5bz9SuIqJl97AVmPUb29k/vw8gui7xm9xaoLOo4exI4v4AhvGzhwbX20SLTR5
      jd+1sRnE3DquE77O5tAV9IVZar58L/VODDc7t1lmVkdm8LlZXNchvGsfipXxCrmsoWgiuq5S
      1xkivVSgsLiKLH30Bnp3w6rF+uQc+soqbjR4e/sBbFMnW9QRXBdN9U5SBwHdMAgGApRKJTRF
      ZuP8dyzTBEGgKhqlXCxg2N6h2gKeYSrwCgqijGMbnsU1HGzHQRIlbFcgHApi6CVMy960pBbw
      +ymVisiKhmmayJKAIEpYtoNPlSibLiKOZ+lNEMF1sB0IhUOIgoBl6pTKBqIoocgSsqKQzaQJ
      hqOUCnlcQcCnqhSLRVRNxXYEQqEgxVwGJBmfqpDLFwkE/JRKZWRZRBRELMfxXrYIApoqUyyV
      vX0AooRjGiAIhMLhWx6OfaMuUNPRB8kPXcAsmRRWMviTtWCUsG3vRY+RzaOEgliFAmosjiQ6
      WIaJkS0Saq5HX1nGQQZTx5U1REfHdhVk2UFQNIxsnkB9EjuX2TwD7FZpKNEqFAVM3cLI5jf9
      W/kcguBi5MuokRBGNk+oqR5jbRWj6BVQNRLaOCQ7jxQI4paLCFqAQJWf3PwKaiiIkffGQMGG
      OqxsGr1gEGmpp7yWwTV1BF8QX0glO5tC1HyEk1VkZxa9A8s1H6JrIvr8GNn8Zj5AQA35N6zQ
      CYRbGigtLd3+WiBREAEb23ERJRHHAVWWMUxr86BoQRBxXQdJVjZtyaiqQqmgeyfC+ELotrW5
      d1fzaZTyhmfKA09UgiCgqtpGC+EiiSK6YSKJIpZpIEoyCCKi6PmVZAXLLOIie/G6XD1xXpQw
      SyUMw0RRZARBRJZl7/RJxWt1ZFlBlkSvthdFDMNAkiRcF1RN2zCbKCBJEo4LiixiWraX/saz
      0TQN07RwHRvDMJEkEUkSsRFwXAdJvN485MdhfXAIPbWKZXp1VWnpeksU5kah0X9uf0J+Zv6K
      D++fVdqwRK1jmkDJu15cWLom3K3SMNIbRrhu4f+KMPKzCze8DmAXNgb7xQK54kbc+asTAIX5
      xc3P2akP7ZUopzE2jpNw9DKZ6av+HL3s3Z+R/7n03E0TjOCSm/biuy0BiLJCMCAhCAKiKGLb
      NpIkYds2oiR53RJRxNm4/mFrZ4KkEA17yQmCiCKHNrsnwkbNCF5Xw7ZtT0wbCtF8fmzbxidJ
      m6/IXVxEQcR1Za4IRpZCSJKELDuIgoAggu24XhdFkhFwN0QhoyCg+XybtXEgGABBIByJbOQL
      HNfr5ggb3RZ/MLgpEJ8Y8MTg2JvpIwib+3s/3P2zHRe/png11CfYsV+Yq2yU+by4rUHwlZpT
      kqSNWlPe/C8KXu0ofui6KIofahWufhcEEEXR8y+KH3K7Gq8oipuF5Yq767IZnyR6PVpRlDf9
      ybKMt0TlSqG9UjA30hVlJPGq3w8XRlGUNsJeyZeELEleC7LhzxOXjCSKm/coSfLmfYgfukdJ
      kjaek4i8EZ8k3awX/tmg1jTRcue2zy+BQIyuB/Z8NnEpUboe2b/5tXpXH6J0beXQ9eQDn01a
      t+BXYjm06zqUikUs20GVJa+JEwRMvUwoEqWYzyOrGgG/D8d1KBZLOK7LlecpyiqOZWLZDooE
      yD4CPvUWKX6xqL9zDwunB2i9bw8zp0dINIWREo1EkhGWTpxCTrYQqU+Qm19DCTpU79tDfmSQ
      cO8uYk0x5t85SXhbL4GaMMsXxqjb1015aYHpE/2AQucz9yEiYeX///beI0aSK03Q/MzczVxr
      FR5ayxSROkkmM8nMZLFYgl1V093bGiOwg8HOZYA572Uxu8Ce5rTALjCYw2IW6AG6q7urikWy
      SFZSJJlaq9A6PMLDw7UyMzexB49UJJO6ajor/QMC4WH2zOyZx/vN3vtlEZvHR21pjuxGna6j
      u7DqJRbO3KD/B8cxTBtOWxF3RxcdB0epLMyycWsJHD6SI1E2bq6QPDSKgRNfzI9gKcy/1SxW
      5x8cIjHRSz21wtqlaRBthEaHGXRHqcxOYUp2BNFO7yvHsEsiSjqFqy1J76snsJk1Fs7coOeV
      F7CjsfD2BbpfPYbYqLLw7iWcHX10H+hGkJysvH0GMdJB+75BStNTNOxefPEYxek7eIfHcfsd
      rLzzAe6BMaL9iadDDSogIEl27JKEbpq43W5Mw0SWJUy9WQVe1zRUVcU0wW4TkSQJ0wK3242h
      69h3FrsO+ekZ+PexhWJEhnuIDncSGRtGlD0EIwIz/3SGrtMvEhwdInflEuVMheCuSZKDATTB
      T//xCZSiQv+rzxHdNcTKbz7E2dFJZWGezdv366LZ8cXdzP7jGYJDXcz90zuEdu1GMBukr08R
      2rWb5PEjVG9fY/X8bRBg+KevoOYLdJ58sbk2klyEeuKASGioi9BgL+vvf0ihKBPvbwaw6JUi
      W7fnaD/6sIaSXiky94/vENk3SbC/B8/AKEJhmdS9LexWHVG0WHn3Q6RoO8mXj+N1mthjPSRH
      2wn3x1l4txkbLkfiaBuLzP76PH2vvcDIT0+j5Ap0n34R/+AAlembKLY4TiPD7JvnkQMRhn90
      lHqu9HQIgGUaVKq1ZlYFyU6lUsEuSTS0BrplIdBce8iyA8HSqSkapmVht4lUqlXsdhvVmoJl
      WaiNBo3GV8+d/8+BzM15ek9OsnJpkc5dCQob5Wbpoh0tnFGrUMs3F4+CWsR0RbBLIrWNFBuX
      rrF45hpqNktDNcheuUxhq8bAD17m/oysuTi0UIvNBaNlWcQP7cPtk6hlS4j25trLMgwsC4x6
      lfS1O0z/w7s0vZl3VMySA5u9qQAxDRNTNx7o/ztPPIdoqCiVh3mb1GIZsB64RCubKeIvvEj7
      aITUrTUalQqmYWEZJoJNIHtnmqW33yO7kqOSenzRbuo6lq6DIKJXyqSv3mH6H3+L1ahT3iw1
      U9kbBpgGpmGhbG+xefXW0zEFEmx2wuGHbhqOHdW0y7kT4ud8qKu2SQ7Coc+G/jmdzs9se1pQ
      N1YornSyfW8BX1hC3U5RLvcx/NNTrH/wCfZYO6YJVr3C6tlrlKsyPp9BNqXQd/o5MleuUd7R
      xjiTHbTv7adRyGIaAAal5U3ApLTc1BiVltfRDDv+3h6sepn0xxfpe+04PqVBeXOV/O1tel85
      RnVthdLKBlRzaFKI/lMHKK9sYI/30H3qOIJgMH+pWdhbKVYIjw6g3i/0baiUVjMPrmfoFq5k
      gloqjSXYSe4ffaD5Ka+sk752j/4fHsfbUFl6+xzltce1TuGJCVz9Isu/+QB7ope+7x2jsrRI
      NZXGtCy0pXvoYycZ+lEvq+98QOpmir7Tz//hJMf9Q+Hz7ABPGz2vnmDtnQ8wvma+r+Cu3SSH
      46h1g0Yu/SDJ7pfhG9+PszpLZrn8tfv6VLwBWjxdLL/9wTc6rnD7FoVv8Awu373K1x/6TR4T
      gHL5m57m2cQyDJR0+ssbfg20T9XYavG75TEB8Pm+vCSjVslTsdxUcpt0dneznckQj8cfa5PJ
      ZIjFPuuPbhp1MlmVeMyPpuk4HJ+jkbEstEYD+YG2xkLTHv37U81Nndn5ZYaHBp7YZ72hgWjH
      bhPZ3Nykra3tiW2/DvWNDd4eHX3ifsVmY8vlIlmtknc6sYD4TqmkTbcbp2EQUFU2PB58moa/
      0aD9P/3n76RvLb4aXz89ut3i1tV7FObPY7z256zPLaPVSlQMiY6gi/XtAqn0FkdlEc3uIb00
      gz/RjWxUWd1cJF8MEAsPkUplMLQSZVVgcs84aqXAnZlFupJR3nzvLD/7yY+Zm56is7ubN954
      i5/+i5+yPD9Hz9AYAY+DjZVF8goE7EVu3CsxPDTA2vICuuhE0MoYsp+AbLC2VaYz7sVyRUgv
      zXB7donXX32JqbkVRkYGWFlcQhedDHZFuTu9yNjEBOtLMzgDCTrbPlvj4Ouw4vPRXS6zGAgg
      GwYNUSSoqlRkGbtpknG5KMoyIVUl5fHgLRS+1fVafH2+QXr0EJa6TdvAGDMfvkWwPcnUUg4t
      Pce1m7douMLY9Co/f+O31NZvc31+i7NnP+L6rSn6OhI0HTUVFhdXmFlcx8iukdNgdX6astpA
      cvkZGBhAqxax2yyu3VtkcHCQqctnyZTKfHzuEoZW4+7CBlI1RUnw0NfdDcC16zeJeOH9T65z
      4exZbt29S6Ohkd1c49bVC4ihHhw2gTPv/oZSbpPzly6xlqmztTLP2QuXGB7uZ3X6GhduLnD2
      7Mff+suVDYMNj4eq3U5FkqhKEqJl4dB1tl0uSpJEUZbxaRpOw0AXnwqt9B8U3yg9urWTHn1l
      K89wZxhdqVCsabgkmVg8imFY7B3uIFODZFsbe3dNYBoaW5kc1iPW7kAwiGQXMUwIt3WR8Nm5
      O71AtVzi9u07IMrYBIt6rYLT4yfZ3sXYcD+CaMPQ6uRKdVyOhy+xUCSK0+kmmUwyuW8vA/1D
      aPk11nM1ZIeT3NYGlZpCMBylu3eAvq4kwWAQmygiSzY2Nzax7E6SyST79n5x3a6vQlRRcDca
      hBWFkKri1zS2XS5slkW8XsfbaNBWq7Hu9VKz25FaadJ/73wjNahSrWJ3e1BrVTweD9VSAdW0
      4XXaEWUXDbWO0ylTrzdQqkUc3iASOvlKHZ/Xh8tpp17Xmj4+mNgcbkRTYyOdIdGWpJjL4HR5
      KNcU/F4PmlLF6Q1QzGYIxRLIdhu1cpGaDuGAB61h4XRI1Ot1XC4X5UIOQ3TgsltkS3WiIS/Y
      ZIrZDHanh4DXyeZWlkQ8SkM3MQ0dh0NiaytLoi1BKbeNzenF5/ni2NL6xga/+oK6ZA1BoG63
      42s0qO04yTmMprN4xW7HrevYLYuKJOE0DCTTpP0//Wfe+T//y1f6P7T4oxAHEQAAIABJREFU
      9rTsAN8CdWuLM88//52eM/A//wfe/t//78e2iW4fgz88jk0wWHrrfeqlr6opkkgeHmTj4lfT
      pz+xT70dFJfWSewbJ33t7pe0thHojVLcqO34BzVdLqK7R8nfm96JOHvSNTZJHh5l4+Ln11wA
      8Hd3UFpdh0dO4xsZwVido1ZrRgclD+9h4+LNL+ylr7uD6ur6t68U36hssZhWWL53nUCyk8W5
      OSKRyGNt5ubmHrPk3sfQa8zOrRMJ+SkUi7ieYK29e/fu52qVnsTq3BRlw4b/C57g+Xwel8sF
      usrduWVika+fEMBQFNK//CWS1/u5P1WPh3W3m7zbTdXjoejxkPB6sXk8LLndNDwenF4vCy4X
      gsdD2OfDPj7J3AeP1z9IHn+R8vVzrN1YJZAMYvP7aRTKeDrasfQG4ZF+ImN9qJltnIkEof4e
      vFEP1a0q3Sd2sT21TvLIJDZLwxBchPqTRMf6MQ1ITI5QT29h94dpPzSBmsvibkvi7UgQ6o6j
      W3Ym/80fU5iZxWiYSF4fnmSC6GA75dQWvv5+YiOdSC4n9VwRb+8Ie//me2zPbdK1vx8pFMMo
      5zFNEa1cJbZ/D764j0r6YdyCu6OTyX/1M3J35+h4YR92txdBr6PWGiQOTuJwCtTzFUSnh33/
      7i/Qs2mUmkny6F5spoazZwC/T8bb1UYllaHrxGEyt+eI79+NyydTy1aIH9iDL+5vXleU2fvv
      /xKxUvwOKsW7AqxduYxVWmJmroNavox27TKFusFwZ4g7KwUMXcPvEMAbZXHqNu5QGy6rRia/
      TVnzMTzQwebGBjevXcZE4vkTJyitTXNnJY8/ECSXThHyOphbXGFwYh/L07dwBRN4bRqbuQoH
      jxxB1MpcvHITf7SN6etXeOHUD1FLW3xw8R4To30sLa/S0TNAenUOX6QD9DqVXJr1zS22amBU
      c9RNByGXRbZUxRfpwKpmKCkw2JNgdmGFgbE9tIW/XFV8n6AgYAMyQLcgMGWamILApmXRsCz8
      gsCCaTIhitwxTZJPOE/6wmW6n9+Dq1wmfe0ufT/7PvNL68QPTJK5cpW+F3dz++cfMfSTkyim
      n9KVD5EH9xErN98U/a9/j+rsFH0/eoXl83N0DDtYX4Shl0dZuJql++g47qFxUp9cY/RfvELd
      8FK6ehbnwAEcy7+ltJKikikx+qfHUFQb2uJtrEgPseESiX39zH+yzMDRPnKzK9TWNymtrFIv
      1fHEI8y+c53BH76MUhdIXZki2uFi/VYOURQwzfsBPmmKKylquQrutijzv3yfwR+/RH6zBtkV
      YqdfRvlv/51avU5pJUVuMUWgf4Di/ArDr59kbaqA5DAoVX30HRsBIHniOLK2jXvvi1i2K8S7
      3KzezCEKYJoNSispstMr30GleJsMRgVP2yirV94l0t3LdkljNC5x4cY0XSOT2NQ8v3jvIsbW
      NGtFk83NFGvpHAf378UugGWapFIpkDy0uRtkKlApZBjYfZhCpumfIggiDknnyodncLePM9yX
      5MrVGwhahc1chblb1+iffI6t9WXaOntIxoI06iUCbX3M3rmJ3SGTWl+jVq2iahqpVIr51U2O
      HNqPrVHi1tQipe0NVjeLTB4+SGr2DpmKwcHJCS5duoxDsrG+vvEl38ZnWTFNugWBJcsiLAjY
      BIEaEBMEsoBGM4emCA9qon0aV8jDyrtn2bixwMjPTj3y5Tc1CuXVdepbW5hIWFozQio3u447
      EQDAEwshSDLpyzcxTYH87CL1bJH8/BK17Tyi7MMVcmF3Smxcuo1Zr5KbW6NerCCYBrqqYd5P
      HtpQ2J5eopatYDPrSIkOkpP9pK9NAWA2GuiahmWYFBeXqWezGGZzmGkbi2zM5oiMD+P0PoyO
      s/QGhtbM3VleWaWWLaBrJt62MKZgJ3v9Ng3daoa2ahq60sCVSBDu77j/RVBcWqFwdx7nToks
      X0cU0xAo3LlNZXmR9ekskbFhnD4ZsDDUBrqifhfeoAJeUSPcNYpq8zKYDCLoFa7PbzHYFcPl
      kHEHYvz09EE2VTceQSMSjuAUDS5duYkoSyA0wwldLheS7Gj68ZsGt65dBsmFw+Hg3tQUlmAj
      0t5LauYqt6YW6e5qB9lFyOuivbeXOxc/xu7yPzCaCTYJr9vB0EAfdaVBJBLG6/WzncngcDjw
      O22cv3QVuytIWzSAOxAh4HUiiuD0BhDVEucvXaW3pwdFN4h+zWmSblnYhWbIZMmyqAKbpklc
      EFizLAzLol0QuGWazXZPiBYzkRn/q58w8tOTlOaXqGxWGP7ZaaIDbVgmBMfGGPrp96kuzoFd
      ou/7L9P3fB+bt9bQaypr524SGujC1x7BVFWMhoGlN9BVHcvU0etF0ndSBHvacQY86HWl6fWp
      Ks2ntOwh0t+GXlPQleY+U1OxBBmbaGHpDSS/f6e3GlIwiT/uQ683Ayf1moJer2MPREiM9+KK
      BBEdHrpf3PPgHm2eAMGuCHpN3TmmzupHVwkNdBPsjmMazYdDrazRdXgMbzKO5PMiYGGqVTpe
      PsnYn71E6qOb6DWFlfcvExzqIdjbjugOkJhoXte2EyRSSZfoOTH5z3cRvHrvEvbOQyS/+ozj
      946azXL+9de/03M6fvpXvPW//V9fub3oj9F/sIO5314HoO/H32Ptzd/Q0L/kwO8Az+AuencH
      2ZzZIjHWzd2/e/drHC3givipZ4u/s/59pV58WwEw9Qa6JWLoGk6XE03VcDged0dWVfUz26AZ
      6aVqOs7Pc4n4kms2LBGH9NkQQ8sy0bTG517vSVTKJVweP7av8D5saCqiXcYmCuj1Oqu/+tUX
      ti9Vq7gcDqr1OqZpEvL7H6RMUXfSyBQrFbwuFzabjWyhwa/+4//xlfuOKCI57DR2nrZ2twu9
      9vurleyIhJFdEtWNrQdP6aeJbz0FMrU856/c492f/3+sFVQuXrqMWq9SKFXQGyrlcpnzFy5h
      Gg1UTadczFNXG+iaQiazyvkLTXVVvVqmXKmhqSoWFopS58x771JTVHLZbbRGg43NNGq9yubs
      Da7Ob1Iq5FG0ZnCLUq+RzeZo1Cucu3SderVMsVzFMg2y21lMy6JSKlBTmgPF0DW2s3kaWpU3
      33wHwwJVVSiXyzTUOvliGcvU2d7eRlMV0pkc1XKJGxc+YLO0kz5QFJEjkSf+lO120obB9XQa
      3evlWjqNEAggRyLMl8t8srLCfLlMxjS5lk4jhcPwda3Bpvlg8CPasIyHwT6S53cfA6Fmc5TX
      0g8Gvyg7PhPbex9HKMATZnlfG1c8iqctiuR++PCUHtH6SV9iw7nPt9YC2VxRTOUO0e5ulq59
      hDM6yAcffIjPISLYbeSFGE7L5Mw7v2F8YoRPrs9hEwUCDki2hVFNAaNR4cOzF5HRMCUvx06+
      wKVLl6lUKpQ35zl7O8Xh/eNM353C1DViLpOSVee9uRqiKPJHP3iF937zJn19fdyrmWDqzM7O
      cHtmiaHOKJ5glEwmxZ3pFQRR5Gevv8a5jz4kFAkxb4jIDjeiAO+/9zYdI3tZvHMNLAtfKIyC
      k/H+dqbnFtA0E7Oy/URtzaeJBAIYptmsFh8IEAsGkSWJUrVKwzDwezzky2We27WLS/fu8W2f
      n45ED52jLubP3AFs+Dpi5Ga+qDDtt6P3+6dYe/c99EemW8EDzyFvXmFz8XHPYlu4nfE/2sfN
      //fXGN/2TSF42fU3PyB9eZrizCzFWlOlmnzpBMWLH2IE+4hGNJbOz37pqb61AAiCCGoOZ9dB
      brz/C/7oXx3namaFjpjMdKrI+OG9zJ//Jbplo1TI4/LH6I55SKfW6exsZ3V7A1NXcHjChMUc
      K4UGdUWhruoEQmEibb1M1E2mp2fBMhFlFx1tHpbn0niC7XREdsoCefz09/WwcekWFg22tjVs
      okhV0Zno7WFj8R6yN0RvsrmQ1Qzo6+7i8tQykUgYuwhOf4Sx/g6mrl9lfGwYXzhBbmOR2fkV
      DF3F7W/D7VQxNA1VE9DVL85Gls7l2NjeZu/QEFNLSwx2daE2Gk0BaDRY2tigv72dqqLQ0PXP
      FJm7T/+PT7H89jl2/flJ7r5xjbY+D86eYUTLoLIwgy05iNcrsjW1DgL0/eg0G+9fIDLSTXD3
      fiS9hCse5d5/f4v+H76EaQpQ3GD6rUuEDh6keyRJ6tI1vCPjSA47hVvXCR8+hpHfxt/XSWl5
      HVfIzb1/OMvw68cxTYvNTy7RfmQvZn6NckUiNpRE0OtsZ0F0hxj83ghz795k8LXDzL1xluje
      CVxBN7EXniOWDLNx5Srh/QcRDJ3y/D2cPRNIQh1PRzuV9Q3c8SC3/+vP0XWT5LHn8UW9oJWY
      +fV58HqRbQLuWJjS7ENhWnnrDGM/O4FpCcz83du0Hz+GN+xC3UpRzJvEhztw+h3MnVti9KVB
      Ni7c/PaGMACv2028o4dEMkEyFsEh6OQbLvaM9OL2eAkGg+yeGEMX3bjMCp5QjO5EkMVUjt7e
      ToLBKGhFDE+M/ePdTE8v0dXdTcTnoGYIFHJ5+gaHiEYjRP0OMlWD0YlJJDWPNxwn6POwMDtN
      RTHZOzmJ3+vD0jXibR3smhji3r15+kb3IjVKOH0hQgEfkYCHqcUN9u3bg8ftwuv14HA48Hr9
      RAJu8jWdtoiPrVyJ4ZERYrEEDrOGbvcQ8siohkW5WELMP7lQ9v1q8TVFIeTzEfH7yZdKRINB
      OuNxEuEw/R0dzK6uMtDRgdvppFKoMvP240mKpVgHwaQfh9+N5PZQz9ZwSlVm3/iY7lPHMC2B
      lTfeQjXdjP7p97Fyq6xfX6Xt4AAIMov/9BZitB27KeB0KqTubSMLVQprObz9/VRvXCZfcTBy
      ajfl9SzuiBfR4WTm79/CP9TL/N+9iW9oFFcyQvajj1i9ukb/y+OUM1XW3v+EoT/+EUpmG08y
      TrWgQnYe9+AudJsLK71IJVul0QC7mkeVAxTOf0zZDOF3lpl98xO6Tx0HYOGXb+Pu7GTpjXex
      tXdhLC2hNUzMhoHscxIZ6iF16Q6YDQqzC6Qu32PoJ69gii5CHQHK62nk7nH0+cuUMjXG//on
      VFZT+NoipC7dwxHyExvvJ7OwjZWeZv3m6ncTERZt7wXA19v83dE7SMcj+72JBADJhJNk4qFF
      N5rsevC5d+ihX/3B/Y+7Ibe3JR77+36G+UR434NtuycPkNi5jtftov0RH52DB5uZCUYmHqrd
      /JEEByPN9s6dPt0/Pt7RQ3znBg4ceMSqHX/cGm34PGznszyJrnCYrk9tSz5iJe/Y+bz/kXgK
      YeWz58venuXQv/0ed35+nrFXJrhy8TZt+w7jiKQQDA1TtzB0ExHIXjpHw5nA5WnOjS3LfOA2
      oBVzRA6eAvk287++L2QmutLAqJaobWVZP38Db9RN/FDswfHNwy1qm3lCQ10YWQltO4cQD2N3
      ytSyebYuX6fcnsTwtCEC20tZho50c+W/XP3U3Rjoio5ey+NKHsAR2UIwFLB25vL3bSGP2EQG
      f3ScmZ//hthI0+tXDoXxJlwYghtTqbJ97fqDtrraQKzVAYv65hbrH18h0J1k6CenWXnrPRJ7
      h5vt6k1169d+A2iVHAVVZCu1ij8YZGtrC6/X+1ibra0tPDsVCx/FNOqkMxW8Hifzs9N4Q1Ge
      sF56+HXpNXJ5Bbf7i7U6n+7D7wVBwPJ4kEKhz/2xB4OsFYt4k0nWikUUSSLa14fl8TC9vt5c
      LIfDTK+vE+ruxpNIkJ9dZvqNM49dxlKr1PMVCvOrKMUS1c0tamWd+Egny++dQy3V0IplTF2n
      nsuRubuMw2OjupWnsp5BzRdp1BXcnV0oK/NUcipdh8fI3FvCUFW0UgVDqVMtNoiPdLB9dw6l
      WEXJF9GrSvP4mkJxehoxlMTtNVn55A7VbIlwT4yVj64R378LZTNFNZ1FK5ap5DVCSSfpOyvN
      ezB0tEqV+nYRrVTGUGrUKhbx4SRL751DLVVRCkUa1TpqvoReq6MWSpimha6DP+EjO7VILVvA
      qFVxdXQTbPez+O75x7RPhlpHLRTRNZP8cprkgVEKM/OU0gUiQ53kp+cpr2/SKFdoqMbXV4Ma
      Sp6zV5cozl9g1/f/nNTsLD1tfiqGTEfIxdp2gc2tDEf3jqLZvWwuTuOPdyObzYCYQinI0ckk
      f/sPb3P69EvUagohj8RGrsZIT5zZ5Q1Emw2tVmV41yR2Pc27Z2boGexkqDvOnXtzDI6Ns7W6
      QLHawOuy4Q614bTqbBYUdo0OfWeahi/DNE0qlcoT91uWxc2bN4nH4zidTm7dusWxY8eo76hE
      L1++jN1uZ//+/Vy5coXjx48z94v3+MX/8r/+TvorR+L0vLALQzMozc2wPff1LdtfBSkYof/U
      QVbePtPM+frPmG8QEBPEUrdJDIwz8+GbhNrbmFkpoG/Pc+3mbUxPDLFR4ee/+i219VvcXNzm
      k3Mfc+PODANdSUzA5Q0yNDjAzO0bJNoS3Lw3T9Kt8sn5y1SEAMsLs/QlfdxbaCY9dXoDpFYW
      OH/hEqNjw1w69wkzC+vYaxnkWDcLU7d5590zrExdYy3/+9OBfxmCIBAIBBAEgXw+j8/nQxAE
      PB4Pa2trD+wBHo/nd542EUDLbjH7i9+y8NYHv7PBD9AoZJn++7f/2Q9++MYBMZsEeiZZzRQY
      6gzTUMrkKxpuh0w0FsY0BSbHusjUBOLxGLvHx7B0lY3NzGMBMQ6Pn4DHhWVobGwV8Prc+P0+
      /IFQ0zi2Mw/0+/2IoojbYWdtfR3Z5cYfCOBwOPH5moMnlkgwNDpByPvVDWC/ayzLIpfLkc1m
      2djYoK2tja2tLRYWFpCkpi+M0+lkZmbmQc7TFr9fvllATK2G5HKj1mu43W5q5SKaZcPjsCNI
      TnRNweGQUBQdpVbC4QlgR6dYVfB6PLgcMoraXIQ4nU7UepVyvUHI58YQ7Ji6hizZaBgCsh20
      hoVpNi3GW1vbROMxGpqGKIBNdtBQVQTLoFxvEA0Hfzff1OfwVaZA29vbiKJIo9FAEAT8/qav
      UjabJRAIIEkS29vbRCIRbDbb73QK1OKzPKYF+uj/+W//o/rxtZj5H92BR/iu0iyu7PzO3/5y
      402L745WneAWzzStiWeLZ5qWALR4pmkJwFNCYGKSyb889dg279g+kkMPg3SGXj+Fq7MXf9RN
      8ugkAhDfN/7VLyL5GHrtCH0/OvWFruHtRycfXO/3RXj/bpyf4/7+dYgdPUr/sV0A+CYOcPjf
      /0krOe7TQnwkSQMZuw3EYJy+l/YhBtuonFsj8dwR/FE34d4EqburSHKIwR+fgkoRwSEjSA76
      v/8iNtFk6e0P6Tj5MoJgQK3AyuUFel46gCTB7JtXkDxOBJub4NgY2sYSCgGCUcjM7Nhk2toZ
      +vFJlPQG3t5e+n90CrOwxcrVJfpOHgatwsI7F7As6D79ErLbjlHcZvHsHXpfeQFZhoU3P6Tz
      9ElsVpXUjWW6ju5C3dpg7foyfScPYSllli7MM3R6HyYS+Zu36HrtJaohmeVb63QenUA0FObe
      vUbfq88jCgKVpQXqqkx8tJPc7dtNO4dgo/e1l5AdIqvvfkL/94+y+cabAIgOB+vv/bb1Bnga
      EBxe3EEHxZxG23gHPaefY/lX77J5ewkcPmI9fmZ/+T71ioojFkcyq2zfmWXz9iLB/i5iR49Q
      unWVxY9n6Ht5En9nhMVf/xZnexeCqZO5NY3U0YU/6H5wzepGjvaju2k7NEFt86HDn7KZInNn
      ltxiGkupsvCr9/D09NP9vZexWSrugTHCbU03mEBXlPlfvosQ7aDz+DGCYQnLFaFzsodQT5yF
      t8/Re/Iw8//0DrmVLL0/OInQUPAM7yLUFUWyqsz8wxnihyfI3Jll/ZObmJpC5vYs4bFRIgcP
      U7t3meymglXOMvT6SyiFEj2nXwDAv+sA5vo9Zn99nv7XniN7d46Naw+1bMljz7XeAE8D4T27
      0LI5hFqD8OQeag2BR32nha9QfHuncizQLHdqWU07RWTPbiQ9R3lj+7H2ejGN5TqAy1ColrRP
      nat5vfslTZsOdybbN+6gXptHy+3kLdoxZN6vmJmfmmFjqYrdrCJ3bjd3W9bDezENMjdu07i9
      gGE50crVndK5D++h7ehBlKUZKpkClaVl9vzx99meXmXpcpFEPkfq4g0K8/eVyjsHPSHSYuPs
      uced4Vr888TfGWHlzEWKS2vYfAHSl+7S870XcPmcFOemUSw/7fuGMesVCktpjFIeDTfBhBul
      VCd98RqJ548Q6Q6z9N5FRIeT8tomksdFbbtEaKATUYTS/DKWYFEv1qimNhFjPYjZOQqpMkOv
      nyA3vQSAM5HEYdNoqMbOedysn7tOx/EjeMJucrOrWBbE9+3F2x7HzG2y+vFVIgf2E+qOkp9Z
      QpBlqhsZKpkyfaefw26prJ67TdeJI3iCLvKLm9iEBpVMGcnjoDC/Rfv+AUrbFYI9SQR0LMuO
      YGhYNg8uj8X2Yp6uIxPoxRzV7RJqZoPg5AHi4z0s/+YjsMvUUmlMqxm51nX8UMsO0OLz8Q8N
      0X1khKm/fQNdtxAlO+bXjLTve/VFFt/+6HfUQ4gePEA46UM37dSWp9m8/fWj31oC0OKZprUI
      fgqQYwkGXjtO//eeR3LsqALtMqG+ZnSyI5bAHfjqAfDxwwfo//5xel86+KkYfAHJ7QRRIjTw
      5KS/jyJ53F/e6DHsBPsfFijx9nUh2R8fhsH+T4cR2QkNdfCdILsJ9cTwdzfvryUATwGh0WHK
      M9OsX7yFru1kaNMbxA8fQnbY6X35IFpVxe7x4I40E1QJkoy3PY5oE7C7XUg+Hzap+e+Oj/Wy
      fv46G9emMM1mhgXZ60SOtrP7L1/FLoto5Rp2txvZ78cV9GL3enGFmkma7B4PnngYwS4x9tc/
      wxf1gSDiaYth+9RglrzuR36LSO4AHUcncCdi2GQbermGaVqITheeeDNyr/3oPpyxKJLrkSpB
      pRqCXXpwTwDYJGSfF0/ivi1EwN0Ww76TMt8ZjeDwuR7/bBpoFYXEgV04I+HWIvhpIDQ2RnQw
      SWTPONXFBTSlORcvbRSY+OvXyV48R1V1MPLaYaRYJ265QWjPbiSPn47JLkIHjhKMuimvpTAa
      Jh0nXkB2SejFHHLPKF1jcRzhEGrVJLm3l6076/S9vIvg7kP4/ND12qu4HBbJF45QXlyn89gk
      nr5hPA4F//Aw5fkF4kePIjttdD63h8yd+Qd9H/jxK5RXtzj4737C9kqV9sEIsaN7UbZL9B6f
      RGprR93YZvRPvwc2Dx6/RezwURr5PP2nj7B5bQrwMPRH+wmO7EYwdFx+J9VMEUfXEPv/7AUa
      ppv4QBj/+F5cbhvdJ49Sq9joO9yFHAyjSyH6DzU/lwoWg0e6kNr6sRlKSw36NLD+3nusGTrO
      9iE6D4/TsLwU7t6muJ7GNAy27qXw7XsOT8CFWi1TNwUERUNyOnBEXJSLOZZ+/RE77w4axTzr
      56+j12qQn6caHkWwoJ7JUF5Loe4Espj1CisfXQF/G2sfXSQh+bHbwDAsJIcDh9tOZT1NYWWL
      vj8ZJne7gVauIQgPQ3rTM5v0nZwkc2+Vrn3drL13BfdAhNSF6wQHuoAGjrZOKtO3Wfu46ecb
      2r1E6uINgoM9j30Pm5dvEWwPY1QfbstcvcnaxzOM/8WPkS24+8Y1NE8CubZKKetGANTUEuWO
      pm3ivsrYqBRYPXejNQV6GogfOkDfyaP0ndzL9q1Zlt/5kOJ60zhlGQYWUJmfRTNsaLUGpiDR
      NtGFrmgIgvhAD38fu89PYu8oHUf24I6FEUwd/9AAsizgakviCj45qZSnfwSvV8DQDQRRxMRO
      dKiD3OwyeqWCoWnI0Tb88eZ0qXTvHpFdQ6xcmCPaF6Je+6wmSd1YxTuym66XjtE20fmZ/fdx
      R0PoqkZ878MECtE9E3SeOIa6sUKloND94gHinS7qlhcRA0/fIIGOCAIG3v4h3O7mkLcHwnS/
      sK+lBXpacEbDmPUqWlV9bLvkcdOo1gCwud3IThv1XBk5GGxmjDBMLAv0R8qvOkIhJKcdLIvq
      VhZHOISl1lHLdeRgEFOpNSP/EJtJbV1OdEXB5nBiahrOSAi9WsUyDExLxOGRqRcquGNh1Fwe
      WyiOpBep7oSnSh4XjaqC5HHQqKpIbplGTUVyuzAtC1NREGQnTq+DWraI5HbRqNUfSfMoILll
      dM3EHQ2gbOcwdBNH9wjt7SbpuQy17QIg4IqFaRSL6JqOIxwGXUEt1XBGwlgNBbWsIjlELMGG
      3eVuCUCLpxfR48flMKjmql/e+Am01gAtnlrMaonqNx/7QEsN+geFHO+m57nhb3SsGIgx8NJe
      AGz+CInxbtw9o3RMfjX9+9BPTj95pyfK8KlJYnvHvzz3r8NLYrz7c3ft+rd/w/if/Yjd/+Z/
      ItzxRbHfTjqee3IBcwCkIAOn97TeAE8D7c/vZ+P8bfpO7WPp3AzRLi/2WDfeiIfMpcvYEz34
      20IUV7exO03ih/ZTuncLpbITryzY6Dr5PO6wj82PzhLadxhRMBD1KvMf3Gboh8cxsONQ0wBE
      908yeKide2/dIb5/AO/QXrbOnUOXI7Tt6aWyML9T/E6k9wcnsVkKnpAPR7yN7ud2o21vsnJh
      lv4fHMMmGCx8NIXdJWN3CTiTvXQd6kOQ3Wx+dBbDEye5q5fS7Aybd5ZBtGGXbXSePI4sC0gy
      zPziAyzArBS4+7e/wjUwQXtvHMPXRmK8h+rSAturFXqP7ULLb5PfhMEfHaUwtUJo/yHcfgeb
      5y7gG55Adks4PTam/v4sucWt1hvgaUDwhIiM9hLsaSM6PoRgc+PzNZj5x/foeOkF/AO9ZM6d
      o5ypEJ48RFuv9+Hg36EwM095u07HoVH8HREW3zyDPZak44WjZC+eY+Xjmw9Ul7l7s2xduYla
      06ksLTD91mWS+0YYev0kWrFCx4mjCICrdwRbZY3535zHMEwGXz+HNUfKAAAHlElEQVSNXikT
      P7SfztPHKF69xNKHN7HJTeu1v7ezqZfPrjH19lXa9w8z/PpJ1GKZzpeeazpuSi4CHVECPW2s
      vPsRlsOHTW4OUzkcY+AHLzH8yiTFVI7Og6PM/PxtfKPj+Po6UVOrbFydpjA1R+bOPVQ5jsdW
      YOaffkv36eME+zpYO3MWxe7GZdfJz2+2BOBpIHNzjt6X97JyaYHOXXHyqWIzK/dOCjyjXqVe
      ampcjMImujOC3f7QRdoejNF1dJTS8jqWKaDXajvu0M3C3KK4c65HvaqF+y7PNTBNEAT0coHU
      hWsPnshYFqJNbLpHC2CqCpuXbjD183doKI3meUXxM6WftEp155zQKBVInb/GzC8/fMxp2VTr
      GLrZbHf/uFyG+V+/z83/+isSR/Y8lgGwfO8OG9Ob9P34FHabuOMFbSHcn3NZFqaqoGsGlvnw
      Si1L8FOAUa3gCPrYuDqNwy2RnZrDHumg/eAoqbPnMHSLejqDJdrQ8ttszWzh9Ut0njjywIU5
      ONyHw+2gnk6jlOqU19NIbhfpizdInngeXyJAbX2D8mYeq6ER3beX+sY6erVMvagiSbA5vUnP
      sX1Y9RKVdB69mMM3tpvoYDtKJsvquTt0v3wY2WaSOneDxLGjBJMBsjOr2G0WSlmhupXHUivU
      yw0ku0V6NkP3sUnMaoHKVgEEG5JkopRVyutp7G4n1c0tLBO8vf207x8lOtrF8m8+orSt0Pvy
      QcrTUyiane4X9mCUCmRnF/EPj6EuT0Owk+S+Ydbe/xjTEimvp7G5XSipNIbV8gb9g+abuDA/
      a7SmQH/AtAb/l9MSgKcAT3sSu/TlYY/BoT4eREeKEsG+Ly/mJHubPjLBgc9XPX5VAj1PVpc+
      6jItun0EOiNPbPvEc4RieGOfSoEv2pC/JG3+5yMg73intgTgKSA0PoYnHnrg6izKDrztMRCa
      n32dCUSbgFYqY1kgB4O4olHaD46AIOBpT2CXbTuf2x4UlhOdLnb/y5/hDHhoPzKJMxrF4W3G
      FcihIK5gc8A5wuGH13a68LZ9dgAn9k/gSsSQXM0sFHaHHUQ7stfD2F/8lGBn02XZ0htoFQWb
      24Ov/fGCI45IGHfYBzY7steNd+e+AExNoVHXkL0eXPEYsseBo3uY3X9yAptdRPL5cEebhcEl
      jxtXtOla7W6LP3CrdicTOLxO5GCM3f/yx0hOe2sR/DQQGBkjGHfhHd2DTS3QdfpFLMtO21g7
      sUMHMesqDq+dxLHD1NN1hl/bjyX58UfsyMk+ZBm6ju3DFm7HH5JwR4OU1jOIDhcdR/eQvT1F
      27HnMcoF+l99nvJ2g679vfhHJxCMBv0n9yHILpRsieE/ehnL5ibaG6CwknnQx65TL2JWKvS+
      8jxKXSLaLlBRvQy+MIAcS1JZWqKWqyC39dA1FiF5/EX0egO7qKKUFNxdvbSNtJN86Tmqm1UO
      /OtXqeZ0ug72kplaxTcySTikMvTXf0Ujt03fK8+RXy+SGIiSXS0zcHIPUqIXl1Bi9F//DWZx
      G3ffEN6ATOeJQxhSmLYuF45IFKWo0rZ/kK2r8603wNOAYOmkLlxn+cxFIvsmCfe24Qp5UMt1
      UpduYXc7mmpRwDfcT/rseVLnrqGpBrGJIZyRMEqhQv7OHQxBgp22RrVMZSNDJVOkvrFO6uJN
      qiWF2O5hJLcHS6lhVEtk5rcQRBFHWzuBjghOv4xWfdzOoOWzpC7dJLtRfKyaj6U3qGxkKK6k
      H2u/cekOdqcdQWzaCAxVQXS6kUI+JJtI5uoNNi5cB9fj057K8hKpS7dQqhq1zQyVtXVcvUO4
      vA5saBimjeLUNKvn7xCbGEIOhVBLFWqz91AadgRRQNnKUNlIo1bVlgA8DViiRNeLh+g9eYjM
      5SuU0kW0Sh2z0cATi2AZBrHdTReI0vQ8yZeP033iELJTYntmCbNewzIaTe9I0yA8Psz9ehyi
      00Ow+/GpSObmNKIkYhgmpmXD4ZGQwgnctirVgoJWVTAaGpFdIw9cG+RInK5jBwjHPBTTGcIT
      u+l9+RCiTUDXIT7e+8gVBNzxEJYhEJsYACB5ZD9GrYJlCghfNQFcQ8PT24e6OochOtBVA12p
      P3D/ztxdQNBV0HXswRCCaRIcH0KyWbhiSdxBT0sN+jQgOmRssoyIiVpuhgY6Ax7quQKCXcIV
      9KHk8oiyA72uYPd6sQkmhm6g1zWckSCNUglDN3GGgxi16oPi2jaXC5vNwjSaLtN2lxO9riB5
      m/70aqXeDKe0WSiFCqIs4/A6qedKhIZ6yc8uAWB3OrC5XRiVStMVORTEUBQwDQwDHD4nSr4M
      og2bXcAS7Dh9TurZQtMCbbPjCvloVOuYDR3RBrqqY3c50Osqgl1CxECQ5Mf66QgFaZRLCLIT
      SRJQilXsTge60nQbd4Sa96urDZzhEKZaQ6uqyH4/plJvCUCLZ5vWFKjFM01LAFo807QEoMUz
      TUsAWjzTtASgxTNNSwBaPNO0BKDFM01LAFo807QEoMUzTUsAWjzTtASgxTNNSwBaPNO0BKDF
      M01LAFo807QEoMUzTUsAWjzTtASgxTNNSwBaPNO0BKDFM01LAFo80/z/4/FIAVx7QvQAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Introduction (2)' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Introduction (3)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5Qd2X3f+an4Xr2cu/u9zhHdjQbQSI2cB5jhJM5QtERSJC1TsmytZetY
      po9X8rG867Ws413Zx9JZe609tKS1RSsxzAzT5AEGGOQMDIDOOceXQ72q/eM1GsA0OJxhUOCr
      zzk43V03/e6t+63wu7+6EH7L3WliYVGmiH/dBlhY/HViCcCirLEEYFHWWAKwKGssAViUNZYA
      LMoaSwAWZY0lAIuyxhKARVljCcCirLEEYFHWWAKwKGssAViUNZYALMoaSwB/C9n3r36V7l/+
      zA9VVlRkWl94Ai3o/zFb9eFoQR+f+uZ/wVMb/Ym14a6upPnZIyAIjxwPtDWw/Ve/gCAK68pY
      AvhbiLMqjBYO/FBlZbuNvb/5v+Cp+8lNxMchyBL+plokm/ITayPU0cKuL/8SgvjotHaEAsT2
      bF0nDAD5J2aNhcXfEMbPXGb8zOXHpll3gJ8SBOnBqZRsKr7GWhyR4KN5RAFBklZ/FxEk8ZHH
      gofrEBUFb0M1ovLoFVuyqXgbqnGEA7D+gvqgvCzjrYvhrAx9JJsfLSyU/q0rIOCsCOFtqEFU
      Hr12C5K4Vp94//f7V3zh+7dl3QF+CnBWhfm5V/+Ib/zMP6L52SO0fvIJTMNAC/oZPXmeN3/9
      tylm8xz+P/8Fjcf3Iyoyz/zRvwfTZPits7zxT/4NzsowP/u9P+TrL/5DGo7vZ9Pf/RSyZuOr
      Rz9PZn4JQZbY+g8/R9fnP0kxX0BxaCz2D3P6f/t95m/3PWJP24sn2PlP/x6iIiMIAou9w1z5
      L3/ySB6738Nn3vwfvPzZX2Ph7uAjaYf+7T/DNAxO/ubvrh2r6O5g32/9Kp6aKvRsHkEUuPAf
      /ht3/+K7iLLEF859DUWzIUgSv3D5JQDe+Y3fpf+VN6k7tIv9//uv8SeHPotZNICSkHu+/EuW
      AH4aEBAQJYkjv/u/MvDtt/nzT3yJfCKFr7GG5//nf6L56cPc+9qrnPqX/5EL/+G/8emX/4DX
      f+3fMHv9LkZBL9UhlK6cO37tFzCLRV767K+xPDi21sauL/8StQd7eOXv/nMW3u9Hsql0//Jn
      ePor/45v/J1/THx0EoC6o7vZ+y9/hXd+43cZfPVdBAFqD/Ww71/9I0RZfsRq8eGr9MMposDD
      txd/cx1P/b+/zZX/+79z63+8hFHQqd67lSd+71+Rnl1g9OQFvnr4c9Qf3cPOX/8Sf/ncL2MU
      i+iZLPc7J67e+e5z+He+jLsmagngp4kLv/sVRt85v/b38uAYM1dvE2htAEDPZMnHJTBNCqkM
      +XhyXR2GXuStf/bvMA1j7ZinNkrHzz3DK1/4Mgvv9wNQzOW59Ht/TKi9me5/8BlO/kbpat39
      y5/h9ldfYfB7pwAwTRh56xyp6Xle+Ivf/6H6tfVXPsfYyfPc+MOvrR0bP3OF8//XV3BXVwKQ
      T6QopLNgmuTiScxi8fvWF9ncTv2xPfzZU1+y3gF+mlgaGF13TM/l1577PwpX/58/eWTyA8T2
      dJOYmGHu5r11+fu+9SbVe7YiKjI2n5tAawPDb763Ll96YWldvR8FQRSp3rOVge+eWpf2/v98
      hdt/8vLHrrP24E5mrt0hMT5tCcDiUYq5wrpjzkiI1PTcYydwYmwau8+DZFOxedxIikJqZv7H
      Zo/iciA7NFLTcz+2Op0VQRITM4DlBbL4COjZHLJDe2ya7LBTLOiYhoGx+lO2235sbRv5Ahgm
      svbjq1PP5FBW+2MJwOIHMv9+P/6mWlSPa11aZXcny4Nj6Jkc6blFcvEkkU0b1uUTePTF9kHC
      hx/TszmWh8ep2NKxLpuzKowrVvGx+gKl/kQ2tSFIkiWAcsM0DEzTxO51f+Qykxeuk5qZL4Vf
      PDQ5nZVhOj77LO//6bfANDF0ncHvnWTT3/sZFJdjLZ+oyGz+pZ9FVGREqeR3KaQzGAUdT3XV
      I201HN9P/dHdjxy782ffpvNzz6OFHoRvCJLEwf/jn9L5mWfWjhlFHcXpQJQ//J1n8NV3EWWZ
      jZ9/3vIClRuFVIbF3iF2/fO/T3BDI8mpOXq/+fqHljHyBd768u/w1H/9t3jrY4yfvowW9LHh
      008x+s55+l56Yy3vpd//7zzzR/+eF/7s9+j/1luAQMPxfUxeuE4xl0ddFUYxl2fo9dPs+Y1/
      gLu6gmK+QN2hXeiZDJPnrz/S/p0//zbRnZv45J/+J+78+XcopNI0PnkAUZa58p+/upZv4c4A
      oiRy7D/+JjPX7jB57hqzN+4+ZgzSvPnrv83x3/8tpEO2yL/+4YfT4q8Ds1hk8d4Q8bGp0t+Y
      FFJppi/dpJh/9CXWKBZZ6nuQF2D01AUEScJZESQ9v8TCnX5MShNj+sptirn8ujYz80v0fvN1
      7H4vkU1tiLLMja/8OTf/+OslX+cqxWyOvpfeQM/l8TfVAALX/uBPuff1VymkMywPjJJZWAZg
      7PQlTMMgvLEN1eXk7l98l2t/8Kfo6SxL/SOsDE+sdthk8PXTpKbnqdjcjitaweipC5z9nf+K
      ns2ttZ1PpJg4exUt6Mfu87Bwp5/07AIYJun5RWavPxBDYmKGvlfeRLA2x7UoZ6x3AIuyxhKA
      RVljCcCirLEEYFHWWAKwKGssAViUNZYALMoaSwAWZY0lAIuyxhKARVljCcCirLEEYFHWWAKw
      KGssAViUNZYALMoaSwAWZY0lAIuyxhKARVljCcCirLEEYFHWWAKwKGssAViUNZYALMoaSwAW
      ZY0lAIuyxhKARVljCcCirLEEYFHWWAKwKGssAViUNZYALMoaSwAWZY0lAIuyxhKARVljCcCi
      rLEEYFHWWAKwKGssAViUNZYALMoaSwAWZY0lAIuyxhKARVljCcCirLEEYFHWWAKwKGssAViU
      NZYALMoaSwAWZY0lAIuyxhKARVljCcCirLEEYFHWWAKwKGssAViUNZYALMoaSwAWZY0lAIuy
      xhKARVljCcCirLEEYFHWWAKwKGssAViUNZYALMoaSwAWZY0lAIuyxhKARVljCcCirLEEYFHW
      WAKwKGssAViUNZYALMoaSwAWZY0lAIuyxhKARVljCcCirLEEYFHWWAKwKGssAViUNZYALMoa
      SwAWZY0lAIuyxhKARVljCcCirLEEYFHWWAKwKGssAViUNZYALMoaSwAWZY0lAIuyxhKARVlj
      CcCirLEEYFHWWAKwKGssAViUNZYALMoaSwAWZY0lAIuyxhKARVljCcCirLEEYFHWrBOAt6G6
      9LOlGUUG0eXDFXR+aBWypoJgw9dY8SMZ462v/pHKfywkBU/1R7NXdtg/YqUi3voqXLU1yIrw
      8ewRJCp3bEZSxIfaLNX3o3Lffm9THR9m1f18vqbaj9mCiLvm8WMpai7cEe/a397GWoTvY4S7
      NobwI16SHzeH7vfL31S33r4PHoju7kYAKvcdoKK9kvCOrchmHtFmxxH2r1Wo+rwoDhu2QA0b
      P3cESYZ8MovssKO43djcGgCqx4PN40DWbGtt2Pw+VJe29rcgKzhCfqr3bgV4pLyo2tCCpQGU
      NTu2gB/Frqza4cTuda6m2bD53KUKJRlZlUAQke1qyV6vF9VZskHxeNBCfqLbNoAgooUDiJKI
      aLMha3YUTUXxeLB7nYg2O11feBHVZUeQZByRIKIkIjvsyM6H2nc4sXu9xPZsQk+nMSnlKdUt
      gCjiiASRNTuiXBp2QZJxhAMIooC7uZOK1gBG0UDSNLq+8CKKw0VsTxf2oB9ZlUvj6fOiaOpD
      J1fD5vehaOraOVkbQ48DQZLp+MKLOL1OCskUkmZHEEBQVCRFRHY60QIeBEVh4xdeRPM4KCTT
      j9TxSDt2BRDQwkHk1fMAEtEdnQ/6Cth8JZtkf4SKzjockVI/C6k0gqwga7bSfBIAScIRDhDd
      tRVptbys2bGHAkiqtN4WzY62miaqtlKbkoykysT2dK/NO7vX+WAsNZV8MrU6//yrYyggHbJF
      /vXDAjA9UZzGApJdRfZ40Vx2Jq+P0PiJfdgragmETBo+9WmEXIqmE3tZHl+hqruG2RszNBxt
      pWrvYRS5SP1TB0hMpmk8tAFXezceLcvS2ALullYiLVXUndjH7IWbmAh0/PyLCBhUbW5mbjRB
      w+4WvJ1dFOdnqP/EYWSnh0DURc1TTyKZeWqP7SE+Ok/zie3YYw2oRor2X/wcQjZOfHQGta6d
      ujYnK0sizcc2UvPECcRiloYTe1meTNF2ohvZE0Szm2j1zdidNqp7OhDDDTTurCeTMGl+ageS
      w00hHie6awuLd/qI7NyK3eejelsDvu09eF0KlQf3kp6cpu3FIwiShi/mRgrUYCQSdP/9T1LI
      SkQ3xvC0d6HIIm2fOs7ctVsUCybtn3seSZao2bmBbEbGV6Uyc2MQ2eWlZs8WFm71UfvEXgqJ
      NA0Hu8mZDipbKon0bCXe10dRN+n+1V+EQob2zzyPkctQf3gniWWDpgPtOBvbUMng39RBsn+I
      2MHdYPfjUlN4u3ciFrJU7ejEt3ELSn6R4OaNLPcNUHNoN8m4ScuhThx1LahGnPZf+DxGKknD
      sR5MLUAw5sER9hMfmwEkmj55DD2ZpXbPRnTZQ6QpQuWuraQm52k4uIWCrhHtDONpa0cvOtj4
      yW0YjgihCoXwrn3IMlRtbWfivcsYBnT/k1/EzKZpOLyDxEqR5kOdOOpbUIsrtP38ZzCyaRoO
      byevhPCoixRcddS2e5F9IZKLWWJbGqg6vJfs6DiVOzaxcOsOdU/sR3CHiDQEqdjTQ3pgev0d
      YPHKDSInniY/2QuiilEoAAZ6Oo8oSWgRP5nJMcbOXCW9kiE5NkV8dIx8ugBAYXmekZOXWJ5b
      QRZFBNOgmM2wNDABgJ5OI6h2FL8bGUBWEPJJJs5eZXFkjtCWjciKhJFOoVTUE6jzoWgyer5I
      YXme0XcvM927QM2BbuwOFdHIYYoyK3fvMvLuDcwPdgjIzkwy+u5lkktpghuaGX/rFGOnL6Hr
      EpGNzaheN4V0BkEvMPjdt1kaHGa+bxqzWERPxImPTZGYXqSQyqKoCvaAFyObYOSt8ywMTONp
      a2Xl6gXGT18ik8yvtTt35Trjp68gaE4km4qeyZAanyCXyoPdhZCaZ/z0RXTZQWZihpXhMYwi
      5BcXiI9NkZqPEx8cYOK9K+QLApHudmS7nUIqhaSU7giZ6QnGTl9meWiM0VOXyKYKRNrrGX71
      FAOvnsXfECUxNsXyyAwA85ev4dvYicMpEZ+JY+ggqXYU1SA+Ns3K2BwA4c56hl99l4HvniHY
      2URyZJjx966QTeks3+2loINZLK71NTkywsSZSxRMG9HudmRNI5/MIKkic1dvMH7yMqLXs5Z/
      6r0LjJ6+gc3nRlEMxt+7ynzf+Fp6ZmqS8TOXSazkie1oY/iVkwy89C7BLa2k76fFC6iKtO58
      F7MZkFRklwczuUh8fIrUQgKAYG2QgdfPMXj6LuG26HoBmJlFPPUx5u7MUBTcFJcmUSrrCVRp
      6LkCgviBImYBR1U1Npftg1VRzBXwtTajGEnSyZJAag7sJDu/iGmKpWdBvYDg8BLduZlgQwUL
      N95HkGUK2QKZiUESi3myiwn0bA7ZEyDW00Wk0c/46esYiORSOfR0BtN8MPWNVAJ36wZqD+1E
      +oC5y31DVB/eT/W+7ciKwdLgJPnlZQqZHCYmmCaiTUNRBSRvBH+ND8nhwlNXTXRLE7lUdt0Y
      ZMdG8G3bSWzPNhzu9eMAIEgKFZs3sDwwvFooiekMEu3pRi5mKH4gv+L24gr7Hjk2f2sAjALF
      bJ5CrvDYdgDm7wxTd2wvDcd6WLw3iIlCoLH0LmHmkxjuGPrMKN6uLlQxR1E3Sn2SbfhrI6U6
      3h+m9tgeGo7vZvHO4CP12/1eipksgc52ZLn0yOJpbKRqxyYUckzfGgA9j5HLUsh+sGfrKZoK
      sZ7NhFtrHrQRqaBqRxdOt8LExV7qPrGPhmf2snijD+1+mksmubBEaPNmavd3r73fRPfuoLC8
      hGGAIILi8eEMlcS3MLpA4+HtNOxpY753CuG33J3rLpqq20k+kUKya6CXBshREUFPJkqTRBAp
      JNMortLzoj0cQo/HEWQBBIlCMo3sclB99BDxi+9RsAWJdVVx9+XTiKoNR8hDLp5GT6UwzdLz
      qDPkIZ9Mk0+kUX0+RHSyy0lEu4bD5yA5vUDrC8cZO30FPRmnkMmjuN0oqkB6IY7isFNIZx8M
      YDiEkUljGkUQpUfstfl9CKZOsaBTSOdxVoXIzi2ApGDks5hG6TlRkgzS8yvILheyZGKKKiIF
      9IIBQCGZRtI0zFwWyelCUQUKOR3TACOXQ1IlCpkCisvNhk8f4d5fvkHDc08y/spLpOIFBFnB
      GfGRmp4HQUZSQM+WJrbi8SCaOoZpUkhmHox1KIiZTZFLlvp6//gHf6o+LxJFMstJRLsdu1Ol
      kNNLNjscmLkMhiHgrAqRX0li6nlMUUXVpNLdNplG9XqRxCKZpeSj9acyOCvDFBJx8vftcLuw
      uR2kZ+YwiuYDOzM6siKgZ3UUlw1MkWJeRxSK6AVQNJlCroirIkA+kSo9p5vQ+sJxxs9eI7+4
      iJ7XH7Gl9YUTjJ+9Sn5xAT1fxFEZoZBMYhYKCIqCningrPSTW0lRzKSRnB5EI4eBuDZfjXSS
      fCr3eAH8uJAcLqq2tYOhM3PpJoWc/iPV56mLEh+Z/DFZ91eLu7ERX3WI7NwMc3dG/rrN+RvP
      h53rH+c8+IkKwMLibzrr3gFqn/8Em37uGTo/90lqezZ8aOFoz+YfUL1A45P71zfqidJ4sP1j
      GQoQ7u74UD/2x0em5bmDj01RIjWEGwJrf0d3bQGg5bmj37e2+3m+H9VPHMX+UZcUPkBFd8fa
      75IvTMP+TevyyP4INTtaf2BdoidE06EfdO4+Po3PHF33zvXjQgrGaNzb9rHLBXcfxB8qOQwi
      Wzr44ASSP1hAdkr0fvUV8jaN9hcOovQt0HCwm2JymcE3r9H03CEEI8/UpXu0PHeU3Pwshj1A
      uC1G/N490oabSJ0Xxetj+Duvs9Q/iqellYqOWlIjQ0xeG0CQZIKbOpFD9Sxdv0oyo1DT005u
      doqx23OEwyazQwkqu2IUZS/eKh8L166jqCpKZQ0NPU2gOpg5cwYxVEewPoyAyfBr75DPizQ/
      dwwwMbMpBFUjMz7E4kyO6m2tmJkEw9fGadjZQmpiBsWlocVqcWp5srpG1eZmEoN9KI3biUUL
      LH3lZdD8tDx7lGJ8CXukgvoTB1HEPANvXaf+6C5Uh8zY6eu0PHsUfWWR2Tuja+MZ6t5CoL6C
      eN8dFKcDQRKpObYfza0ycfI9/Ju2INtkVNWg/9WL1D+xB0kWSY+PYbrCOH12ps+eR7KpCDYH
      zZ/YjynISOlZPC0tVHTUs3LvDrN3x0GSCW/djFbbyNz58xRkP1WbG9GX5xk+10vj8T2IRo7h
      c/0oDhuBTV3kxgbwbd6Kw2OjmI6TXCrgqgwye+EioR07UFUYfeNdAhs7mDx3jcqeLcQn4lR3
      VyNqbibfOYUSayJYE8DXVM39h7vaJw6hKjrjF+5SvWcLhcVZpt6fpv7gZgrLCwyfukndE3tR
      FJOh750m3LMTd6WP+QsXUGNNuCIeJt45T+xQD4KeY/jyOMGuTuSKRpauX2FuYAbJ4aH+6A4U
      VaDv2+dpfmY3RlEg0fs+K0tQu6sde00z44NnSiJSVZRQlMY9baA6mD178XGhECr1Tx2k/Wef
      Jj05QdOJPQy+8jorGQeVnbXYVZ2J966Rmpxi7nYfC4MzxLqb6P36awS3bcVRFSM18D5Dl0aJ
      dsZY6h/B31TD4u27zPU+cHPlZqbofektwtu20HB4G33feA3TX4cvFsJb6UWQVLx1lXhrKpi9
      fIP49DK+phokTwDiM/R/5wKVO7uo6qql7+W3kJ0a+awBooTTZ6P/5bdx11TQ//Kb+No3YGRS
      zN4eINi9EdXtR9GXmbzWj+oPs+nvHGBhYIbWTx4htxyn9vAe5m/3MXvpKnreRF9ZZO52HzPv
      jyBQZPSNUwiBCAom87fvodsD+Hwmc7f7Hpn8AJnpKRb6xonuLi3yaXVtqLlp+r59hvrj+/A3
      xhh/6110NUCwqwN9opfpgWWEfAJPlZ/pC9dIL6XxNdZSuXcXixfPMXbuNiDS+tyhkr1H9j5o
      b2qC3m+8QezgXvTkCnPvDxLetonqA3tYvHiO0Qv3kFUJd3M7dd0x0jk7Xh/0v3kdm0PG29LI
      7HtnkGvaKQy/T//r12g8vgtfY2l12NdUgy0QRp8fp++tG1R1t1O1qZbel98itZRasyPQFGXg
      u6dpeOYJjFSS8I6t+FvqKEyPM3XlHoEdu/D6ZXCGiW2uJTEywtLgAjUHNhNqb2D0e28T2rub
      udPvMXapF1kRyc5M0fuNt4msPnkIgsHc9btIkUb8lW4cTpO+b7xKsLub+iPb6f/ma8z3PXhX
      8DXWILt9iJkF7n3tDNH9Gx4ngDzD3z3J7f/vL3HWNz24ZZhAboW+1y7h695OuN6//nHENAGT
      fCKNaRjcX/OeOPUemZRO6zOHHgggkQQMHnXcm6W/RQFJcyCKMPzqOxiyg6bjPQ8sjKcwTQMw
      MRU3TZ84yNzlq2vphVRpJTOfSK6aZRLbtxNZ0EkvJgCT5PQ8ADa3jZm+eXxVHvREgqmL17n7
      zbfXrSfcX77X02mMoolpGribWwg3hkmMzyIIwvolflGl/ugu8gvzFHKr7sC18Sy1UMxm0AsG
      ZtEgOzVJ5eGDRGo0Zu7NMPjtt5E8YeoPlh531tyvq2XzK8tMXbxO77dOPWjTKLlyTdOk+uBu
      hEKGzEq65CYWVssKIBaTZHUNxUihNbbReKiLsTM3KKaTZOMPvGlQyi8IAiCgOLW1sTUNY3Vs
      hLWs90nPzGOaYOp5pq/c5N7XXmPx5k2m7s1Q/9RhVJvE0t1eRl5/h/mJDA0HNpMen6JoQm5p
      iXyuWOrmQzbnE0kwDczVQfR1bcRX6SY+MQ/C/TkFpmGWbBIoeS0/QC6RAsPAFB6zEiy7/NTu
      6ybU1crsxctMXR+i8cQ+VBKMX5+k4Ynd2GwCMzfuIfkrsCk6yzMpavd3s3z7Ful4Hn1pjoIu
      IxkZUotpPM0tVHY1kZmZZmVsFkQJRTFIzpTcl1PXh2g4tgtjYZLp632Etm/HFXaTmprGVlVH
      sLGK+OAguXSB1MwiQiFNeiWH4rDhrAyTW1wh2F7P/PU+TEQUh0picg7FaScxMYvi1MildLw1
      ESjmWewbK02MeA5TzzP+7lUCbbXM3Jmgdt8WyKVYGZ2mYudmVgaGMXQTyR3AE1DJJnMkxqdR
      nA4yM4v4W+qQZInk2Bg504HbrxLp2crKvSFMwF1fgzPoJr+8QmJmicS999EaOqjoamT87TOY
      olyqz+FAdrpQZBMDGw6PjKO+CW8swNKdXvQCTF+4TvXhvbgrfKQmJpgbWqR6VxdGaoXk7DKI
      EsGONgKtdcycvQA2N55oCCOXYfSt80QP7sFT4WaxfwI9vsLEjRHC7Y3YXQrZRBZ/TYSViXnS
      07NkpmcIbttOuLWK4dfPYqhuot0tGJkki4NTGJk42VQRRdZZmS9Q3dOBoOeYvzuIaYLi1EhO
      zRKfXKT20E7sNoFU0qBmzybMTIKxk+cJbN2GvybE4r1h3A11aB472YUl0gsJUlOzJMamqTm6
      F0/YzeLAJBI6ybkEitNGYnwWUbUTaK5BlATiQ6MYhkFiahHF6WDq+gANx3Zhc8gs9/aTzxoo
      TgfJmQVEPUt6KY3ilP+We4EklfbPPE12dg6b28a9r7352JXgv2pERVldQf94+DdtoaIxQL4g
      kJ0YZPLa0E/AukdRIzFajm0mvZBEKKQYfOvyT7zNv0n87RaAhcWPyA/ltPI11HxouhII4/A+
      PiTgByE7tXXHJLudD0Zg/FXj7+yg8cR+ag9sRX5M/MnDKM6P5uuU7HYE8fGO3VLaxzRSkPHV
      V+JtqkcUINjVicPvILSlC83z8c+H7Fh/Lv4qcNRE8dRWo6oi3vtzTdHwVQfxNdWte9d63HyM
      7t9Dw4n9VG1u+tC2HjvEWiSE4lAR7XZkhx1npOQPFxQVZ0WA2O4H/m7ZYcce8K6Vk20yjrpm
      /FVuBEnBWRlCEEpL9sDaS5QWDqE67YiqDcWh4awIIogyHV98EXfQ84g9tc88S9WGUry5PRhY
      C2suIeCoCCOtTsoH6QKK07GaJuOoCCEp0lpotH01tFa02ddsLKV5ECUB1eddC8kGqOhuY/rC
      DZYmU7Q8ubPU7mp/AeyhADa3huz00/XFZ1E0dXW8gqt1ayhOJ477fRMEGp57mkhL5UN229fS
      Gj/5NOHmShTnQ+MmlL69EFXbWr33UTwe7MEQ0R0bKCSTSM4AjUe3gD1Aw/5OCjkdxe3G7nMB
      Qum8+T1r/ZBUCdFmL52LSABBVuj4/Iu4Q+61NmyBADZ3KbRddmgPzns4WAovFiUUu7o69qW5
      Ywv41/ql+nyr7YPN8+AbE0nTcFY8WHPx1NXga61DkaUHc03zEd3cQD5RCp9RvV7sPheKQyO6
      uxtbIIDqeDAvgk1Rpi7cQG3oIlzrRtIcOFZjqx62a91LcKh7C56Qm8bju9G1KE3bo8ixNlzS
      CjVPPolZKFC1pYWx01dBENn5L36F4vIcrpYNuLx2ag9uIz6TRi0uU3HgIKIkUtXVQKS7i7kb
      vbS9cIyiaMdX5aPx+B4yRTftRzaAtxp/SMDd1Eyyf4j0cnJtMkR2bEdMzSBXb6CiwU9o5w6y
      owPks0Xqn30SuyZR0dWMGIwRqfMR3rmT7PQU3b/yebKJHF2ffZLcSoaanjYcGzbj9ykEdmxH
      n5uicvd2bIEwoXovsWPH0TQB0+YltrEa/6ZN5CdGyGd1Itu3otokAm0NrNy7R3DHLhwuhepD
      PWQzAvU7GlD8PrLLGaI725m7NUDbzzwFiMS2NuNq30ooaiewfQf5sUFyGYOKnv0Rxk0AACAA
      SURBVG6M+CxKtIWK5jChbVvJT4yQyxhU9myluDJLaMcOUhPzbP3SMyxM5ahs9FN9dD+YEtEt
      DczfG0UNV9P+7A4Emwd3QMHR0EBqZJ6KbU0sDc4S3hBjeSJJ3e52nA0tiKkkm//xZ8nPzeFt
      70Tz2KjZ043pqaR5Zz1yVRMuRx5PSyvJwUHSyyl8m7qJtVUQ3rsXKT7Lhi99AWNlHndrJ96I
      k6p9PaTmktTtqGdhIM6GT+8m2N2DXdKJHtpDeiZO61PbkRwuUhMzeBurSc8tgazR+EQPtmg9
      Pq/OyuQy6alZ4iMT5HMFGp99CptDxd/WjGomcLe2k44XaTq4AWfzJnyePO72TRipOI3H9zB1
      +X0A6p44jCSZuCJe5u+Os+FTR0FyEm70U3ngCKpUoPrIvvV3gEIqg+JxYve4AJPxk+8xfvEu
      WsAP+QSTF66zNDq7ln/p1m3Gzr9PZGMLitdLNpFGFkGQVMIdjdh9bvLJNDODi1R1d5AZH0BP
      ZZBdztWrgcnE6fOMn72N6lFJTMywNDz9wCDTJDExzVL/KKGGIH2vnWfw9F0irVEAHG6FsTNX
      uffKKcL1Qfpfv8Dge/eItFSydPcek+eusdQ3xMTZaxiyDVPPMf7uBQbfvkmorQo9V0C2y9j9
      fnIzkwy8fg7fhg3IdhvFVBphNezYyKWYOn+d0ZOX8LU24fSojJ6+wtzwEmp+nvhCBgyT/OIi
      iYkp8rpCfnaMiTMXETQvZj7L6DvnmO0dx6bZwCySHJ9haWCcQFOEoVfPMnzqDsENVaW0iWmW
      BsaY652idv9G5vsnqd5UzdJUmtzEEBNnLiA6Sx8oudsamT11lvEzV8ivxltl5xdITEyyMjxJ
      YnwSZ1NTqd1CFlOSWbh+g4lL94h0tWHzesknUgiSycSp80xeuouiySQmplkenVm9TEuAQTGd
      YHl0lqX37zB27jaeCjfDb19i/MYU/ppH79zF1ApjZ64wdnUCjyfPwtB8KdpWgvnbA6vnt4ie
      LyKpCtrqHcUoFNacCOnpSSYvXGfy8h1Mg7WLoigJGIUsi/3jpCcmmDh3nUw8u3ZXzM7NMHn+
      Grf/+C8hUMPSpXOMnzyNrbIWI7XM6OkrjF0ZWy+Amv3dZBYTCNIHnnPNAoLmI7ZrC8H6B5+/
      3Q9Dnu8dwUwnMXM5dAPMYp7lkWlyy3GK+QILl67Q+nNPMXmxj5r928guxkEU160l6LpAeEMN
      nuYmVHvJPD2bJ9TVyvzAHC3He2jc28Zsb2mBIx0vULNvK61P72NuaJ7m4z007mlltm+axyFI
      CtHd22k40MHytE6oMYie1xGEB32Zu3kHQRJL0aKZUny/aHNQuaOLcGcTxUyG5HKW2v3bCNf5
      yOQVRIo46xpweBRUXxC7rYgSihHbuwMzvfJYWwo5nXBnE4v90zSc2E3dgXYW7k6uphUJdzYR
      v9tLqLORsYuDBGp8JCZnUKvqiO3biZFcBCDRO0TFob3U7N+Obe0rrUdZutWLKYvoOR09lXno
      vA1TTCcp5vMYxUf9IYYpE2yOAVAsGPjbmiguLVAommtrEctTceoPb6d6UyULfTO46huoPbIL
      myoham5iu7up3lRJfNFAUQWUYBXeSi/hjc0A2GMN+MI2ivni+lB7oJjNkl2Kk11OrHn4jEIe
      T0MDipkmnXh8gGUxnyO3ksQ0TFLD/fi39VB9cB+56VEEzUPNni3ENkfXe4EkTcPuspNPZynq
      JuhZDGRkGYqGiCPgopDMkE9lgNLnaXqmtHCihUMU4isUTQHR0DFMCUfYQ3pmofTcthpmLdrs
      aF4H+VSGYsFAMAoUDQFZFSkWBTSPHdkfJD00hF4ERAlHyEt6dhFbwI+ZS5NP5VYtFnBEguQW
      FynqRik9myafzqM4bBTSudWfWRSnndjxA8y9eQ7d1Mkl0tiDAYxcBtMwMU3W+qJ6vQhGgVxi
      9fNAjweby45ZKJCaWwIEtEiQwvIyel7HHgyAniO7kkLxeEDPohfAEXCRnl1EsmsUsxkE1QZ6
      AaNorPbLQ3p2abVfGfKp1UUoScYRcJOeW0JxlkKQFaeNQiqLoKg4/C5Sc4tri0+Kx40kmBR1
      HRMBPZVdzZ9DcailcXC7kSST7HIKWVPRM7lH+mEIEuh5TCQkGQxTwuZSySwmaP70c8ycPIkc
      bSHoSTN8cXBtrOyhIMVknEK2gOrzgZ7DNE3qjh9g4p0LFHMZ8ukcqs9XCmleTKB6nOTjqdV5
      E0RPpcEsrl1w7qM4NQqpDAgSil3CFCSihw+QunmZrOmmdkcN/a9eLI2PQ6OQLs3Lh3+/P69t
      TpX0/AotnzzO2KkLGNlM+blBXbVR0qOTGD84q8VDyB4flZuaMfNZpq+8T1H/wSPoro2SGP3x
      h6+LdgdV2zoQTJ2ZK7coZD9emL27JkpirGRX2QnAwuJhfmjvulpVS6gu8KF5Yru7P7wSSaHl
      mYOEujv4cM/6R6P++WPcfwJuOLE+DPuDdlXt7v6xhFdXP3EM7SO4zNVwjHBz+CPV6d28jUh9
      6SW3/vnn2PT5Z+j8+Reo3t78oeViu37AmAONTz0+BPyjo9Hy/N7HpjibNuAN/ZAx3w/R+PRR
      JPmHODvuSloOb/zI2deFQ2vRamp6OsjNTDJ+Y5ym4zsxcxkGvnea5hefxchlyE6OINZtJhrJ
      sfKHr1FzbC8SeQbfuEzlpjpWFopoaoHmZw5TWFpA8QeYOHuN2K5upm/0U39sJ6pNou+Vd1Ac
      dmS7DTQ3jYe24opVMvAXLxHYvhPNrTL6+kmyqQL2iig1PR0IxQyDZ4doOdyOIdiYv3ieoquS
      SHMlvs56Jl8q9cNZU0vTs0fRF2cZvdBL/RN7kUWdiUu9JbtSaZqeOYKUTbIwm6V6exuZyXFW
      lgwirVXEe3uZ658itrubibNXCe/oJjUyTe3+DkzBxvylCxRsIaraq3E3NbF49i1qju5DcymM
      vHGKit17UTWThb5pwm01JEeHkWJdVNdD4qtvE9uzDcUu0v+d92h6ch/FoklmbID58TT1+zch
      hytZfGMYAFE06f2Lb1GQ/LQ9tQV1KE79wS0UEysMnbxO41MHEIo5pq710/zsYbJz0xiOEJGW
      Klb6ekkbDiI1IRSfm5HvvMFS3zCe1jYqO2pIDq+GqDu8tH1iN4Ygoa8sIbu8LN+8RsZwUrmx
      Hn15nvmZNJHaKlYGx1GcdjxtbYiJGcRgDaGmShZu3CB4aD+uVIRrf34KwxSpObwXR9DN9Lun
      cTR14go5mbt0heWJRRRfkLoDW5Alk96X3sIwwL+xi3BThEBLHaOvS9Q+sRe7U2b4eyep/cST
      mIUs+sIU85MZYlsayUyOM3FzgoZjOxHyaQbOj6JoNqr3bmX8zBWiu7uZPHsV0Ruh/cmt6EWB
      6TPvkRc81OxqX38HaDyynb5vvsbi2AINT+5n5DtvMjmUpm5rHQ6fnf6X38Db1sb87T6mz18h
      dPAwmpxHCtVSUedECtXQsL2OuTtDpfDgu6Nrq3nexmpMDOav30PwxQhES4si3oYayCQYPfc+
      +vIsRqiJqpYghYJM7b4uoOSGnL3dj3dTBzanFzE1T9+3TxHZ1k31tmZ6X3qT+PTyWj+EYo6B
      V95EqW6i5tA+XC4QfFUEw2LJrhv3mL/dx+TVPlqfP0o+nqBq/05cVVXkxvqY659ata200ZK7
      rhrV7YX0An3ffY/Ilk5qe9q59803WB5fwNmykYomP7ppo3ZXB/7GKga/fRJnTZTlu73M3Rsr
      jdnlaxQyBeZv3UMMVOKPBtFcEv0vvY6vvZP6oz0Mvfw6M7cfhFWLqkb9iYNs+JljpCamqT+6
      i+FvvcFK0ka0qw5FLjBx7nopQO52HwsD88Q213Lv66/h27QFd3UVqd47jF4YJdIRZal/BE/d
      ql2rIeqCTUM2U/R+9zyekIPeb5wivL2DwvIS8/dGCG/tQquIkhvrZb5/Ci1WS9vRLpanMrQ8
      vZvscoK6o3uYf7+PyfNXKQWKCiz3D7Aym6ZmZzvuaJDZyzdIzMWBUqTo3M0+7I0NOFf3Oopt
      XT2XMyu427cQrnVRMB3U7W7DFXIx8MobuBqa8NbHiPcPMHN7mLqnjiAVc2iNGwhUOQATRyyK
      bHfiqSy5VgXNjRmf4d7XX6fmyH4aDm+j/5uvPWZXiPuDLoqYsBZWWgpzTgHmQzswCGCaLNy6
      w/B33mBxYhlRFBAkubT50qpT9n4orerU8G/chK/SQXx8lkc+zxFlWp/dR99LJ8E0WRkcYvzU
      e0xeLe1IEN27E0XUSc6vIAD5ZCkk2kR44D573JZjpolpGCy+f5eR773F/Mjig/DdVQuKmRRT
      F65z72tvUNR1UnMPhHS/TnV1JbuQvB+KXQpPFu7nMU3iA4OMvXOGyRtDZOYWMAyYee88iaUs
      rc8eXmvR19mJr8pNfGIOQRAeHdfV8X64K0Y+w/CrJ7n9x1/D3dyKKawaLkAxucLgm5fxb9pG
      qCGAcH9MHxkKg3wy80iI+vR750ksZmlZswv0dBZMVj9MNzEFqDmyBzO1QjaeQUAnOV1y6Spy
      kaXZHE6vjezCPJPnr9H/vbOPDL3sDVHb0058dBLThKHvlULbG58ohbaHt23B6VFITC+smfvw
      uTRNk5X+AcbffpfJW6NrG1uZpsnshUssT8dpefYogllk7totBl5+lfhCyTs4dnmIri9+gtlz
      lx4zJR689q5bCU7MJWg8thtRzzB25ib1T+7H5TQZfvcWsmYnMTGD4tBY7h+hcvc2Jt58h/Du
      XXgqvSyPL6MIaSbvzeP2CuRx4PYqpDMiVZub0BMrLA5NE2ypQ5RMEsOjGIZIdjmBgY1QfRCt
      soL04F2UWBOhphgrg0PoOR3J7SXQEMXUCywPjGLeD2m1ySyMLFC3bwuCkWfh9gAGoFVUEe5o
      Ijc1zPjZG4R37sAb9bPUO4ToDeFwQGIpT7g+wPjVQeoPbkcycyTn4hRWltbi93VTpW5PFxSy
      LPaOYuo5UksZFFVkbmCO+kNbkdCZOXseraGdYHMVKwMjIMmkpuZwNzZRtaWZ9PQUSwNjVGzf
      RHJ8Gm99NaIokBgewyjqJKYWUBwaU5fv0nBiDzaHSnxgiGwyj+oPUr1nC+HOFqbPXWDm1gj1
      x/eiGkkmb01Qe3gXNg1mr/chesNo9gJLU2lq929l5fYtUstZCosL6EUBoZghvZTG3dRE1eZm
      MtOTpb2ARAlZNkjOxVFUgcT0MopDoZAT8MTCFNNJlkenKSwuUSgYGIUMY2duE2wKsjiRJLa9
      g/ziHInJBaI9G1nsG8Uwwd/agN1hIzM/h1bTSKC+gqW7vaQXk4h2J4GmagQMVvoHKRQM8gWJ
      un2bEYs5Jt49h3vDRoJNVSz3DiEo6tr8M0QbsW0byM7PMnLyCtWHduHyaywOTiKLBkt3+6k9
      2EP/6+cBEF0B6na14opVM3nqPeYH52h4YpflBbL4KURQaXr+CLmxPsYvl1acpXAt0WoYu/ro
      F3uWACzKmh8pyNhZV4v8ffyX96M/oRRFKquPzyioNmRVwl5Rhd25zin1kVC8Aaq6Wz40j2iz
      I8kijlg1iu1Hi62+X9cPg6uuFtmu4m+IImva9w2H/rjYIlU4fT+a+1FQNbzVoY9dTvYEaHr6
      EI1PHsBT5f/QvPejW38c+JvrH3pXEvE1xT68bdf6ttedRcXlQPV60fxuFLcbR6AU4CQ7Xbgq
      g6U8Tg0t5Ce0bTM2BVTPaoir31/akdfhYtMXX8DmKp2QYM9emg9tRBBKebTVkFiA4K69NB3o
      xNvahjfqw1VVOgGCJOOKVSCKAggizmjF2q7QtoB/LZwZQaDxU09jJlZAEHFFK5AUCUFRURza
      2u7N0WPHqN3WSGDjRtxh91r4raCopTbvvzuqNlSXE1dVCFFVcVWFS4MsybiiEURRpPLoYeq2
      tyDZbShOBza3hmiz46oKrYU+2/y+tX7eT0OAcPdmFNkgl8zQ8PzTVLSVtizUwiHsXieCpKC4
      HLiikTVxiDYbiuOhdlbPgyAruGIRFJcDs5ClkNNL/VktKzs0FJcTZ6Q0KRWvF+dD2y2qLicg
      lnbqlmTUYJiqzU2lMZRFQMBZFUFWpVUbtJINdg1X5YM1IHtlLSSnmTh/nfqnjyJQCiXRAqVQ
      aklz4IqGECSZ9s++gDdWKuuojKyGUcuoLkfpfK/uDi2oNhSnVtrhWlFxRUvzQlTtuGMRBBFy
      8eRaaLTm8xPt2bhqcwWyKiFpDhSnhqsyiKDY6Prip3AE3Ii21TqEx7wEt3/uZ1BVk4bnTqAK
      OlVH9rBya5DaI1ux17TilFZo/vznEDLLCE4fQl6nsquOLG5qNlfj3bgFVuYJdW1g7uZdCpk8
      7tYNeJxFMoaX+p4GtPoNqPpS6Xvhtg24NZ10zkZlawSxogmPPU306BFMXad+/2akijo8DtAi
      fnBFiHVW4d/cTW58kHzOpGrPdlL9fVQdOYJEkbojO0hlbXS/0MPKyCTZlQyBTV0oxThFNUAw
      5sbR2oWSWSB25AAIMpUdMRYHJnF1dNP1ZBeEG2jqacB0VOANmIR39CAIENveRlFxYTOSmMF6
      2g53Ep9apOX5Yxg6xLobcW7oxh+U8HVvw1yep+n54xi6QGxLA0VRIz09Q92eTYjuAMXlGXCG
      CdaFqD6yj9Rshi1fPEwuq1DVFmZhYArfth7aj5TaqT++DyQ74eYQkZ4ezGyODS8eJVu04zAT
      1D1zArOgU7u7A61+A5F6H57OboTEIs1PH8AQZPSl0paCLS+eILmQpeuFHjKmB5dLINqzmfRy
      npqeJuzRRmyaRM2+rRRsQdqPdBCfXqHx+G5M2UWozsPy6BxqsJLqbfUo3jCykSGRFGk51IFa
      VY9DyVJ74hh6TkeRDQKd7SSHhwhs68HlVYgd3E1yLsX2Lz1FaqlIzfY65u6O4d6wla7nu4mP
      zlF/4iCmIVC1sYbIzu0UszlsDpnonp0k5lK0P7MTU3bgiWiokRpUm0jNvq3gr6WhO4Ic3YDL
      lsbT0szyvT4anzlBMZPDZhce4wbNJRk9dZn4xBSjb11gaWIFRS5S1AUkuw1HwE2ir4+R0zcw
      BZXGZ0t7A4W7O5BVG0YqQSGdIjE1u7oDAyQnZ1kZGiPQ1cjwt04y/N0z+Lta19LiQ2MYhsHk
      2YtMXOrFEfJDNsHU+WsUUFm6dhNDsSEIAuEt7cg2O8VUAkFRwTRITc8SH19AVQpMnL/OyrKJ
      QzMYffNdlkbnAJPk1CwrgyWPy8SZi0zfHMJRESbYXI3md5JP3g+cMpk+f5mp64Ms3rjB1MW7
      KKEQofY6tKCXfDxR6s/gOEaxyMhrJ0knRbKTA0yevYTo9GMW8kycucTwWzeI9GwhM97P5NmL
      iK6HVs7NIsnJWZaHJkob/zqdqG43sgwzF68wcf4mkuP+RyNFRl49RSoF/toIdo+dfCq/ukO0
      QHxwGL1QRHB4MZanmDx/FV12IOo5Rk9dYPr2GDZbgelbI6X/B2H1uXV5Kk5sU4yl8RWCUReL
      Y0ss3nqfqfPXMFUH4a4W7AE/uZUkomgy8upJMnkVbzSA3a2s7QgOsHj7DmPvXsBQPVR0NzP6
      6hmGv/Mevs4mpi7dLn04ZOil8zA6jTvkYOTdq0zcnsUfdTF35TpT566C9uDpYOyNkyzPFgi1
      VqAF3OTiaaYu3kTWbGuubG9bKzOn32XizGXyeYPwxha0oJ98PIEgCEy8c5bJq/dQbWJprk0s
      MHnpZuk/dRHFj/YO4GzagMttYqzuIrzmRzUL3PrPX8HV2c3C1feRNIWiYZYi89xe3JWlW28x
      myXQ0c7izV4anjtC4zP7WLh+t5SWyeLv2ID80OO/qecxZCfV+3YgG1nsoQBGQSfU1cb81TuI
      NgnDMEt+6zV0slmRmv3b8XpM0hnWQnYB9EyOUNeGR3YuM9IJViYXySdSFPMf8hF7McvS8AyF
      eJJiQUdP5whubEOSStu4FFbmUCsaqTmwi2J8HkFWiO3ZQf3hjcycvYIt2kTNwV0UV+YfqbaQ
      04l0tVC9ZyuFlUTJR//Yd4JSO/ryAsmFJPlEBiOfR7RrBFpqWRkubT1vplfAXUH1/p1I+eQj
      AX+CYkfzagh2D4GGUjj7/M1+wq1VzAwt4PJI6B8Ih56/N0wxk8YoFkqh0qZJfm6KVDxHPpml
      mH8QuRnobCe6vQvVJjB3tY/apw7Q+Ow+lm724Qj7MHSB8MZmdB3C7fWsTMdpOLKTWEeYpYnk
      Y4fdNE3ILrE8niAfT1HUCzj+//bO9LuN60zzP1ShsO8ECRAgCXAFN5EiKdGydkWSJcdyHMvp
      JJ3TPWe658P0/EXzD8zpOePOOI7bS2TLsWNLliVblqyN4iKJG0gCJIh9qypU9YeipSiSN9np
      JG0+Xwpg1d3fewu8932fpzmApjZo2VpA89PTtB4+QvuRp7BaRDZmFmhUKmiK+tB+P4AuWmnq
      bn0oj0d2gb5wb/7iKtpsaPUatqYASqkMusE5rdbqxr1aDcFuXM0uN4KuUi9VMTudCLqKXDEO
      JmzBAPXMpvEMKvXiFyuuCVvQbxwwKTIaImYRVFXH0eSlmsmi62APBlCLRZSajOTxYNLk+8zE
      ot2GVq2hmwTsTT7quRw6IiYaaF94LZoEYwUvVdDkOggSgqmBpovYfU6qmZxBP2M2fPsbuogo
      aDQaGOzGyp/Up8ln8BNtGYdJsmD3Oqhs5IideobMRx8hyw3kUhWTZMHmdVDdyBl9JtcRLRKq
      3MDud1EvVLH5jLeQpqiYBGjIDcw2CbUmY5IkTA0VTXtQTrXUYMffHeT2ax/Sd/oksy+/ilJT
      0BGxB9xUN7IIVitavQ5mC4KuYrLakawi1c3Cg/F22FBrCmaLiFpXt64KZrsVtSobY5PPoyFi
      aihomo5gsWJ126hmjEMxk1nC3uTFhE5tM0dDaWB2uhBFjXqhYrBTu+1UN7IgStjcNqrZIraA
      H7VcQlU0zJLwR+XWMZklTKhoqm7k73NRyWQRzBZsfhe1rfap1RpmlwvRpNFQNdRqHXvQj5zP
      owtmUOpoJjOiqKObzFhsZuSqgs3norqR3d4G/XPAGW2lurKK9mfuWW9vj8ERtLRIdiH99Qm2
      8Qi2J8A2ftD4XslGYj89zn35NpNAaOdXs0sDmMwOdv7LL7A6nuwM4MvQ99Pj309Ggpn48b1f
      qmy4jb9tPGJ1TWM7CXQEyU/fpljQadttsDYnryfpOroLs1Vk5pV3iJ86iV5Mk76TITLWR3Vl
      EbPTRfvhvVjDPmZfOYPZZqXt4NOY7RYcXgu3//97xE4ewiwJyOtrLJy/TmB4FHeLA5PVSd/J
      PaDWufPWOdqPH8ZChZk3P0IMREgcHaShW9n41GA9Dg3FKd2bQ3D7SV64RtfxSeb/cJ3mviCp
      a/ew+HzEjh/E4ZGY/s37dJw8jMUqkHz/PIGd40YgvNNKrVzHYtGZ+fePiD2zH4vVxPzb54gc
      OYAkwfLvz7F+Z5POA0Pc/eDmX2KMtvFnxCNvAE+0hczN22zeS9H7wjGUYonW/bsRNYX0tRnE
      YAx/yIq72cXddz8ldmCUmd+cIZfMApC69Anp5SqBNg/eWARvZ5Tl985RqDjw98SQamvMX5xH
      koxdl+ztO6xfv0no4D5W33mPxatrxPf344v6mXnzI6OSDg+m4jqzr79Py8QYvc8fQi4UaT/4
      FJrNR7C7g0BPK/6BBFpuc6slOsn3z1FRXbSMD0P6LrNvXiB2fC/ejhCL73wALg/Jdz9EsXgJ
      T07gD9nQzB7aJhPY3TbWLl2lVpYp37uDu+erT5q38beJR94Ay++fR3K56X3+EFqtwsrHV8je
      XcI7PoattEJ+y425nMrcT2MCBMkMuopSUbD+kdutrtRR5Qa6ptHYTOF/8Zc0LLMsvnfuoXI1
      TcdkNmESRHRNo5J+eMtQLlcM92cdlEKe5IUr5O4uUi7ojP/TMWbfvEzvkV4+/d+G+6sm1w3W
      ZU1D1zVMkqEbjK6jKTINVUOXjboZLtMNctOzJG9nkMwa6tV5XJ09tHc0sXjp3kNbqtv4r4NH
      ToL9g4OEBuIU5+cNN+EfTWLWZQqrOZr645h0jeL8Ag1NoJzaoLxZofPoU+jlHNVClUoyhUmy
      0ihu0tBEatkCpWQK0WrD7HBgtZlQFAFv2Ev23qrBdmbRWf34Fu1HD+BpMjP//lVEq0R5zZhk
      JtGM0DDcn80WkfTtFTr2j6GX8xQWkkhOB6krt5DsdrLzRrCz2W4zyrXZKE7fxN49RGiwnYWz
      50EwU0qmHnome+067sER/PGQ4eq97ylcTU7Wr97CEu3CXN1AdwWRGmXkbxmEvY2/Xvyn7gI5
      uxLExtuplVXkjTWWP7n9n1X0k0MwEzs0weL7F7dfAv8Fsb0Nuo0fNP7CnMvb2MZfFtsTYBs/
      aGxPgG38oLE9Abbxg8b2BNjGDxrbE2AbP2g8MgFa9u2nuWsrLtfqZvjvv5tTWdu+CePDN3SO
      e7h2Iv6utvtfHW3t9zUDvgpf99z9On1nmAiNDSDY3CReOk5goBe72/L1yf4ITSM7sPlchHY8
      rGXl6unG4X4ynbWvQnTfxBPxoZqsDnzt3z5gPrR7J2aXh9Bg7Ful+/7G6FG07t5x//MjJ8Gh
      3UP4wi2sT90lfOBpWtp9VAo1qpkc9kgb5kYZVdFxd3bROt5nBCpsFIke2I3DY6GUzuJLJGgd
      T1BZXaV1zzjr12cAsDjt6GY77Xt3otfL1ItVTFYXodFumof7UXIb6KKD9oO7EBp1pOYIO371
      LJkbt1BqDRL/+Ct8XoXM/CZt+x+UBwYXaHRyCLVUoOtnL+F1ydRUG3olj6U5jCTIODo6CQ3H
      CfTEkCt1apkcjmgUoWHoFAR37iCYaKe8uo5/MEHzjgQmtUqtWKNl9068rT6Kqxt4E32Ed3RS
      TqYx2214hycIdVhJTy2iFIo44wbpVHl1Da2h42zvINgfx9duiGq7YjEiZQz12wAADY9JREFU
      uweprW/gGxxCWV9Bx4Rc12k/uBuzSUGpNVDLJezRdlonElTX0jg64kTGE9Q3M6h11VhUJsfw
      twUorqzj7+umqb+TcnIVXTfRNDpMaChOcWkVR7SDyEQfTX1x6oUqSj6HPRJBUGsERkdo6myh
      lExjaWqhfd9O1HwWTXLQtm8ci6Rhi/cz+Nwk6atT+PoHCPa0Ukqm0HVwx2M09XfjDXsprmzg
      6emhdWcvlVSalrFRCvOLiCIoDZGOg7swKVXs4RC1TA53ZwdaqYim6bhicSK7+qmkUkT2P4XZ
      6cLpsVDOFAlPjhHobKGwkic02ktwuB+9nKMh2GnbP4494EWrlfD0JQh2hykup2gaGaZloIPy
      auoh8Y/2I/txNAcwyeXH/ATSGyiaEZXl9koU8gpStItgxEn7vlHkagNMArH9I6x8cpuWkT5i
      zx2jNH0bMdpHc6wJSWqQW5XpPv5ATA9BpHXXMPGje1i/ch11y5tAcASITXaz8ukU8WP76P3p
      UVKXrhA6eBA1nSQ3N08lVwFdI3d3kfT1GWLPHqU8N43Q2kNLzGA5iB3axdrlG2ga5O4skr4+
      S2BkBKsNXF29eCMtxJ5OsHZ1Dslpw9rWSaDVRdveUdSaCpKdyEgn6Rv3EMxmYkd2k7p0lbZj
      B2neNUmgxYKjZ5i2yR1Eh8OkppL4YmFaJ3dQmE+yeXsWT98ArmiU9vEOVm8s4IsZAnjBsZ3o
      hRQ13UvbZD+d+4dZuXSL3heOGZ0g2Wjd2UfPT46RuXodS7AZX38/ruYgfc/uoZpX6PvJAToO
      jLN2eQqTaLhwNe2axKJmKVUsxJ9O0HXqKLnbs2gaCHYn1ArIJj9tE910Hxtj5ZMpRIcN0Rei
      uauZyOQIzsQwLmuNbFql+8hOek/tZ+XC57jj7bjCTWRuztJx/BCF+SWy07OIoR6iw2HwtBJ/
      ynAQDO/ZTX11Ac3bRutIDx27Oln5zOBcBcDmoXVHnL4XjpL65Cr2cCveRAKnx0Jk1zCNhgYW
      F10HB1i5PI2/qw2r30fu1hTNuyewNTVRX1vB2j1CIBKg8/AOVj++SuyZQ3Q/d5DUpSs0jw4g
      BDtpG2pB90To3JMgOplg7dr8IxQ29oCHtUtX6Hjm8OP/B1j+eIbOHx9BWV8CIHXuIsE9T6PX
      ikaUk64hOD207x9j/coNbE4z+bUcuYU0rmiI4FAvFrMJLI/6+M+++g6uzjjhkQfelfn5JeRi
      ER0RQVeoFSoG/aCko6kq+lZolaaqNGQVm0siv5olt5jGETRoW2ZePYu/r5vmgTia2qDxx0LV
      ggnB4kAp5pALBaq5MumPP6N5zx60UpaGBihV5t75hOaRQbxtQeobGerFMrWKgjscoJYtkL3+
      OaWySD29Ri2dIr+yeb9eRgwqmB1u6pk09fU0ueXM1pqiUFrdoLiwiiPSipzfRC7k0fSHu98s
      6pQ3i6zfvAMmEOwOTJqCWsqzfOEmM6+eJTDQQ1Oi4/5A5hdWKSwmsfp9FO/NU84YRARml4fm
      wR5ENAS7E61SRCmVqGQKbH5+De/IOKZ6EcnvpTCfpLSYRAo0oStV5FKJjdsLuNrbCHRH0VQF
      XW2gKQqWpgBKPk95/g7pOUM/TJerlFJZCotpXB1R6usp5NwmuvDwz0GT3qCWL7Nx6w7L568R
      PbIfNbtqhKJanSi5DHIuy+a9FLX1daq5EmpNxhrwExzsRlcbCGYThYVl5FKJRgNqJYWOQ5NU
      V5aQfAHkXJ7K/BzpuVVmXz9P83A//ljLQ/WoZzaRSxWUqvLoBJCLZepr93B1d5G8NINcKIJS
      Qgx3snn5sy2DkjBbjOB4e5OfhfM3GPj5SeJjYVamN7C67LgiPtSiglzYCnjWdeRCmeDIEJ7I
      A1lTXVMMWSBdp14okbq9QuL0MziFAoXNOqIncJ/ht7ySInpgkqXz1+n/+bPExyIkrxmTNLRr
      FFeoCdEsUF5NEd0/SeHOAvFTJ4mMxKln0zSkJnpfOIrVLqBVckiRTjavXt+yPguRPaNGbKuu
      Yw210vP8MYTCOosfXMTV3UdwsIv68gxiOEHipRO4g07kQgldkZGrMmq5THVlHnwxEi+dxBPa
      khg1mYkdO0D30WGW3r1AXXfT99JJCjPTKKUymtpALlZYvXaPgZ+doPPAKGq5jLyRIrdeIzjY
      g9VlJTw5hrM5cD9ufu3CZdpOHCPx46dYvnBti2TXgOhwIDls2JucqMU85aqVvheO4vTZ0ZUK
      DclN5tpN1i9+RsvhwwycPkjyg0vkVsokXnyG8HAMm8+LxesBdLRKEVt7N8riFKZAG8GhHgST
      sTDpgoXOk4eIT8ZYOPsRmqeNxEvPkr1xHblUQm8oyKUq6ekk/S+doGPPIOrmCu7EAGuXjBgL
      vZiiLjTRd/okgXaD1QFALpSQ3G7MdjtWuxlN15G34snlQgmr24HW0DC7PJRvfYYQ7CA41Isg
      CET3jWEPeg25pqN7H/SNJ0DvC8dRs+lv5gvkG+infaKL6//nTcP+PWFG/26S1c/vEeyNcuP/
      /u7rsvirg39wgOjOGDf+9XF1F+h78Qgzv3n3eymr7cQzZD58m2rle8nurw6dp55h+czbKF9B
      rPGnCI6O0NLbzK1ff7c+Hvrvv2Dzxk28/QmWfvsq5WLjsc9ZfR7qucIjf/9GE0Byu9HqFRry
      g8xFhx2LzUI9XzQE3/7GIHncaNUKDeXxHSZaLTTq8mPvfVsIFgua/P3k9dcI0WJ5iCLlm8Di
      9aCWSw9YO54QJrOE1eOkUamg1L59H3+jcwClWHzI+C0eF41Klepm/rHGL7ld3ymG9guqxSdL
      6/ya+0beSqH4pcYPGMYvSni7O/B1td2nZXwSfGH8kuvx/fIk7RWsdiTb9xtH/aTj9oXxf3k7
      TFh9D4+LnC98Z+MXrDZEUaO2mftWxm/1uR/k8SQF95x6IKqQOH3ikfuR40dwPPEWtkDPqYNP
      mFSi58dfrg0G0HnqR1/Z6M7TJ+7rjEneCD0nx7E3Bxn+pxcRv8I4okd/hNPz1QYZ2jv5uH2B
      h/rzm0KwObDYv92Zw9eh4+ihLz0/edw4/ykebYeDxOn9gIDN73lckofQe/rENzqjsHcN0T7a
      hisxSri36RukeBg2/wN+1EeD4neOEuhoxuG1kLxboa3TimoJsPbuW3gnDiCoZQIdhtCb5Gsi
      PDFEdmoKMRDF1ezGTI0KYHb76X92lLsfTtNzdCcmq5W5l1+jXtNomdyFt9WP1apz4+WzIEj0
      //IUuqqQvXoVAEe8h659CRAt3H3tHbpOP4ucLbB09j3Chw4jWQTK83M4+0YQGhUWzrxHtWSs
      KL7hESKDEQSrxPS/vU3Pz55Dq9cpzU4ZHRhuo3VHK3PvfIJJstHzkyNIDifZK5cJTwyhLc6z
      8Ok0AEqpRG0zTz1fxmRxMPSLkzTqMtlrV3EmRhB1hdzMNKHxYVxilpX5Gh3jcUySxNwb5xj9
      5xfZnFtBqGeYv3gZfFFGnh2nlisw9/of0DSwBkN0P3cET9jDzd98TOLUHhoNE8l3f09o79PM
      vHKGxOkTpGbWiAyEqWU2SK+Bp7HMwP/4B3LTd7E5YOnaKpHBCNbmFpJnz7I+lyLx336OvrmB
      tzdO/u4CzlCAWy+fJX7sKSw+P4uvvUbX3/+K0twUCGAJtBAb62bpsyXiewcQbRLLH90gPDFE
      +tPPyC6uE3/+OZxOneTF67RO7sBktrD01hkAPH19hAdjOJvczJ+fIzwxSvKDGcJj3YR3jTHz
      6zfp/slxMrNJWhJRzGadW78+i+j2E54Yojg9jRiK4fLZMDWq3P7tBwB0n34eMzLKZgrV10Ok
      TaF8LkV4zx7cY1byn51HCPXi8FhQsuvorhB2t5n1G3eJTvRSyxeY+e376DqExgYRm2PEBtyP
      Loal5VXkUhlnqBlBspB87w9Mv3MFfyyCzdZg9rXfk1004nWVXMbQ25papLCYRC4UcUVbQTCz
      43/9I7lr12g9tAdqVVQZPGFj5hWXVpCLJZwRg6LPEumisXyL6ZdfZ+PeOgBtewaY+tc3mDl7
      k+h4nEoqQ3FxiYbJQ3hnHLVaw9UaQtDqTP/6d1QL9fttiOyIcevl37F4PUXsR/uo3/mc6X97
      E+/gIKLNzdi//IzUp8buj67K5O+tUM/LuNs8hm7YlvGDIdkj2myYRAnfyDD5yxe4/fIZmnYO
      U9vYpJJep7yWYePmLMlL14mM9zD1/97i3sVFWne0UZibZfbVtxH9QeqbeRpyjcp6ltzd5fsR
      ZnImzZ033qNc1YnsGmHhjTNM/fZDIruHMduMVV60WVFKRSqZLLmFVUyShGgWqK4uM/fvZ9FF
      B56OKKlLl6lsligkt2Kq1Rp3Xv89uZUN7r3xLvlUBUGrkF9eR1HNeFs91NZWmH3jHJpoY/R/
      /pLM5zeI7N+NrsqoWDFVN1i/ObvFswqCoDH36ltIHb1YRUPc2t1mLIqV1TS1XBFrIEDp3j3W
      b05R2igj2izkUmX88Simep7ogV006jKCx4NFElELWdZvzpK6OY837GH6lTOoZhcWqwjWAFY2
      mX7lDNbWDjZvzbL28RVUTWftwkWmXjuPLxYhuncUtS7jaAlilkzMvfI7sgspyhtZcneW7ve3
      2WZFkCys/OFD/gOJY7kEFFb3ZAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Invent vs. MOS Population Correlations' width='192'>
      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
      5xpLABbnmv8H4TID1oCZR9oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Inventory, MOS - metro' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Inventory, MOS -cities' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MC - Transition' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MOS Metro' width='192'>
      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
      iiJLZLM5TlwcpHMkyUQig2E7KBJ4NRUkme1NlaQyBWR3rojLZ7jpUIiG6nKMXIY5S4AtKBaK
      BIJ+Dnc0MjBrECLNuf5Z/KEQViHH1Nz81MpkpgBIbGmsYDaRJm86zOVNgl4ZSVKQZQkHKBRt
      HtnVwKvHugGIBrwkc0WiAR1V96ILk9mCQ3N5gN6JDJJtUllZipXPM5oq0FZbStfQDF5dRlZV
      cgWbupiPRNbA7/ejCIu5vEGhUKTgtoxdFlgigO8+2HFdg7I8GuSf3zlzwwTKSyNUhjTOD0zf
      VkhCdUUJ6WR63T4fyOWryU2VAAMzWR7b1UD/2DQfnxvCui6Za1OU2NVcyeme8VVy2cVl5bip
      RvDE1CxDk1HePzdEa0M1NVEv08k8HtkgXlnGyMwcoUAAx3bIZ9Nsa62jPl7K6a4JWqsipObm
      cBSNcxM59lT5KQl5uTg4STxeSVB1ePtkH+5932Ut+NLNwqbyAO+d6aO2Ikh5dT2VYY2YT0cW
      Nh+e76MiVsLA6CSDGZsHW0p5+0wvZbESIgEPsqqjOyaWpFAWDdNeW4qJgu/mIpJcXFacmxbA
      lTDpy+NpHtzZRHf/GPlCll8fH8XIzc3/LuYjShNzeebmsnzYO81DO5sZn5jGEAr7G0vJWoJC
      0cS2TDqHZnFMg/zn1qlcXFaPdTUhxsXlTrOk8rGppozassiSFWTZjah0+eqyRADvneldKz9c
      XNYEd2zUZUPjCsBlQ+MKwGVD4wrAZUPjCsBlQ+MKwGVD4wrAZUPjCsBlQ+MKwGVD4wrAZUPj
      CsBlQ+MKwGVD4wrAZUPjCsBlQ+MKwGVD4wrAZUPjCsBlQ+MKwGVD4wrAZUPjCsBlQ+MKwGVD
      4wrAZUPjCsBlQ+MKwGVD4wrAZUPjCsBlQ+MKwGVD4wrAZUPjCsBlQ+MKwGVD4wrAZUPjCsBl
      Q+MKwGVD4wrAZUNz9RVJQiC7b+t12WAseUfY5vRHa+WHi8ua4FaBXDY0rgBcNjRLBNCw7QA/
      fPrhqz96o/zd3/zFTSYlUVNTDcC9jz5Duf8WvJEUvv39f82W5pqF7zKPfuPbPP/88/zgz54j
      7NNuIVHQ/RU8+ejBL1zv4aef58C2xsXvNW17+dFzTy67bm1t7S358lkqW3ZyYFsDda3txAIe
      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
      CoHjuz+EAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Median Sale Price' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Metro - Median Sale Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Metro Regions - Transition' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Listings Sum' width='192'>
      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
      vYGxzi/ovDq7qsxVcwBRkrCnppGekcUv//bvEJRqjh07xhNPPIEkipw83cyW4nSaOq8R8bnR
      WjKwqsNcd86w/6mjFGfZAfBMjfDpidMIGgNHnnuWi02fMTg0wOiUh4rCZfv69kcP0HryOPk/
      /fFK/V7XOB999iUqg5VnjzzJ2eZmDh86yBcfvc/2x55jztGFZCuhKOP2LPFSPMaoc5zcNBPv
      /fETRIWafYcfp/34Cc46/BRm2ZkcGWFTSSEf/OkjBDGOezHECz95icjcGF+ebUep0pKUbGZX
      fSkff9aEQq3niaePkGpe7glD/gX++O7bzAdjHHn+KF0tp9n72BMo4yGamts4dOBRBEHJ8888
      xgcfHcMUm+Wp514GKc6ZpmM4nG7qd+2juiSbc6e/4OroJGkFFTy+q4qPTzQRCQR45LEjZNtX
      WyOMyWbS0lJRiz7U/W4kMc7ZpmNcdc5SVr2DR7ZWcPr4x1yfnqOgfAvZSVHOnj2LzpLB84/v
      5vgnHzE9H2Drrn1U5pr44NMmiIXxR5W89NKL6NVKlJok/u2/+yvUKhXB0kKciwGudPbzyl//
      HQaVgr01OXQNT9NYU8vJk8sN07sYwY+T9qkIu3bvue2ZlNQ2UqZUohDAYlDhnXKgSttERXEe
      FOdy8X//I7ond1NRms/5UQABvV6P0WRCMJlI8kmrynvi6Muo1GrEqJ/PW/q4cuE0Ow4/T05m
      Bi+89CL/9GYTf/OLFymtVyIIYElSg0LL0ReeRxLjmM0mpK/JuOrVVFK/n6osDSebvuDshS4k
      YHDw5ltWwnH1KsGFWaZ9Ii//xauMXG6hvP5Rfn50P8c/P7d8lCTy9jt/5OjLP+Pp/Vt5+92P
      2XPoEPVbG1caP4BCqeXR+hKa23tXyn/7X9/nyI9fYV9dNp82XcQ1dg1/JMLs9Ci9Q046unpI
      tZtYCzEeY2jYgaOng4zKXbzy0xewGA0cOrSfhr2PU1OWt3wtUpxLl/s59PTzHKzNpeWyg48+
      +4IXfvISu6sziWps9LSfp2b3k/zk6NMYNMqVOqKxOIefOcpzh3bw3ofH0MUX6RtxMTl8ibDq
      K6W0Zpdii4wSSC4kx5bE+EAbk2ELr776M9pPHSMYCZGWX8FPf/JjBtvPsRQNcaalncefffG2
      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
      /wPmmjTdM3yYmAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Permits' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Price vs. CPI' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z3hUV5ao/Z7KqpJUkko5IiEhEBKIYLLBYGNwzjh2sN3TYVLPnTvdc6d7
      5vbM3Lnz3ck9M51m3NHG3bbbdjticpQQklDOOedQpVLlqnPO96MQIECoJAqQbb3PwyOqap+9
      9jlnrx3WXnttoXJUlllkkc8pittdgEUWuZ2oLv13sSNYZL4IfFrrj+ryD1khzttVjkU+pbgl
      gW53CBpBJk3nut3FmTOLQ6BFPtcsKsAin2umDYFkWab45CfUtg8io+Dxfc9gCtPNPVdZZmBw
      iISEeCrPHsGYuYX0WMO0JIMtFez/uBCT0YAoCTz8xD5iI/TTs5EkBodHSIiPm2MBfPzk3/6d
      fV//JlEh/ls89v7r6DO2sDkvfcarThw4wKb791BbWsUdd6wNUJZM3flCiiqbEBQK7r7/EZbE
      R01P4rHz3pGzPPrA7mvm0F1fwttHzxMZFoKEkkee3Ef0Zc+9pqKUrLw70KmuefkN4OPAgePc
      f/+9QclNlrx88v67DJjtqHTh7HvqMULUynkUy83AuI2EWBOffPwBu+59AO0V+ZSfPsDZhgEM
      GgWCSs/TzzxFiHp6ey55HIxYPcRFR8woatoVfY3FtNtC+crLL/GFp+7jjTffRpblq/5JkjTt
      M0z99SuRLPn45NAhZFlmYmwYh9t38ZopXPYJcjbs4sUXX+S5x3fxwYeHL14/lVbyuTl45Kj/
      umnypqe7GhnH5CjFpbX+B+FzU11ZwZjVcelaWb44bZv6PDw0hISC9evXXCXjyn+XPWVOlTby
      8lde5kvPP0VrQ/3V5ZNE+geHZyy3wzpO/ra9vPjiizyxZxMfHzwxTVZu/nq0yquvnekZTPv+
      yrL7EyDLErIsMTQ4NGPlmCtnj3xAeMZ6Xn7pJXavX8J7BwvmV38co3xyqhRZlhkcHECUrr5P
      y+gg9zzyPC+++CLb8+I4VlR72b3783Ob+zhaVHXZc7j62U1rU4rPVbH7ua8CoAuP5WtffgZZ
      Guc7//OfWHlHHrvve4hj770BWgOTTh9feuFxfv3GR7z0xaf4u7/9e/7ie3/Fe6+/SkpmBjXV
      1Rw9U4pGljh55GNqdBIWj5qvf/npK16USG9nB+GRJoa6GvnkZAkKyYMhfhlLwtzUVFVyKiuH
      9AiZQ2cq0Sh8rNv5EK6ucqq6xtEoYO+j+4gN1057GRFJyxjraUAmn8G2GuLScwEY7Wnm7U9O
      EaJRkr3mTpbHKtn/7iGiTVHUt3TzIF5+8uNX+cqLT/Hmm79DUCsxOwV+75n7+Zv/+w/k56+l
      t6eHp1/6fZKi9KDQkJVi4mxJJRvW5nH3zm34XJO89dY7oFQxZpP4gy89CoDHYeG1/W+g1RsI
      j13CQ/feiXDFs+ju6iQiysSv//tfcWrjyVqxkr66s9z/3DcoOfwWgxNebDYHz37py5QeeY/B
      SQ9uj8zzLzyHXqOcJnvcJvKNLzzId/72X1m7ZhV9Pd08+eVvMNZUxPnGPsJDNYza3UGq/tDU
      NcoLuzMASFy2lqcyZIbazvPD10+QvTyLh/ds44033sYQGoqkMfLglkyOVI/z6LZ0/umVj/jO
      n36V/a+9SppJQ01ZI6XZ6eB18NH77+F2WNBGZ7Lvwbum1R9R9NHZ2UtUZjoN5Wc5X9+B0zpK
      zpYHcLScorJ6iJVZqXiHm6ntGMLrcvHIM1+k9MjbmF3C9B7AK4JaBbJ3kjf2v85//PerAMSk
      LuMLzz8Pw/UYMjbw/PPPc1duPMUNo2gVXiaH28jKyqKp14JPHcLGDZtZtWo1u7dvAEHBjnvu
      55nnnkcj2ac9sOLTh3nlP/+ZD0oHefyBbcSmLOPBPTtJiI+ju7ONNRvvZNXqNdy1aQ2fHDzG
      6rX55OatpODkSVQaHUuXZfPwY08QE6a56mUIChUpkVr6LC7K6ztZl+sf+hw9eJBleWvIy8ul
      uPA0Z8+c4qFnXuSZZ55mZWbKxetVunAef+IRUpMSGevvwwukL89n39NPs2fzSnpHLFOS2P3g
      Y6zOTqHozAmOnSlBqQ3lsccfJTU5EctAH1O2kZqiE2hjM8jJWUlrdSku8VJ5C48f4DdvvImF
      aB7cdQeyoOKBx55ix8Z8AHz2MXqsSr74hRd46YvPonabKWvqJTcnhzidi/ONvf5ya0N57PHH
      /LKH+3CJkJqdx9NPP82D21fTPWihtLaNl176Mk8//SQmw/SG40YRBLCO9PD6/v28+tYHAGSv
      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
      +QTIs6b5CxrbOIONGnq7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Price vs. Income' width='192'>
      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
      7/4HAZCMFrbdsZ879j+IryKE/cqiOF3XURQVo9lG27ZdNLduQpbNtHVtRxZEJNmAvypEoKYe
      s8WKIEo0tG9hy869KKUSmg41jc2IkoiiKNeG3ewuH5t23EUutQo6qKqC019De2cHF073oJQ2
      /KpXwlhdXlxuH1opR3R1GV1XWVtbQ5bMTI/0YzXoqKINi81Jx469NDS2UlXXzMLcCAUFZIOZ
      5clhFM2C1+3cyOOOO9BUDVVRr5X31Zlbn8/J8SOn8Dllkol11qOx696LpqloV9bxaJqKqmrX
      3VeUEpr22Sqermm/zeUTczvaNf8f1xw3ZqT1azPTXzSdjfg2Jl+1T/j5bXNEsPGciqL8VvfP
      4/+GFsCaWrt2WTJZKZlsJOKrGGQZQbZQyCWRBIH4eora+nqmRwexe3wYZBm1VCCfL2BzOjFa
      7BTzWTzeAJqqMD06iL+qHqWQJpfLYXO4kIwWcuurSGYH/kCA2NoKXn8FAInYKk63j0QiCqpK
      Ll+iIljBzMQYda2bMMjStXymE1HMDjeZZAJZEjGYbCzOjOGvbqSQjqNqOnaPD5NBZmZshOqm
      dkwmI+HJEfL5PNWNbRuVOhqntr6embFhKmqbyKdiGG1u1pfn8VbWoSh5HHYXqfU1VlZXaWnb
      RDqVxOn2Eo+uYDGZUJAxGUTmpiepaWyhWChikCAyP4/RIHDpwgVsRpW67QcQ8yn81Y0Us+uk
      Uil8wVoMss5iOIzN6UXUMgwNTrNr705KuoCuaDg97mvP3fPuy9R3dtNz+BCPPPYIPR+e4cln
      vsmJV3+GbHMRK8oY1AL7v/IIU2Oj1DU0IBsMFBTQcuskkkmM9gBTg+fo7Owgp1vwu01MToZp
      39TO+MglUgmVygorRk8t471HqWjcSnp5nJbue4nMTtPe1cXAqUPUbd1P+PIpmrbtYnpsnKbm
      BjA6UHJJ1pfDmLy15JNrmA2wnoXqoJPw/BKh2mbm+94l59pOkzvPsd5x7trRgWr0YJNLrM0M
      oFffid+ik4mGsfuqOPb2qzz8rX9B35HfIDuC5Io6O7a2E1lLk5i5hKttD5ZSHLO3jmCF91p5
      HX7l57hDNeQUA821PiRnZXkt0B8TXdeJzIxTUqG+ufUzhyeXZifwVjViNEif6n7uw2Ps3neA
      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
    </thumbnail>
    <thumbnail height='192' name='Production - Summary' width='192'>
      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
      E/23+T86Gr/T0LAPAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Production - Transition' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Relocation - Comparison' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Relocation - Comparison (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Relocation - Comparison (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Relocation - Comparison (4)' width='192'>
      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
      NLE2/4xrU3e45mvlg/fe4969d3jwwQo3rzXwZHqR62+9TTR+tqzRgmjGbq3I4eNXbuCyWTk4
      CDHY18nO1hY7oTDtA2PIJYUmu8j4nZ9HKZdJ7AXwNXux262EIlncLgcHySxuo5m7d4dRpByK
      6MSg5JibW0QDmnpGiW7NsXlYwGkXGR3qQD+6oV4lyLc1NIOlysJb9sbq2p/XphZjXKBfBuGz
      sbp+yUtVLtB/6RYHQT+VCl2gqir681vIYMZuLFMoVxvjIeB1WXg6PUt3dwd5WaexsQGAyZE+
      EnmNK1fGkXMpZtd36enswGEVyaTS9A/0U5SKWG1WPO19NNoEBEEgmUjiavBhM1WiVlS1jGgy
      IRiNOJ1uejq7MTe2MdhW3++v49V46Q3Q3H+ZoVY727Kb3XCSu3fuoMpZuvp66O50E5Hc+JfO
      XktLkws0dg5zxehgP5rm1vUrbK5v0N3dQ0kpg2AguLnM2toGk5MTlEpJ1GIeSRNwGowIgsDK
      2jpNLhuHkSjbsV0au/qQJAmTyUyxKNE2MEFqb5X43gb9U7e53QFbm9vMPvwhO+Eco/3tECkw
      0NMBBhG/vxKnUyzJaPLZlxpGo7GqteZ5bJ6XlqqmEmct/KpUXD97lU/9Qg+SfnJ4Y4Phmrv6
      6fK5QFOYWfjodC2iyYSqKFVdcofDgcfjYX//7DWEr169ytxcdYX0qrVpbW1FEAQODw/fKL/6
      +vpIJpNVEdRa+HVeDvB8jAsPhhMbu/mHt7r5xg8eMzE2xPLy6ivbmZ0+RjqcJFUH5Zif8N42
      0ee1tQ0mJkcHWFpZO27f3DfJ5Rb4ydweoyMdiGqZ/YyOVQ6zG82eybf/+iu/hZI9Owm22mz8
      Sv8Xztz+PDaiSQQEylXsttTCr58mwf/f42+zur9V1ZhvIi58AgiiCZu7mb62Bux2Ozem7mAz
      6UiFIomigChFMNsdLK9s4Gi5TJMu8STZyL273RTzOSzeDuL7AVxuLzeuXWJ6thK3bzKZ8LS2
      0uJJYUYGdyfXm1W+9+4mtpY+vjTZicHmIZbMEQ9t0tLVQ1nK82Rm4di3Vk8TmKslwQ3VX4Tz
      2NRijI/hl81sfX2jzwBqQtW3lp7RN3EDk2ilt6cDuQy5ssB4q4Wey/coxivLkPXdKMmQn56h
      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
    </thumbnail>
    <thumbnail height='192' name='Relocation - Transition' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rent' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sold Above List Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sold Above List Price (3)' width='192'>
      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
      5r+dPaJJGSD30wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sold Above List Price - Metro' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vacancy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z5Bd13Wo+Z14c+6cuxEaORAASZBiFJWTJVmSLVuWw5Nkj+dNza+p+flq
      amqqZqpmahyerLEtK1iiJIsSI0yCCSQikRvogM65b3ffvjmfPD+62QQEUswEpb5fVfc55569
      1153373O2XFtoS/pONSosUERb7UCNWrcSmoGUGNDUzOAGhuaGwxgZXqQlUwZx3G41nf+XQle
      HLtCtqhRySyQK5nvSlaNGu8X8vUXqeUk5VSJSG87ly8O0N7eytTkNN27biM+cgXcIYIuh2Sm
      TH1DPbG2dpLzc1TzCfDUI1TT6KKXLb29LM/Pk5tLsKcrQsHjIz5yDXeoESopCsUKiseHpHpp
      jPqYnYvTs20HU8MDxFo30dzceKvyo8YG4zeqQBKCYzE5Pkf35naunj+DoojMjo0gyS7mxkfI
      pVNYlkVyYRYLSCzMkVhJ097i49rAGMtT4xiAILnYtrmV4dEpHNtGVj3Mjg+TyZfo7WnE8jZT
      zafov3AGCY3p4Wvk8kUEoVYrq/HBcWNpE6CzLcp8SkMRoL6xEcOwCbgMJueWQQBvIIiemcew
      HQbOnyNbKOH2eBGVAKGQm2BD0/prJdK+HSopsgtDLKXKIIAsywiCgCzLIECsoRHLUahraiIY
      DLAwPf7B50KNDYtQGweosZG54Q3gOA6Obb/2t2Ybjm1jX3f9dnEcZz3+q3Jv+Ls+revDOq+F
      td+lDh9WHFNnbPAqpXya4YF+Srkk46NjAOSz6RuOq+eZ1Tz5DTmlfA4HqOSTjAwNYa/l23o6
      v3F9PdVCmuHBQey3mbdaMU3/+dMsLiVu0udNsXUW5+exLJv0ytKbpl3OZzFt+030yXBtoP9t
      fQ/pr/+X//bf1q8cmNp2D9l//AHZf/wBgijiuX0/R372j1RLGhfPnmLL9t03FFaASxeO09zS
      Cb+R4asnNi8//Uuu9Z3D5fFx5qVnGb56nnAswrNHnqI+6uXMiZexbIdYfQNXzjzHxPAg6UyG
      44//hC0H78bSKjzy/b8HQSRS34IogG3p9Pe9gkdRkd3etbSdN9Tt1WtBEN5y5nwQWKUkKwXw
      uiRkI0PK8JONj9Pa2cPV86fXj7nEPAvxBKIkcOHor1CizcxeuwyKn4WxK/RfvkLXth1ceOl5
      ujd3k1iY5MXnTxH0iUyOjTMzcJq86SEzP0LZgKXJIYpVm3AkwPmTJ9iyuZ34co74eD+mqDA1
      cInlZAajlGJ+YZlqpYRHtojHl5gaGcIfayIzMYC7awfTl86ALKOis7SUYHZ6GrOUYW5+EYwi
      I4PXsGwTty/IytIC/mAInDJjA+PUtbRw+rEf4WvbydL4ZabHx0gvL2CKLmaH+zAFF9OD59A0
      B0k0udZ3CVlVmRi8DLLMSN8VcoUS9Q31nD9xjN5tm5iLp1meHKSo2azMDjM9MUZ6eR7LtLg2
      OMjS/BSLC4s4pn5jL9Ab42DZJggip44+gqx6UdwKM5Nz7DpwBxNDfcQCIUaGhzEMA0m0qa9v
      oqyZ3Puxz3Dvp/6QF5/4KTNjl7ntwS+Qnb5M1XITDIe5+sopfHWtLMdn2Lp9J3sPf4zhyydA
      DdC9afNrGjgOgXCMiSvHSGQ0Orp7GBu8QnZ2HDEawqwqzI8NEq2rZ9u+w6wszpLJ5CjkFwl7
      fExPz+CIAg99+kvvU1F+d4TCEWZH+gi0t9x4Y81wDUdCtfJMTOapb+3BKcyRKjlUB04hRTbR
      2rL6dNx/x52MDPQRrG+mvasbxzTJr8zhizQRcRv0ja0QLWp4RBPbVQZ0ZDWIL9pCOn6apYxO
      2RxBlXw4xTRF2U+1Avl0gqi7jUSyhFmtoOsmYDHefxlZVpifniLQ1cj8zDLdu+9k4Niv8ATr
      cLs60VJLjFYKhBvaScTnaWptBzHAbXcfJrcwhBjrZOLqZYI+kaDfS0vvTi49+TOq4S2UzQlE
      W8BVTHJ1eYG77rmffCKO7FKYHe5DjWyjmJ4GdiCrLryhJgKLJ1mJbiMdH0BSVLxuNz179zBy
      7BlcnXfjZMZRFYH5mam3NhDmDoTYf9eDKC6HctXg4EceIJPK0tu7hdmJYepa2xEcnc7tB/Ao
      IqInxP67HkCv5HBsmxcf/wkHH/gCLS0tFDJp8rk0voAPcPAFA2zbfyeVYh6AvtNHUfyNbNu5
      c60ArB5aurbQtXkr3dsP4RYdsqkEje3tuFQVUZLZc/h+WjbtZNOWXpKJOLYjYOg6da3tWHoZ
      SfXQ0NT+7krp+8js+CAmKn6/b/2zukiAi6ePUdfeSyAUxhuKEI5ECEWC2EoUn2zRvGUvdn6B
      ZDoHDixMT4CkoHpD2NUC6VQSSXUTjUYpaAKNER/1za24vX6qpSLgIeizuXTqGEKwnaBboKGl
      g0AohD8Uwe32YlTLBP0ehofH8Hq8uBWRUrmCyx9ClQRcHh9hv4ux8SkCkTq8boWOTVsIxBrR
      ChlEVaGpvpHhvrMIqouZiYn175gp2jzwyc/RVB/AHwrjDYSQRYnm3gOEXDYNLe1E6hrwBsN0
      drRy5ZXjxBeXMQwLjz9IIOAlEIoAEPJ7uHT6RXRfJ6W5q6j+KMFQGG8ojCRI+KP1BHwuguEI
      vkCQ+lj4xkaw4zhkv/vDdeXct+/Hc2gf1y6eQDMc3P4w4YCbmZlZtu3ex8S1q/jDDciCQSDa
      xMLkNdz+KC6Ph86ezcyMX6O9u5tXjh0jEAyxedd+Rq+cQfZGaG1uZKj/KnsO3sHI1YuEG9vZ
      3Ludy6deQJJd1Le1M3utn5bePbQ0N3P+5aN4A2FidTESS8u09GxjeXYUvz+AGvQTa+hieW6a
      gM9DsZgnvZJEcXvxuATCda3MjQ8RiDWzeduO9780vw1srUR//yA79h1EkUUq+RQjo1PsO3jw
      Vqu2Iaj1At1ibNtCt8EtSzc0Ut+oreI4NmXdwqfKlHQdn8tFRdfxqOra/Q+urVPSNLyqup6W
      bhiIkowsCpQ0HZ9rVadCuUTZEmjwe/lNtTKFAnndoi0aIpHJYiDSFgmyks3h9wfwKRK5coWA
      x0OmkMft8eFTpJt00XQNS5CRsUgUq7SGA8TTWerDIXTDwKOIVAwbUZJxbBOPIjOfKdzYCHYc
      h8GRaRLJLIlkFgCf10MqsYjXFyC5soTX5+f68HPj19AtG4/bxdhAH55gBK2co1w1UCSBscEr
      ePxhFEUmuThLKpkiEAyyFJ8jEAxTzKWYHB4il88TjdWty107+S0FYbXR+2Fr1L5dDL3K0FIa
      w7QYmF3A0KvEKxblUoF0WQPbZDFfwrJMZMXFSiaFqHowtTIZzSaTzzOTzuOWYCFbJJFJUbAE
      8sUiJdMm6FZZyeZIFKtgGSzmyziWQTybxwIWMzkAqhZUNG29QAbdKiu5HIu5Ag6wkM5hWTaC
      LJMrVZAck3ihysDcAn63ykI6h6ZrLBZKOILIci6HrusUDAtFkkjl89iOTTyTxREllrI5CppJ
      plKhIxJgdDmNblo0eyT64mnCwRDxZIqQS+L05DxddVGmlpfRLAGXaDOXzqKZNiv5ArmqjqOX
      SJoyK9kMrZEQC8kUkWCI6ZUUtqExmSnRGgkyFo9TtgQy+TzNkcDNjeD/4x9+un7+h5+5jy99
      +h4unnyWj3/pm5x/5Rj33Ptx4vPzbN6+h1J2Cc0S6T/xLAGfi959d3P86K/Ztq2beFpEz0yz
      69D9gINjWywuLFDMzGMhMnDuNJ/7Wiczo32o4W7aOlrIJBbI5IqYuVnmsw6drQ2E6+pJLyfw
      h8JYtkBjYz2ToyPUNTbw4tHH+MyXv8n85Dhd23ajKm+xTf8hIxYMUi4XqQsGaPC5KMoeKqUC
      PskmVdGxLJtQLIJoGxRMkSZVYjRVoSPiYdnxEPGCZTuUq2XcLhdRr5tcwSCZL9Ia8pOpaHTX
      R+mfW8CrqCwbIj0NYUYXM8gSVLQqugi2UUFybBxHxAGShRI2Aol8ka1NMUbjCZazOWLROmYy
      OTY1NWAYaz0plkbKUOhurGMxmQRHZyatEfC6CIa9qF4/6XKJjoCbFePG7kxVUZEFyJVKxCWJ
      iFsh5FYoyBJ9c4u4JJhKJKlaAi7bZDmvY1sWtvhaEzbk8ZDXHXKlMpOLS5RQ6FBlFFHA71JZ
      KJWQBAEJB0VR0C0dt6K+/dmg508+S7lURNN1/JEmXKJGuK4JrVqlsakV2a3Q1NEF2CwuzjE1
      fIUrF19BlGQ6e7oplCzaOzvx+rxrEh2mh/vJ5/KcPXaEciFLMByjpb2DiWtXOPvSU3h9Apcv
      X2XgyjkWF2YppOcZHp2iqaODM889ysrSHCePPfNOy98tRRAk3LKEV1VRJTBFiXKlSr5UIqvb
      hFwKOBbLuRzxXJH2WJhSuUQsHMaleqiUCxQ0k2JVQxBFAi6VTLFIUTeRJYmlXB6XJDCVytIQ
      9COrKmGPCwERr0tBlSQsR6BYKqBZDrIkoZkmy7k8hmUhiyIBt4vx5RR1kRiCKBCSbYL+ICIg
      CQ6pchUHEY8iEk+l8Ho8eN0+6v0qQa8HRXHRHPDiVyRm0jkkWaG7PkZ7JICMw/jyCiG/n6Zw
      hE0NMTpjQSaXV5AUhds3dbOpvo6Ix0XI6yFdKFLUDARZQXCguz5GZzREtqJRqWq0hIOIskp3
      xMfo0goet4e84bC7McR8Oks02oBk6US9LkaXEm+tG1SSBBJLcfRKlX2H72N5coDJqUnq/QIT
      U3Hu+Mg9XDz5NIvzM1iaiV6toms60Ug9HZu3cW3oKqZR5tgzR3jo81/FNg30ahXLsgCBji3b
      8fm87Lr9AYYvnUTs7MFUV1XzRaKEohHqmizyqXlGB87T2NpOpWBh6Dqyy8OWPQfQNeN9LKbv
      I5KMRzbw+D2AB4BGBbxSmIDHBUDrWl0awDR1kGRc2JQMm7ZYeP1e3drRv/5vFd918UNrR820
      aAi+1uMU8XtvCuNzqVQt8LvdhLxuwKGzPoYN+BQoahpNkdfSvxEV1h5yum2DrRPy+/G7XGiO
      RVFbfQtcH9+neChqGgDt0VUtippG0LeaL80uleZwgEK5TKpUxe9+LbzHF6DzNzRojShrZwo2
      EPatlinv2ndtcblv7gUanZxfFxCLBKmLhrBMjamRazR1bkG0deILC/Rs20k5l2RxfgFBVunZ
      upWp4UFae7aRWZ6jXNFp7+pkdmqS7q07cSyNqdEREAQisToyyRVae7biWBrxmRlExUUsFiab
      K9LR1cXs1BShcAhRlvD7/ZQrJpap4Zg6hWKJUDhGMZsk2thCfGaS9s3bUBWFGjXeDrVeoBob
      mtrc4xobmpoB1NjQ1AygxoamZgA1NjQ1A7jFWOU0p19+CcO0OfnUwyQSKxw7+jQA1/ourB9t
      28I0TQqZFEuzo5Q1C8sysR0H2zKZHrqKDkz2n+PSqReYjy8xMzGBY9uYpkl+eY5UvrQ6gGTb
      2JaJZa12RY72nebiyeeZjyevk2lhmSaObWGtxXl1TYFpGjiOQ2ZuiBMvHuPMy8cwLXt93YZl
      WTivHl8Nb792fxWTs888QbaicfrpX1Gsmthrulrmqg6WZWLbDrZtUcmnqRrWetqWaayHWe1O
      X/3uF08dY3pmAdsy19aQWOsynevCm+bq/d/NodPfIxzLINzQTnpmAFNQEd1h/N7VfvtiIbd+
      PH7klziOiMcfo1qJ05CvsrIwjy/go5zPYZQ1mnfsQZQkHEHFq5i89OJpZDTOvPwiXR3t2JE2
      KsvzyL4gWnqOth2H2drbTb5kcfAjD5JbmubE8+fxBSMUE1PYgoxLlfHVd2KWMuze1cPlqxPk
      C2Vuv+8hjGqRqmFBqcilU8fYs7Oby1cmKOMiQIGq4bBp+3b6XjqCr76XXffeR3zoMnsOHQZk
      dt11Ly5Rw+XzMzE8RikxjFGt4m/qwNEq5AsVfKEo+aVxWhobKEohZEzqm9qYG7kMfj+FeAkl
      oPLgpz5LJl/iwN0PUM4tcvK5ZxFVFfQcekUj0t4NVFieyGKLZfyKCzsSqb0BPixksnm0QpLE
      8vL6Z46pkcsksRyFaFMnLc0xDBOiDS0EA25KZQ23KiF7owQC3tWlA5LK1h2bGRmepKWtlcX5
      Obp7evCG6qiLRcjlC3g8XrbuOcjM6BAOEkYlRy4ZZ3pyklKpitvjJtbSRVNDlPbefaTnx9A0
      g0wygRJsprMlwPTkLCDQvWMf9REfum6SSS5j2QJbdu+jmEvj9viIT0/Q09uLYRiUsilKFZ1M
      agUAXzBMfHwEwRMmuzKLP9JEV88WNu0+hGzmKBQruD0eGju2Eg0HqVTKtPVsJb84Tah9G4JV
      oaV7OyGfBwcwqmUK2RWmx0ZRAw2okkMg1kJX1ya27L0dyanQ0rODtq5N9HR2YDtWbRzgVmMW
      E7x86jL3fvRjWFoRyzQ59vxzfPbLX8PUy0yNTdDZuwOjWkbEwjDB5RLJ5jWcSgZPrA2zkKBi
      SjS3t+PoRabGp+jq3UEqPoOiKlQ0m7rGetLJNG7JwlICSEYeXfTR1FiPXs4zOxune2svK3Nj
      uCOtKKKN4FhYpkE6V6Yh5ieZzBFrbGRpZpLWzTsQzRITI6OEmjoIeyWS6RzhSBTVG8Cp5lhO
      FagLe0hlCsTqG0gsLlLf1IRtmQTDUQBKhTxef5ByIYcjiCiSgOT2opVLlDLLKIFGVBkU0cFR
      PMQnx2jt6mZuZpaGpjpE0YNj6/iCYSytxNTEND3bdpBdmkbwxHApApIAitdPtZQF3ICJLIAt
      OjUDqLGxqbUBbjGGrpHSbBp8blYKBQKqjC4oBFUJBxAFAdtxEAUBENC0MllDoMGnMJct0R4O
      EM/maY2EsB2HYqWMonpwSwIIAqIgrDY+HVbXUq/J+s3jqziOsx7v1YX1rxcOHGZSOdyKRGMw
      gOU4FEslJJcHvyIxm8rQHg2DIBBPpcnpJr1NDQisynl1GvtofBFBlPB5fKSyaVRFJuwPkC6W
      UVWVnliIC5Mz7O/pYnIxjtsTIKoKOKoH0TbxKAqL2TzN0fB6fX4lm6Zkq7T4JcaTeSRRIqiK
      FHWTkD/AwkoCt+qi4/WmQ9f4YHEci8VsjqWMQ7laocnvoSJ7mSzlkCUJURCRFRd1PpWgz89s
      psCmpgbmV5JEAn4GFhLotoVHFhhYSBDxugkGHcxqiZRmc0dXCyPxRRTFjWlq6JaDIgrIskRF
      NymbNt1hHyVUHKNCrlikPhqjLRxgfHGJim7gdrmRRNA0g1AwQNWw8QkmQV+Aodl5FFFkPL6I
      zx9Ekqo4joDo6PTPxZFkle2NEQorGSaWlsAyUP0xHKOCLKtYgsj2pgZGFhNUDAO3IjGdyrG3
      o5mFlRTxdApRVrFMg/lMnh3+EIlsBtMDdiVH1RSwHBtVFilUdSKBAHnNwrTLzBmwpakB27LI
      FQurk/hcKh63m97GCKPziVoj+MNAXTCIW5aI+H3E/F6CbhcuRSXsUokGg+haGROJQiFHIBDC
      MjQMUcEtOrhdblyiSLJQpjHow+Ny4ZUENGQ8kkChWgVBJOxRKWs6qiwjSzLtsTCCINMScLFc
      KGFYJkXNoC0WYSmbp1CtUqpWMAQFWXCoD/pQ3V5ml5apD3goWCJRj4uY30euVKI5HMCwbEI+
      P4Jjg+NQ0k1csoRumHTW12E7EPN5uGEJk+NQ1arYiAS9Pra0tLA54iFd1tAsi6phUa6UGJxf
      YkdbC30zC/jcLoJuF9gWiurCJb1WjB3LoFA1qGo6iiSSKFaYT2exEOiIhplKpLBth2SugN/j
      rrUBbjWaYVDQjNV+d8tElBXKmkG2mCccCBJUJVIVnbBbxULApyrohoEkK0gCZIpFHFFGFWyq
      FoTcKkXNwDANPG43kgCi41C2nHVZEY8LRZKoGia5cploIECuWMLrcWObBpYgoUoCsytJDMuh
      s6mBcqVKYzBARddRJRFECVkUyJfLCKJI1bDwqgrlapWg349jrfbZW6KMTxZwRBksg0Q2h+KP
      0OBZrXzkSyUKhk1LKIBmGLjV1Rm9qXwen9ePWxapGgYuWWIxmyfocSOKEhXDxKfIaLqGKcjE
      fG6A1fENQUJyLAwkSuUiiurGr4jEs0Uaw0GSuSyqy0PUo9QMoMbGplYFqrGhqRlAjQ1NzQBq
      bGhqBlBjQ1MzgBobmpoB3GIcx0HXNSzTQKtWsUwTw3hzDxeObVGtVDDNm/dfc65zL//q9GN7
      bcrwdQmja1Us277pnvWbYQHLNLCs1TQN4433fLspndfR+Q3jOw56tYptv7WOSXttuvVqF7K1
      7qLdtq0bnKtZlr2WFzfLvdE9eo0PHKuY4NTpC6Tmx8jlCqhulVPHnmfz1i1kMzn0aoViLsHs
      /DKSYzA1OkywromlgROcH55l9MolYg31yNiUyiVGBgfQc0vkdQm9kCSdKZBKLHFtsJ+Az4vi
      8SEKAlP9rzA2McP01DRLU0PkCmXcLpnF+CL5bIrs8iwaLvxrLklO/PrHJDNLDI0sMN5/gXBD
      I4pgUiprjA9fI9rQhCgInHjmV1RNGVGwUSWHXKHE5MgQ0fomMhOvcPzCJBMD52hqaWZkeBhF
      lnB5VLLpAqmpK/SPTpLLZjj3/FPEWruYGOxDFE2eefIoHa31TM8uIjgGqsfHheNHqW/bRP/Z
      EximiWhXmRyf4NrVPqqlHLIvitte4tS5WRrlRYbTLnKz/Sj+GKV8Gl2r1gzgVmPrJap4CfsV
      9FIOXQ4jGiVauzYxeOks2dQKerXEyOU+koU0Xc0hZlZsPFaGhXQZwTLJplcIuRyGhobJ5kp4
      3SLHnn2e3t5OhgeuoklhjPQkk3NJerf1AjDUP8Dh+z9GR0cHk6PDBBSLoeEh6rv3Mjt8lqWZ
      BdyhGHV1q7M2u3bsR6okmF0qgG1glnIsxuNMDV6kUkqzsFSgqlUpZNO4zSJTc/MklxcZH7yE
      Vs2TyIvE3FUm40UEW8fvdTHTf5myXWFxehYp1ExzUx3L87NI7iCSBK2NYZYTMyynbXwuF9cu
      nyA5N0u4exthv4+FsT4WF1eYn53H1CssLy/jVMuIikDblr0MnDtFZ2cDLz1/Ej0fZyWeom77
      PkbPnyC5vEAhm6lVgT4sCAJouoGivurESiCk6gjBVmYnRgEblz+Cx+sGBwRRRBAEVEXGMSpc
      vdSHN9qEhwIL8SQH7rydyfFpREmhvqkR1R+jPqgwMthH1YT2lhjHn3+Gl198EX84iltVkd0B
      IuEgoiDT2N7GzPgwE8OD1+m4lqaqsHX7ZmYW83T39KD669m5dy+9vVuo5BIspvLsO7ifsYlF
      erduRvFE2bypDUEUEdfiT42PIgg2Lb0HGB26RkdzmFxqGcsRSSWWQC/R33cF0wbHFsgk4zS2
      tNO4aQdWPollO0ieILfddR89PZ2IokQ1u8BsPIEjeggGAkjSaj5u3n2I2w4dItzQwEz/OVRf
      mNzKPDMzc7WR4FuNVcly/sJVDhz+CIosUs6u0HdlgLvue+B9Sa+QSeENx5DepU/h8b4TKHXb
      6Gyrf937s9fOo7ua2Nzz2/dkWJoeIlUU2blr27tTCLh0/Bks26Zj7wM0RjxvKU7NAG4xr+73
      Jb5FL9fXh7dtB1F8C/EcB/ttpPFqOvDb3Ky/OsV6daq0IAi8Femv6m/ZNpIorusmCQKmbSOL
      IrZjAwKSKN4QXhZFLNvGAeQ1x7jXyxIFYf18dQr4jVOvX4/adOhbjKFXGE+XaAj4mE6sEPO6
      0CQP9S4B3RGJuGWSZZ2IR8WluikUc1RFNzEVptJFOmNhDMvGtgxcquumc1EAnwwD8TTNkRBB
      VSRZ0mkMuInnSrgEk6Qh0RFQqdgiPlkgU67gk0USVYuGgA/RMrAlBRkbwwZNqxLw+5hP5qjz
      u1jMl9nZ1oRp6CwVq7QEfcSzBZpCPlLFCpIkopk2reEAqWyGsiNhmgaGA5au4+AQCwUpV3VM
      B9wSZMo6uzuamU2sIEoSuu1gOQJatUwoEKQjEmQlk6aKjGmaGA60+FUuxdPct6WTpVSKFc2i
      zqsS8gepVkrIqhsJB1UUMHFIFqs1A/gwoMgKK/kCfrebmMdFUXaznM0QUEQmSg6KJBHxuhGw
      WC4Z9DaFmFhK0BULMbKYwHBsgqpCxchhOjaB9XOHsM9HT8SLLCtk8jmWHWj1uxheXt15ssmv
      EJRczGeLuCWHZd2mK+pnKlUgGAyxlE6SLumoioJbFtjaVE+mZJFcSSNZBsmqgrL2gJ1KZmgJ
      hxhbXqG9LsLowiKyL4JeyBN0q2imRVKz6W2MsJBK4VVlco5EZ0AkYSnIQhW/149HtFkpaRha
      BUtyYRhVepoamFxOEvS4yReLVAJeMrrD1sYg88lVj9QzmQIxz+ragbwlEFZFAl4/0wtzyP4o
      TjGDA9SpMinbxrFq4wAfAgQ8qookCNiWieZArlRB0zVymknU66FSrZAslVlIZ2mORiiVi7i9
      gdWnvGngESEWiWKYBu4bzh0iPg/LhTLFShnNBo8ksFioEPV5kR2TnGaTK1fBNikaNl5VxSVL
      CIKAV1WQRImwx0VjOIjf7UarViibNuAgSQrVSom8ZpDIFVAlkflsfnX3lXQWr8uFV1Xwu10o
      kshCOkN7LEoitcJS2UASXdhmhbF0Ca2YIVW1ELFYzJVRRIGZTIGuWJCo18XY0gpIMjgODgLx
      dIb2uihLyQSJqokEhL1u8pUqEysZuuqiCIKER5GRFYVquYSFiGOZzGeL+D1uLL1cawPcagzT
      ovI6A1/JQpG6gP91YtR4L6lVgW4xiiyhyDfveRX0uG+BNhuPWhWoxoamZgA1NjQ1A6ixoakZ
      QI0NTc0AamxoagZQY0NTM4AaG5qaAdTY0NwwELYl9EbBanyYmcqDWRvPf0fcYADe2rjw7ySC
      ANQM4B1RqwLV2NDcYACLk4N895++xz//8z/zi189QUl749X/r7Lq1UB/xwpUixl+/YuH+bcf
      /jvTi6l3LOc3mZyc/K33K+l5+kbm3pHsvnNnqKw5P5gYuMRCurh2x+HM6dPYb5sZ7OQAACAA
      SURBVBjzrWMYOnZtnuL7zg0GkFqYoPeOj/Otb32Le/c28/CvnntzCbbFD3/87+8occc2+bd/
      /T4H7/8Uf/LVL/DUz3/Acq76jmT9Jn7/b59JqeUSjMwsvSPZI4P9aGsGEAooHD91EQCzkuXa
      xPx78lp95rGfs5R5b/KixhtzU62/WqlQKpVYSaRoam7E0go8/PAvMB2B9t79fPTO7fz4336M
      Lat09u4lZKfpu3SJoy/v4iN7OvnFI0/iCLDnzgfZHjX53i+P0Rj1kitZfOc7f7G+eAIgH7+G
      p30/HY0RAL76mXt4/tRlPnVbM4888SwODg98+suEyfDof74EjsPHv/BVrhx7mof++I/xmRq/
      OvIcD+7r5PuPn6Y+qGArYb7x9S/ywgsv8Ed/9DVeevpxppazRJq6+INP3s/xo48zHs/isvIo
      nYfXNHG4eOpF+sfmKJaq/Mmf/yXP/McPkf1BMskku+76BAc2x3j4Z48gubxMTcX5xFrMWPs2
      cs/8CMe5j4mBS/Tuu4NyNsGjTzxNVavSuvUAH797D4898guyJZ3G7u18/K7dPPrrxyhVNPyN
      PXzm7l7+5Ue/IhaLkClU+dqXP83pMxeYSjn82Z/9MWGvSo33h5sM4NIrxyktRMmmU+w5vIkT
      Tz/Krvu/yL6uKP/23/+O/K42SmKQP//jL6HKEpIAF4dn+MR9d/Czf/0un/mjv6LBL/P3f//f
      2fKFe3DF2vnGn36GIw9/j8U8dFzX01TO5wnH6tavA9EohcwYjz12ka/9xd/gE3Um5xI89swz
      /Om3/hbVKjOzlCOVSLD6AHZIpVKYWj3NW/bwJ586zPEnfsqVyRUSiQTllUmGli2++ZWv8Oyj
      DzM+v4mh+Qp/81/+nKWh07w8/5ounb172bJzH8/++mGGZhKkUhm+8fW/wGcV+eEjR9FnbPY/
      +Afs667nR//09+vxBFGhu87DfLbC1dEFPvO1BxGreT77xT8ktTjJL586wWZfDlf7fv7y7p2M
      joziIPHQp79AKZvghz97jE/e0Q2eOv7kG1/nxOO/YMXycNfhgxz46Fdqhf995qa39V0PfIKv
      fvVrfOs7f83548+SzRaJ1YURBIGQR6KsNPDNr36SsWsDPPnMCzfEzVUtIn4VARFVFLCBwNqi
      DlG8uWIQbe0iPjG8fj0xPELX5k1UTPCrEqLsprujBd0W8cgikstHZ1vj+uLrVe9nq+ce96oX
      gGgkRL5QAkAr5VlaWuDkyZN46rvwUsblCQLgvm6+vePYnDr2LOf6rhEOh3EcB0lx43Ep665A
      8qUykWAABAG350aPA7ffvp8LZ05jqWG8skAyPs2TR56maEp4XTL5XJ5INAII9GzaRCmzxJNP
      HiGRqxJYczzl9/sRAEkSqVX9PzhuegOMDPThqS6SWpyhoWsnH9nXyM9++iP2be9k0QwRtVf4
      9ZGX6WhrZHxiEoSHyK0sMjQ2xUfv3sePf/IIPY1e3PWd3LzMA55/6inu/uxn8QCuYAubIjoP
      P/I4dT6Ra1PL/M13PkODPslPf/k4dS4NtXEHB7e18fPHjhCw84R6DtDQ4OfFZ48h5pdIF1cb
      4OdPvUSDWuTihTH+7Duf5OrLEG7fQVvgFF6/n8X5BQKxe6kknuSl40Hmhs4itK1WgRxDY2xq
      nsMtHfSNTbBr87036X3w4AF++cufsX97Jxf7r/FRy4E1Uwy3bmXi+z/knq/+VwBGhwfwBJpY
      np0kmSux/cDn+ecf/xprZQdjMwkOdvmxXT5yKwssJjKv24PpV2VOnTnDZz52L1611j/9fnHD
      ksitrhwz84sA+ENR2pobACjm0iwmc/R0dyGJAoVsksVElo6uLtyqTDa5TNEQaGuuJ5NcJlMy
      6e5ow9bLZCs2sbCffCaJO1jH8eeP8sAnPvGacTgOK8tx8hWL7q72VdcdjsPK0gJVR6G9pREc
      h+XFeUzRTWtTPbZlMDU1TX1TK7pWwUmNc3xWZF9XmMaWDvxeF4lEgoaGBky9ytTMLE2tHQS8
      bky9yvTMHI3NTei6Qyy6+kbIphIkcxVaGiIYKOjlArGGBgTbIp3NE4tGyCSXyZZNwn4XvmAU
      VX7trZZaWSYYbUCRBGzLYHpqmlBdM7ZRob6+nmopz9xiks6uLhTRYXZmCncghuyYBCNB8vkq
      sWiIYi6D5A2gYjE1M0d7Vzeu11kxdj1DGTDei66nDcgNBrA3ditVeefkFka5lla4c3f3rVbl
      llAzgHfO78W7NdS6lTtbb7UWNX4XucEALNPARlxbpO2gaToul+t9V8IyDcqV1T5v1eXGtbZT
      YI0a7zc3dM1cO/M0x6/OrF9/73v/3zsSOjZwgVTxzUeRX2X4laP839/9AU8++ST/8t1/oG8s
      /o7SfUNsg9OvnHtvZdb4veAtDVpq5QJnTp5gJr4CwMTEBLA6kjs9M49jmVy5eJYLfQOYlk0w
      HMMlC0xMTLA8P8XJU69Q0S0cx2Z06CrnL/ezOD9DvvyqPxyBuz/6ab7+9a/zX/7yy5w5cRbb
      Mum/fJ5r4zM4DizMTJBMJum/NoZjW1y7eonL/cPYtoNjmwz2XWRodArHgcW5KRKJZU6ePEky
      W2Rm/BpPPXWEvsFRHMdmeuwaJ0+fpayZ6zpduNxPfH6GQkUnn17m1Kkz5EpVHMdhZnw1fKGs
      vS8/Qo1bxw37A4grIzx29GUmR4e4ePEiY/NJPvHgXXz3H77LztsOcva5x5EbNvHM449w5513
      4lglfvXocwi5CWaqIWIujbLjYfDkUyjNu3n0B/8vQqCZOq/Bs6eGETJjTORdNPt0fvbES9x9
      +HYUSWRldpRzQ9NU80lOvnySPYfv4+ILjyKG20hNXGLZ8DN4/Fecm8ixd1cv5154gpwcRSou
      MJEyGTz1NIavicJcP3MlF2Nnj3BlvsKOTc088tjT3HFgN4PDk9x15x2k50cZWypR5zE5euoq
      QnaSqbxMo0fnF0eOc2B7Gz94+An27tnGY48+RW9PlF88eYa9O7qZX0rTutYz9mFipQpvcVOV
      Gr/BTY3gj33uK3z0th7A4e/+7h/QEhN4OvaxfesWeoImPzpx+SYhW/cdJnVpmLLhoTsaZGzt
      c1eokY/ffzemnuNc/zOUig71nbtpjNk0NTfjUV/r3ovVN9He3sG+A7cT8qn8bz8bY4cawjZN
      khPjqJLKF774ZdpCDk/Ec/ztFw+txbT435/4CdskP7Zpok+NE5AUPvrQx+iKybz08hkisXoi
      kSgtTfVoQRejUyeYWClQLFqUigp17TtojNo0NTWzPDFAXrfp7x+kUkxRkRvYs6WZVDZHW9fW
      9+EnqHEredNeIDXUQCnxCrbjMDU1TVtrJ5OLg1i2Q2Y5TsUCE5X77r8Xp5Lkx//xGG1v4NSs
      pb2NR577TxZ7Ovjqlz9/3R2BhuY2enp6Vi8dm+bWdj79+S+iOFWWUyVeOTq07ubaJ9ukSxoe
      M8/YYp7m1jY+8dk/wCPoLKYKXHpx+qa0X91D6rGf/4yPfOkbhKwMP3r0JVpaWvj1i8+w1NXB
      V770WapLQ2za4uLLn7+fhdkZgirsOXSYSMDNd7/3L/zt//A3bzOLa3yYuaEKFLbzSL56GqOr
      0xeSySS9O/cSlCscOfoCWTvA5x46TMRl8ejTL5CvWtRFYzSEZB574gj9Q2N85IGPoqIRbelB
      K2bYunUrjmORyZYoZpaxJBeqaHPqzEX2H9iHyOqUBdEfoykaWFVEEOhua+DRRx9naHSSLdt3
      YZZzNHVuxasIbOpu44lfP8rg2CyH7riTnZtbeezRxxgamWDTtp3YWoGGtk34XCKpVJpNm7eQ
      mBlmfKlIb2eMF4+dZCVdIBgOoxdSWKILWbB55ewlDj/wMYrxa7z48mk03HS3xjh65EnOX+xj
      y66DdLc334Kf6bdTqwK9cz7AgTCHn37/n2jt3Y/fJfLK2St853/8Nre6w/On3//uuk7nzl/l
      r/76W7h+x5YJ1QbC3jkf6EiwY1vMzc6gWwLtHR24lN8+xP9B4Ngmc7Nz6BYfGp3eLjUDeOf8
      XkyF2OjUDOCdc10j2ME033iT4xofZn4vZrTcEm7Iube6ttcydApljXAo8K4S13UdVVUxDANF
      udWtgRsx02kGHnh/dmp8I2ygDPjWzquAl9VJ11VAX7tnrd13A3Vf+hL8r//nB6rn7xPXGYCA
      1+t90wiOrfOzR35Ja3sruhTigcN7KFdNAn4v+VwOfzCIZVqIrO7+p2kVXG4/ieVFWpobyZeq
      hAJ+SoU8R55+hj/54z/iyJEj3HfPR3B5/Timjm6BW5UQZRXT0HFsE810qGYzBBobsDQNWXEj
      YVHRTdwuF7IItiBhW6tTMKqVMl6vl8XECgN9fTz4sY9TKRXxB0PI0pu3cvViEWd8/J3m6zvi
      LOBi1cNJgdXC7wV2AieBlrW/c6z+cHuB+mTyA9Xx9423/e7UloYJbbmL+w5v5pFfPsITj44R
      idSBKIDLQ8AfYWV5kYipkbQrSLFW0vNLKBh4JQvTMfGHm0iVYHZt7YFezDA42M/Mcg67nMUj
      gyx72f+pL3L5xefIJeM09+zGWJpDCElU1GZyi/MEFAe0HJvu+UOihSFWfDtZGDxFKbNMW0cX
      yYJJpVoisxRn6PwxBhZ17rv7MB3NH87GThXoYNUQYsBBVgs+rP5QK0AO6AQagDng3e+uu7F5
      2x1+aqSFwuIkWqWAIyrYoovb9u9mJZXj4MFDNMUCGKZOoVAEQWH3/gO4xNUWWiKZoa1zC4qW
      oWfXAVoaVwui6o9wx6GD2NUcqi/K9s56VnJFtKpGqVzhnnvvY2H0KukqiJKLg3ccxi07FPNp
      bG8jm1vCCICmaRRLJXyRRu44dACjWkCUXLR1drJt7x1sbnDTPzT6nmbge8khoAQ0slrNKQMS
      q1WfbcA+oMiqEaSA2g5i7563/QYQPTFu39HMSyfO8YlPf5rswjiXh2f5/Gc/xqmTx9m5/w4a
      Qh40TwC5nGbg8ln2HDyMYJQIeST6x+a548HPcfnMaVo7twCwc+dOEGUOHLoTu5xlueTwtS/v
      5+S502zetpNioUB77146GqPIboWQAnt37eDMK2fxqTqDI/Ps27yXa8dfoXNTL02xEILiZu/e
      vTiijJ5PsJhIUTFF9uzsfc8z8b2iAOSBA6wW8iHgNiDO6pNqDrgHmGXVOHbdGjV/r3hfu0GX
      pqcJd3Xxfmz35jg2fefPkK/Y3HbHnQTc720j2sxmufbNb76nMt8PIg89RP5P/2utG/Qd8rYN
      oJqeZbroZ2uzytB4gl3be940jm1prCSLNDbGGBwcXH3ivwnJRIJIQ8PrLqx//TRM0tk8hq7R
      3PzupyvYtk2xWHzzgO8Tk5OTjIyMsH//fpqamrhw4QLZbJa9e/cyMTFBLpfjwQcfxOv1MlX1
      1AzgHfK2q0CucCPXjj+P06CidB/ghaNHkQIxWgMiY3PL3HZgP1cuXybW0k1mboSy4bBtexdP
      He3jf/6f/pzRoT6W43PUd24nHx+j5LjZ3BChcedOpgcHqORS5EyVBr+L5NIcMytpgpFm3EaW
      xZUMuw7dg1dfxgz2kJofpZRJkCmU6Ni8m0p2iWdfeImvfPnzjE7MsXP/oXWnW79rDA0N8alP
      fYonnniCL37xi8zPz9PQ0IBhGGiaxq5du7hy5QqHDx9+c2E13pC33QgWRBXB0RlPa2yJqage
      L9cG+7k6Os0nH7ofwbbw+nwMDlylbErs7wqwYvjYtWMbEiCpfu67/376zx4howdpJMXJi+No
      wPT0DPl8jmqlyuT4OAuzC9x23wPMjw8xMbuEYlbwBMPkV+ZJl02mp6dZSuV54N6PMNB3jtlE
      jt27d+GVLPLFEpb1uzuw19bWxksvvbT+Fjp06BA7duzg6aefxu124/P5qFZrrhPfLe9g2pfA
      /u4oaSdIZmGUkfkMiqoS8Ur85zNHuXD2LFnNRFFUvF4PkqygyCrzMxNYgMfrRQB8oRbKyXGG
      4hX2bA3xwpFnWcmW8QeCZJfmMWQXqsuDIouoqovE7AgzWR3F1gmG6zh//FnmE5lVeYKAqqqo
      qkops0JeFwj7XUxNz77X+fWBEQwG0TSNQ4cOcfXqVaanpzl9+jT79+9nYWGB559/nu3bt99q
      NX/n+Z2YC2TpZX7xi0eIRXy07byXnd3173uat7oN8FZRFKXWBngXvGYAjoNqfPh/8A8OB9v+
      8JcqSZIwlMB74pJ9I/JaI1gQ0NV3N7enxgfPW/e9UeP1+B1b+lGjxntLzQBqbGhqBlBjQ1Mz
      gBobmpoB1NjQ1AygxoamZgA1NjQ1A6ixoakZQI0NTc0AamxoagZQY0NTM4AaG5qaAdTY0Nyw
      JFIW3ihYjRq/n9xgADujt0qNGjVuDbUqUI0NTc0AamxortsiyeHUYz+ha8ceFFHA1vP8x2PP
      s2vHB7Mx3NzAaf6ff/k5Y8ODnDlzlobOLYT9N7rUcmyTyakZopG36+rE4Mc//gV79+4GYOLy
      S1xLCnQ0ht8j7W8dZjHJo8+dYcfWVf9Mzz/6Ex5//iT9fZc43zfIth27UOU3e87ZjI9PEY3e
      nK/jF48xnJZpbwjd8PnD//qPnL7Qx6WLFwk2dBILrTpWNspZfvrLp9izaztg89N//wnbdu1G
      Et9eA3Np4hL/1z/+kLGRa1y8eJH2LXvwuW70EjUxPk4kGiW9MMFCziIW8r1l+flknJwmXv8G
      ENjZU8fpvikARi6eoqV3LzgO5WKedCbH6uphh0q5SDp743UqncF2HAytiqYbZNIpKtrqPsC2
      ZZJKpdANE12roBur7kq0ahnDWl3NqldLHLzv03z729/mr/70czz91HOrYSplUqk0lu1QzKZ4
      6umj5AslcBxKxTz5YglY9RSXSacolCqv+4Uzmez6uV4pUaqu6lYpFclk8zgO2NbqjvX5bIZS
      uYpp6Otpv6pvJpvDWVtGbejV9fuWoVHVDXBsSuUyAOVyGUOvUtV0suk0laq+nh/pdArdtACH
      UqmEVimt339NdgrDtLAtk3KlSiGXpVAqr3/fbDpNpVIlV3htLXexVOVLX/8zvv2d73DfjjqO
      Xx4HHIqF3HrcarmMYejr8svFLE899Z9k88W1+6/9nlqlSKl6s9t8TfTy7W9/m29/+9tsaa9b
      /1zxhmn1avRNLDH0ygs0bD2AKomYhrYqcy0vLdMglUq+lmelCuVifr1smFqFvXc+tJ5GQ1DB
      0Kskk6v5plXKHHnqKVKZHKH6NtobI1TLJfRXv5dlUy4VyOaL6+W0kMuSzRdwHJvhSyc52z9+
      YyO498A9HP/x43BbN5dGl/jKNz7FwIXj9E+t4JQSRHvvYU+DxWMvXqQx5EKJ9bCzUeLMwAwu
      p4AU206PusRj5xc4sL2DgbH/v707D47iOvA4/u05enpmdN/3iS4QIAsQCDAIcRqMwXawY3Cc
      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
      r/0/nsPCQNuZcHIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='dom vs list price, pop' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map/top10' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='mig_top10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='permits' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='permits (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='permits_yoy' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='permits_yoy (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pop, 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='population' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='relocation - inventory, comp (4)' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='relocation - med sale, comp (5)' width='192'>
      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
      oek610nr/wNJUdMYkiBAEwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
